<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.123 require</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:53:10Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_122.htm"
TITLE="3.2.122 rename"><LINK
REL="next"
HREF="ch03_124.htm"
TITLE="3.2.124 reset"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_122.htm"
TITLE="3.2.122 rename"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.122 rename"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_124.htm"
TITLE="3.2.124 reset"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.124 reset"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-REQUIRE"
>3.2.123 require</A
></H3
><PRE
CLASS="programlisting"
>require <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
>
require</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-12240"
></A
>This function asserts a dependency of some kind on its argument.
(If <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
> is not supplied, <B
CLASS="emphasis.bold"
>$_</B
> is used as the argument.)</P
><P
CLASS="para"
>If the argument is a string, this function includes and executes the Perl code
found in the separate file whose name is given by the string.  This is similar
to performing an <A
CLASS="xref"
HREF="ch03_032.htm"
TITLE="eval"
><B
CLASS="xref.cmd"
>eval</B
></A
> on the contents of the
file, except that <A
CLASS="xref"
HREF="ch03_123.htm"
TITLE="require"
><B
CLASS="xref.cmd"
>require</B
></A
> checks to see that
the library file has not been included already.  (It can thus be used to express
file dependencies without worrying about duplicate compilation.)  The function
also knows how to search the include path stored in the <B
CLASS="emphasis.bold"
>@INC</B
> array (see the section &quot;Special Variables&quot; in <A
CLASS="xref"
HREF="ch02_01.htm"
TITLE="The Gory Details"
>Chapter 2</A
>).</P
><P
CLASS="para"
>This form of the <A
CLASS="xref"
HREF="ch03_123.htm"
TITLE="require"
><B
CLASS="xref.cmd"
>require</B
></A
> function behaves
much like this subroutine:</P
><PRE
CLASS="programlisting"
>sub require {
    my($filename) = @_;
    return 1 if $INC{$filename};
    my($realfilename, $result);
    ITER: {
        foreach $prefix (@INC) {
            $realfilename = &quot;$prefix/$filename&quot;;
            if (-f $realfilename) {
                $result = eval `cat $realfilename`;
                last ITER;
            }
        }
        die &quot;Can't find $filename in \@INC&quot;;
    }
    die $@ if $@;
    die &quot;$filename did not return true value&quot; unless $result;
    $INC{$filename} = $realfilename;
    return $result;
}</PRE
><P
CLASS="para"
>Note that the file must return true as the last value to indicate
successful execution of any initialization code, so it's customary to
end such a file with <CODE
CLASS="literal"
>1;</CODE
> unless you're sure it'll return true
otherwise.</P
><P
CLASS="para"
>This operator differs from the now somewhat obsolete <CODE
CLASS="literal"
>do</CODE
>
<CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
> operator in that the file will not be included
again if it was included previously with either a <A
CLASS="xref"
HREF="ch03_123.htm"
TITLE="require"
><B
CLASS="xref.cmd"
>require</B
></A
> or <CODE
CLASS="literal"
>do</CODE
>
<CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
> command, and any difficulties will be detected
and reported as fatal errors (which may be trapped by use of <A
CLASS="xref"
HREF="ch03_032.htm"
TITLE="eval"
><B
CLASS="xref.cmd"
>eval</B
></A
>).  The <A
CLASS="xref"
HREF="ch03_028.htm"
TITLE="do"
><B
CLASS="xref.cmd"
>do</B
></A
> command
does know how to do the <B
CLASS="emphasis.bold"
>@INC</B
> path search,
however.</P
><P
CLASS="para"
>If <A
CLASS="xref"
HREF="ch03_123.htm"
TITLE="require"
><B
CLASS="xref.cmd"
>require</B
></A
>'s argument is a number, the
version number of the currently executing Perl binary (as known by <B
CLASS="emphasis.bold"
>$]</B
>) is compared to <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
>, and if
smaller, execution is immediately aborted. Thus, a script that requires Perl
version 5.003 can have as its first line:</P
><PRE
CLASS="programlisting"
>require 5.003;</PRE
><P
CLASS="para"
>and earlier versions of Perl will abort.</P
><P
CLASS="para"
>If <A
CLASS="xref"
HREF="ch03_123.htm"
TITLE="require"
><B
CLASS="xref.cmd"
>require</B
></A
>'s argument is a package name (see
<A
CLASS="xref"
HREF="ch03_106.htm"
TITLE="package"
><B
CLASS="xref.cmd"
>package</B
></A
>), <A
CLASS="xref"
HREF="ch03_123.htm"
TITLE="require"
><B
CLASS="xref.cmd"
>require</B
></A
> assumes an automatic <CODE
CLASS="literal"
>.pm</CODE
> suffix,
making it easy to load standard modules.  This is like <A
CLASS="xref"
HREF="ch03_185.htm"
TITLE="use"
><B
CLASS="xref.cmd"
>use</B
></A
>, except that it happens at run-time, not compile time,
and the <A
CLASS="xref"
HREF="ch03_074.htm"
TITLE="import"
><B
CLASS="xref.cmd"
>import</B
></A
> routine is not called.  For
example, to pull in Socket.pm without introducing any symbols into the current
package, say this:</P
><PRE
CLASS="programlisting"
>require Socket; # instead of &quot;use Socket;&quot;</PRE
><P
CLASS="para"
>However, one can get the same effect with the following, which has the
advantage of giving a compile-time warning if Socket.pm can't be located:</P
><PRE
CLASS="programlisting"
>use Socket ();</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_122.htm"
TITLE="3.2.122 rename"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.122 rename"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_124.htm"
TITLE="3.2.124 reset"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.124 reset"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.122 rename</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.124 reset</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
