<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.71 goto</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:50:39Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_070.htm"
TITLE="3.2.70 gmtime"><LINK
REL="next"
HREF="ch03_072.htm"
TITLE="3.2.72 grep"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_070.htm"
TITLE="3.2.70 gmtime"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.70 gmtime"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_072.htm"
TITLE="3.2.72 grep"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.72 grep"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-GOTO"
>3.2.71 goto</A
></H3
><PRE
CLASS="programlisting"
>goto <CODE
CLASS="replaceable"
><I
>LABEL</I
></CODE
>
goto <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
>
goto <EM
CLASS="emphasis"
>&amp;NAME</EM
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-10699"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10701"
></A
><CODE
CLASS="literal"
>goto</CODE
> <CODE
CLASS="replaceable"
><I
>LABEL</I
></CODE
> finds the statement labeled with
<CODE
CLASS="replaceable"
><I
>LABEL</I
></CODE
> and resumes execution there.  It may not be used to go into any
construct that requires initialization, such as a subroutine or a
<B
CLASS="emphasis.bold"
>foreach</B
> loop.  It also can't be used to go into a construct that is
optimized away.  It can be used to go almost anywhere else within the
dynamic scope,[<A
CLASS="footnote"
HREF="#AUTOID-10708"
>4</A
>]
including out of subroutines, but for that purpose it's
usually better to use some other construct such as <A
CLASS="xref"
HREF="ch03_081.htm"
TITLE="last"
><B
CLASS="xref.cmd"
>last</B
></A
> or <A
CLASS="xref"
HREF="ch03_027.htm"
TITLE="die"
><B
CLASS="xref.cmd"
>die</B
></A
>.
The author of Perl
has never felt the need to use this form of <B
CLASS="emphasis.bold"
>goto</B
> (in Perl, that is&nbsp;- C
is another matter).</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="AUTOID-10708"
>[4]</A
> This means that if it doesn't find the label in the current routine,
it looks back through the routines that called the current routine
for the label, thus making it nearly impossible to maintain your program.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>Going to even greater heights of orthogonality (and depths of idiocy),
Perl allows <CODE
CLASS="literal"
>goto</CODE
> <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
>, which expects <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
>
to evaluate to a label name, whose scope is <EM
CLASS="emphasis"
>guaranteed</EM
> to be unresolvable
until run-time since the label is unknown when the statement is compiled.
This allows for computed gotos per FORTRAN, but isn't necessarily
recommended[<A
CLASS="footnote"
HREF="#AUTOID-10718"
>5</A
>]
if you're optimizing for maintainability:</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="AUTOID-10718"
>[5]</A
> Understatement is reputed to be funny, so we thought we'd try one here.</P
></DIV
></BLOCKQUOTE
><PRE
CLASS="programlisting"
>goto +(&quot;FOO&quot;, &quot;BAR&quot;, &quot;GLARCH&quot;)[$i];</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-10722"
></A
><CODE
CLASS="literal"
>goto</CODE
> <CODE
CLASS="literal"
>&amp;</CODE
><CODE
CLASS="replaceable"
><I
>NAME</I
></CODE
> is highly magical, substituting a
call to the named subroutine for the currently running subroutine.
This is used by <CODE
CLASS="literal"
>AUTOLOAD</CODE
> subroutines that wish to load another
subroutine and then pretend that this subroutine&nbsp;- and not the original
one&nbsp;- had been called
in the first place (except that any modifications to <CODE
CLASS="literal"
>@_</CODE
> in the
original subroutine are propagated to the replacement subroutine).  After the
<A
CLASS="xref"
HREF="ch03_071.htm"
TITLE="goto"
><B
CLASS="xref.cmd"
>goto</B
></A
>, not even <A
CLASS="xref"
HREF="ch03_010.htm"
TITLE="caller"
><B
CLASS="xref.cmd"
>caller</B
></A
> will be able to tell that the original
routine was called first.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_070.htm"
TITLE="3.2.70 gmtime"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.70 gmtime"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_072.htm"
TITLE="3.2.72 grep"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.72 grep"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.70 gmtime</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.72 grep</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
