<HTML
><HEAD
>
<TITLE>[Chapter 7] 7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:01:41Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"><LINK
REL="prev"
HREF="ch07_009.htm"
TITLE="7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module"><LINK
REL="next"
HREF="ch07_011.htm"
TITLE="7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_009.htm"
TITLE="7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. The Standard Perl Library"
>Chapter 7<BR>The Standard Perl Library</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_011.htm"
TITLE="7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="AUTOID-19607"
>7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics</A
></H3
><PRE
CLASS="programlisting"
># As a pragma:
use diagnostics;
use diagnostics -verbose;

enable  diagnostics;
disable diagnostics;

# As a program:
$ perl program 2&gt;diag.out
$ splain [-v] [-p] diag.out</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="CH07.DIAG1"
></A
><A
CLASS="indexterm"
NAME="CH07.DIAG2"
></A
><A
CLASS="indexterm"
NAME="CH07.DIAG3"
></A
><A
CLASS="indexterm"
NAME="CH07.DIAG4"
></A
><A
CLASS="indexterm"
NAME="CH07.DIAG5"
></A
>The diagnostics module extends the terse diagnostics normally emitted by
both the Perl compiler and the Perl interpreter, augmenting them with the more
explicative and endearing descriptions found in <A
CLASS="xref"
HREF="ch09_01.htm"
TITLE="Diagnostic Messages"
>Chapter 9, <CITE
CLASS="chapter"
>Diagnostic Messages</CITE
></A
>.
It affects the compilation phase of your program rather than merely the
execution phase.</P
><P
CLASS="para"
>To use in your program as a pragma, merely say:</P
><PRE
CLASS="programlisting"
>use diagnostics;</PRE
><P
CLASS="para"
>at the start (or near the start) of your program.  (Note
that this enables Perl's <B
CLASS="emphasis.bold"
>-w</B
> flag.)  Your whole
compilation will then be subject to the enhanced diagnostics.
These are still issued to <CODE
CLASS="literal"
>STDERR</CODE
>.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-19631"
></A
><A
CLASS="indexterm"
NAME="AUTOID-19634"
></A
>Due to the interaction between run-time and compile-time issues,
and because it's probably not a very good idea anyway,
you may <EM
CLASS="emphasis"
>not</EM
> use:</P
><PRE
CLASS="programlisting"
>no diagnostics</PRE
><P
CLASS="para"
>to turn diagnostics off at compile time.  However, you can turn diagnostics on or
off at run-time by invoking <CODE
CLASS="literal"
>diagnostics::enable()</CODE
> and
<CODE
CLASS="literal"
>diagnostics::disable()</CODE
>, respectively.</P
><P
CLASS="para"
>The <CODE
CLASS="literal"
>-verbose</CODE
> argument first prints out the <EM
CLASS="emphasis"
>perldiag</EM
>(1) manpage
introduction before any other diagnostics.  The <CODE
CLASS="literal"
>$diagnostics::PRETTY</CODE
>
variable, if set in a <CODE
CLASS="literal"
>BEGIN</CODE
> block, results in nicer escape sequences
for pagers:</P
><PRE
CLASS="programlisting"
>BEGIN { $diagnostics::PRETTY = 1 }</PRE
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.12"
>7.2.10.1 The standalone program</A
></H4
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-19651"
></A
>While apparently a whole other program, <EM
CLASS="emphasis"
>splain</EM
> is actually nothing
more than a link to the (executable) <EM
CLASS="emphasis"
>diagnostics.pm</EM
> module.
It acts upon the standard error output of a Perl program, which you may
have treasured up in a file, or piped directly to <EM
CLASS="emphasis"
>splain</EM
>.</P
><P
CLASS="para"
>The <B
CLASS="emphasis.bold"
>-v</B
> flag has the same effect as:</P
><PRE
CLASS="programlisting"
>use diagnostics -verbose</PRE
><P
CLASS="para"
>The <B
CLASS="emphasis.bold"
>-p</B
> flag sets
<CODE
CLASS="literal"
>$diagnostics::PRETTY</CODE
> to true.  Since you're post-processing
with <EM
CLASS="emphasis"
>splain</EM
>, there's no sense in being able to
<CODE
CLASS="literal"
>enable()</CODE
> or <CODE
CLASS="literal"
>disable()</CODE
> diagnostics.</P
><P
CLASS="para"
>Output from <EM
CLASS="emphasis"
>splain</EM
> (unlike the pragma) is directed to <CODE
CLASS="literal"
>STDOUT</CODE
>.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.13"
>7.2.10.2 Examples</A
></H4
><P
CLASS="para"
>The following file is certain to trigger a few errors at both
run-time and compile-time:</P
><PRE
CLASS="programlisting"
>use diagnostics;
print NOWHERE &quot;nothing\n&quot;;
print STDERR &quot;\n\tThis message should be unadorned.\n&quot;;
warn &quot;\tThis is a user warning&quot;;
print &quot;\nDIAGNOSTIC TESTER: Please enter a &lt;CR&gt; here: &quot;;
my $a, $b = scalar &lt;STDIN&gt;;
print &quot;\n&quot;;
print $x/$y;</PRE
><P
CLASS="para"
>If you prefer to run your program first and look at its problems
afterward, do this while talking to a Bourne-like shell:</P
><PRE
CLASS="programlisting"
>perl -w test.pl 2&gt;test.out
./splain &lt; test.out</PRE
><P
CLASS="para"
>If you don't want to modify your source code, but still want on-the-fly
warnings, do this:</P
><PRE
CLASS="programlisting"
>perl -w -Mdiagnostics test.pl</PRE
><P
CLASS="para"
>If you want to control warnings on the fly, do something like this.
(Make sure the <A
CLASS="xref"
HREF="ch03_185.htm"
TITLE="use"
><B
CLASS="xref.cmd"
>use</B
></A
> comes first, 
or you won't be able to get at the <CODE
CLASS="literal"
>enable()</CODE
> or 
<CODE
CLASS="literal"
>disable()</CODE
> methods.)</P
><PRE
CLASS="programlisting"
>use diagnostics; # checks entire compilation phase
print &quot;\ntime for 1st bogus diags: SQUAWKINGS\n&quot;;
print BOGUS1 'nada';
print &quot;done with 1st bogus\n&quot;;

disable diagnostics; # only turns off run-time warnings
print &quot;\ntime for 2nd bogus: (squelched)\n&quot;;
print BOGUS2 'nada';
print &quot;done with 2nd bogus\n&quot;;

enable diagnostics; # turns back on run-time warnings
print &quot;\ntime for 3rd bogus: SQUAWKINGS\n&quot;;
print BOGUS3 'nada';
print &quot;done with 3rd bogus\n&quot;;

disable diagnostics;
print &quot;\ntime for 4th bogus: (squelched)\n&quot;;
print BOGUS4 'nada';
print &quot;done with 4th bogus\n&quot;;</PRE
><A
CLASS="indexterm"
NAME="AUTOID-19681"
></A
><A
CLASS="indexterm"
NAME="AUTOID-19682"
></A
><A
CLASS="indexterm"
NAME="AUTOID-19683"
></A
><A
CLASS="indexterm"
NAME="AUTOID-19684"
></A
><A
CLASS="indexterm"
NAME="AUTOID-19685"
></A
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_009.htm"
TITLE="7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_011.htm"
TITLE="7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
