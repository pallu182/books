<HTML
><HEAD
>
<TITLE>[Chapter 11] 11.2 Defining a Format</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:42Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch11_01.htm"
TITLE="11. Formats"><LINK
REL="prev"
HREF="ch11_01.htm"
TITLE="11.1 What Is a Format?"><LINK
REL="next"
HREF="ch11_03.htm"
TITLE="11.3 Invoking a Format"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_01.htm"
TITLE="11.1 What Is a Format?"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.1 What Is a Format?"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch11_01.htm"
TITLE="11. Formats"
>Chapter 11<BR>Formats</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_03.htm"
TITLE="11.3 Invoking a Format"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.3 Invoking a Format"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch11-35894"
>11.2 Defining a Format</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch11-idx-948267-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-948267-1"
></A
>A format is defined using a format definition. This format definition can appear anywhere in your program text, like a subroutine. A format definition looks like this:</P
><PRE
CLASS="programlisting"
>format someformatname =
fieldline
value_one, value_two, value_three
fieldline
value_one, value_two
fieldline
value_one, value_two, value_three
.</PRE
><P
CLASS="para"
>The first line contains the reserved word <A
CLASS="indexterm"
NAME="ch11-idx-948268-0"
></A
><CODE
CLASS="literal"
>format</CODE
>, followed by the format name and then an equal sign (<CODE
CLASS="literal"
>=</CODE
>). The <A
CLASS="indexterm"
NAME="ch11-idx-948269-0"
></A
>format name is chosen from yet another namespace, and follows the same rule as everything else. Because format names are never used within the body of the program (except within string values), you can safely use names that are identical to reserved words. As you'll see in the following section, <A
CLASS="xref"
HREF="ch11_03.htm"
TITLE="Invoking a Format"
>"Invoking a Format</A
>," most of your format names will probably be the same as filehandle names (which then makes them <EM
CLASS="emphasis"
>not</EM
> the same as reserved words...oh well).</P
><P
CLASS="para"
>Following the first line comes the <A
CLASS="indexterm"
NAME="ch11-idx-948270-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-948270-1"
></A
><EM
CLASS="emphasis"
>template</EM
> itself, spanning zero or more text lines. The end of the template is indicated by a line consisting of a single dot by itself.[<A
CLASS="footnote"
HREF="#ch11-pgfId-152273"
>2</A
>] Templates are sensitive to whitespace; this instance is one of the few in which the kind and amount of whitespace (space, newline, or tab) in the text of a Perl program actually matters.</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch11-pgfId-152273"
>[2]</A
> In text files, the last line needs to end with a newline to work properly.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>The template definition contains a series of <A
CLASS="indexterm"
NAME="ch11-idx-948271-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-948271-1"
></A
><EM
CLASS="emphasis"
>fieldlines</EM
>. Each fieldline may contain fixed text&nbsp;- text that will be printed out literally when the format is invoked. Here's an example of a fieldline with fixed text:</P
><PRE
CLASS="programlisting"
>Hello, my name is Fred Flintstone.</PRE
><P
CLASS="para"
>Fieldlines may also contain <A
CLASS="indexterm"
NAME="ch11-idx-948272-0"
></A
><EM
CLASS="emphasis"
>fieldholders</EM
> for variable text. If a line contains fieldholders, the following line of the template (called the <EM
CLASS="emphasis"
>value</EM
> line) dictates a series of scalar values&nbsp;- one per fieldholder&nbsp;- that provide the values that will be plugged into the fields. Here's an example of a fieldline with one fieldholder and the value line that follows:</P
><PRE
CLASS="programlisting"
>Hello, my name is @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
$name</PRE
><P
CLASS="para"
>The fieldholder is the <CODE
CLASS="literal"
>@&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</CODE
>, which specifies a left-justified text field with 11 characters. More complete details about fieldholders will be given in the section called <A
CLASS="xref"
HREF="ch11_04.htm"
TITLE="More About the Fieldholders"
>"More About the Fieldholders</A
>" later in this chapter.</P
><P
CLASS="para"
>If the fieldline has multiple fieldholders, it needs multiple values, so the values are separated on the value line by commas:</P
><PRE
CLASS="programlisting"
>Hello, my name is @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; and I'm @&lt;&lt; years old.
$name, $age</PRE
><P
CLASS="para"
>Putting all this together, we can create a simple format for an address label:</P
><PRE
CLASS="programlisting"
>format ADDRESSLABEL =
===============================
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; |
$name
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; |
$address
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;, @&lt; @&lt;&lt;&lt;&lt; |
$city,          $state, $zip
===============================
.</PRE
><P
CLASS="para"
>Note that the lines of equal signs at the top and bottom of the format have no fields, and thus have no value lines following. (If you put a value line following such a fieldline, it will be interpreted as another fieldline, and will most likely not do what you want.)</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch11-idx-948273-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-948273-1"
></A
>Whitespace within the value line is ignored. Some people choose to use additional whitespace in the value line to line up the variable with the fieldholder on the preceding line (such as putting <CODE
CLASS="literal"
>$zip</CODE
> underneath the third field of the previous line in this example), but that's just for looks. Perl doesn't care, and the change doesn't affect your output.</P
><P
CLASS="para"
>Text after the first newline in a value is discarded (except in the special case of multiline fieldholders, described later).</P
><P
CLASS="para"
>A <A
CLASS="indexterm"
NAME="ch11-idx-948275-0"
></A
>format definition is like a subroutine definition. It doesn't contain immediately executed code, and can therefore be placed anywhere in the file with the rest of the program&nbsp;- we tend to put ours toward the end of the file, ahead of my subroutine definitions.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_01.htm"
TITLE="11.1 What Is a Format?"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.1 What Is a Format?"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_03.htm"
TITLE="11.3 Invoking a Format"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.3 Invoking a Format"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>11.1 What Is a Format?</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>11.3 Invoking a Format</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
