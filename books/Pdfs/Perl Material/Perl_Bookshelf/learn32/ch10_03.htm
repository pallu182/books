<HTML
><HEAD
>
<TITLE>[Chapter 10] 10.3 Using Pathnames and Filenames</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:25Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch10_01.htm"
TITLE="10. Filehandles and File Tests"><LINK
REL="prev"
HREF="ch10_02.htm"
TITLE="10.2 Opening and Closing a Filehandle"><LINK
REL="next"
HREF="ch10_04.htm"
TITLE="10.4 A Slight Diversion: die"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_02.htm"
TITLE="10.2 Opening and Closing a Filehandle"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.2 Opening and Closing a Filehandle"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch10_01.htm"
TITLE="10. Filehandles and File Tests"
>Chapter 10<BR>Filehandles and File Tests</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_04.htm"
TITLE="10.4 A Slight Diversion: die"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.4 A Slight Diversion: die"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch10-15715"
>10.3 Using Pathnames and Filenames</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch10-idx-780032-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-780032-1"
></A
>When working with files and pathnames, you're faced with an interesting choice: what's the best way of specifying pathnames? Perl accepts either a slash or a backslash as a <A
CLASS="indexterm"
NAME="ch10-idx-778832-0"
></A
>path delimiter.[<A
CLASS="footnote"
HREF="#ch10-pgfId-778849"
>1</A
>] The slash is typically used by UNIX systems to delimit paths while the backslash is the traditional MS-DOS path delimiter. The slash is also used as a path delimiter when specifying URLs. The following statements all evaluate to the same thing, as far as Perl is concerned:[<A
CLASS="footnote"
HREF="#ch10-pgfId-778820"
>2</A
>]</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch10-pgfId-778849"
>[1]</A
> Acutally, pathnames are just passed to the operating system, which accepts either a slash or a backslash.</P
></DIV
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch10-pgfId-778820"
>[2]</A
> The only portable delimiter is the slash.  Of course, if you're using drive letters, your script isn't really portable anyway.</P
></DIV
></BLOCKQUOTE
><PRE
CLASS="programlisting"
>&quot;c:\\temp&quot;    # backslash (escaped for double quoted string)
'c:\temp'     # backslash (single quoted string)
&quot;c:/temp&quot;     # slash - no escape needed </PRE
><P
CLASS="para"
>There are a couple of tradeoffs associated with either approach. First we look at the <A
CLASS="indexterm"
NAME="ch10-idx-778830-0"
></A
>backslash: if you use the backslash to delimit paths, you have compatibilty problems with scripts that need to run on UNIX systems. You also need to remember to escape the backslash inside of double-quoted strings (or use single-quoted strings, because they are not interpolated). Finally, you need to remember to use a slash if you're outputting URL paths.</P
><P
CLASS="para"
>If you decide to use a <A
CLASS="indexterm"
NAME="ch10-idx-778831-0"
></A
>slash, you need to consider the following issues: although some Windows NT programs and utilities accept slashes as a delimiter, many do not. Traditionally, the slash is used to specify command-line options to MS-DOS programs, so many programs interpret slashes as command switches. Generally speaking, if your script is self contained, you won't run into any difficulties using slashes. However, if you need to pass pathnames to external programs, you'll probably need to use backslashes (unless you know that the program you're using accepts slashes).</P
><P
CLASS="para"
>Our practice is to use slashes unless we're passing a path to an external program, in which case we use backslashes. If you're using one style of delimiter, you could easily switch to the other style by doing a simple substitution. You must exercise caution if you're writing code that parses a path to extract components; make sure that your code either regularizes paths to use the same delimiter, or that it handles both delimiters when extracting components.[<A
CLASS="footnote"
HREF="#ch10-pgfId-778825"
>3</A
>]</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch10-pgfId-778825"
>[3]</A
> Or consider using <CODE
CLASS="literal"
>File::Basename</CODE
><A
CLASS="indexterm"
NAME="ch10-idx-778827-0"
></A
>, which does portable parsing of path components.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>Another issue to consider is the use of long filenames versus the traditional MS-DOS <A
CLASS="indexterm"
NAME="ch10-idx-778829-0"
></A
>8.3 filename (a maximum of eight characters, followed by an optional extension of up to three characters). You'll find that some programs do not handle long filenames gracefully (particularly those with embedded spaces in them). In fact, if you're communicating with 16-bit programs (of either the Windows 3.x or DOS variety), the odds are very high that they won't understand long filenames.</P
><P
CLASS="para"
>To convert a long filename to an 8.3 filename, use the <CODE
CLASS="literal"
>Win32::GetShortPathName</CODE
><A
CLASS="indexterm"
NAME="ch10-idx-778828-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-778828-1"
></A
>[<A
CLASS="footnote"
HREF="#ch10-pgfId-778948"
>4</A
>] function:</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch10-pgfId-778948"
>[4]</A
> For a discussion of the Win32 extensions, see <A
CLASS="xref"
HREF="appb_01.htm"
TITLE="Libraries and Modules"
>Appendix B, <CITE
CLASS="appendix"
>Libraries and Modules</CITE
></A
>.</P
></DIV
></BLOCKQUOTE
><PRE
CLASS="programlisting"
>use Win32;
$longname = 'words.secret';
$shortname = Win32::GetShortPathName($longname);
   # $shortname has WORDS~1.SEC</PRE
><P
CLASS="para"
>Perl can also be used to open files using UNC (Universal Naming Convention) pathnames. A <A
CLASS="indexterm"
NAME="ch10-idx-778884-0"
></A
>UNC path consists of two backslashes (or slashes) followed by a machine name and a share. The following example opens a file using a UNC pathname:</P
><PRE
CLASS="programlisting"
>open(F, '//someserver/share/somefile') ||
  die &quot;open: $!&quot;;
$cnt = 0;
while(&lt;F&gt;) {$cnt++;} # count the number of lines
close(F) || die &quot;close: $!&quot;;
print &quot;$cnt lines\n&quot;;</PRE
><P
CLASS="para"
>If you use backslashes, make sure that they're properly escaped:</P
><PRE
CLASS="programlisting"
>open(F, &quot;\\\\someserver\\share\\somefile&quot;) ||
  die &quot;open: $!&quot;;
$cnt = 0;
while(&lt;F&gt;) {$cnt++;} # count the number of lines
close(F) || die &quot;close: $!&quot;;
print &quot;$cnt lines\n&quot;;<A
CLASS="indexterm"
NAME="ch10-idx-780034-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-780034-1"
></A
></PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_02.htm"
TITLE="10.2 Opening and Closing a Filehandle"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.2 Opening and Closing a Filehandle"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_04.htm"
TITLE="10.4 A Slight Diversion: die"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.4 A Slight Diversion: die"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>10.2 Opening and Closing a Filehandle</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10.4 A Slight Diversion: die</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
