<HTML
><HEAD
>
<TITLE>[Chapter 16] 16.6 Setting Registry Values</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:36:24Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch16_01.htm"
TITLE="16. System Information"><LINK
REL="prev"
HREF="ch16_05.htm"
TITLE="16.5 Opening and Reading Registry Values"><LINK
REL="next"
HREF="ch16_07.htm"
TITLE="16.7 Exercises"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch16_05.htm"
TITLE="16.5 Opening and Reading Registry Values"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 16.5 Opening and Reading Registry Values"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch16_01.htm"
TITLE="16. System Information"
>Chapter 16<BR>System Information</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch16_07.htm"
TITLE="16.7 Exercises"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 16.7 Exercises"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch16-35373"
>16.6 Setting Registry Values</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch16-idx-649567-0"
></A
>In addition to creating keys, we can also set Registry values. To do so, we once again need an open key and the <CODE
CLASS="literal"
>SetValue</CODE
><A
CLASS="indexterm"
NAME="ch16-idx-649568-0"
></A
><A
CLASS="indexterm"
NAME="ch16-idx-649568-1"
></A
> or <CODE
CLASS="literal"
>SetValueEx</CODE
> function. <CODE
CLASS="literal"
>SetValue</CODE
> sets the default (unnamed) value for a key, while <CODE
CLASS="literal"
>SetValueEx</CODE
> allows you to create a new named value and set its information. The following example assumes that we already have the <CODE
CLASS="literal"
>$eriko</CODE
> key open:</P
><PRE
CLASS="programlisting"
>$eriko-&gt;SetValue(&quot;blah&quot;, REG_SZ, &quot;some_string&quot;);
$eriko-&gt;SetValueEx(&quot;foo&quot;, 0, REG_SZ, &quot;bar&quot;);</PRE
><P
CLASS="para"
>Even though these two functions look similar, they do quite different things. The first line (<CODE
CLASS="literal"
>SetValue</CODE
>) creates a new key called <CODE
CLASS="literal"
>blah</CODE
> and sets its default (unnamed) value to <CODE
CLASS="literal"
>some_string</CODE
>. The second line (<CODE
CLASS="literal"
>SetValueEx</CODE
>) creates a new value under <CODE
CLASS="literal"
>$eriko</CODE
> with a name of <CODE
CLASS="literal"
>foo</CODE
> and a value of <CODE
CLASS="literal"
>bar</CODE
>. In both cases, we're using the <CODE
CLASS="literal"
>REG_SZ</CODE
> data type, which indicates string data.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch16-28986"
>16.6.1 More Registry Operations</A
></H3
><P
CLASS="para"
>You can do more with the Registry than just read and modify key values. You can also delete keys and export/import hives from the Registry. As we mentioned above, be extremely prudent when deleting or importing things into your registry.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch16-idx-649569-0"
></A
>Here's an example of deleting a key:</P
><PRE
CLASS="programlisting"
>use Win32::Registry;
$main::HKEY_CURRENT_USER-&gt;Open(&quot;SOFTWARE&quot;, $Software) || 
        die &quot;Open: $!&quot;;
$Software-&gt;Create(&quot;ERIKO&quot;, $eriko) || 
        die &quot;Create: $!&quot;;     # open parent key
$eriko-&gt;DeleteKey(&quot;blah&quot;); # delete blah </PRE
><P
CLASS="para"
><CODE
CLASS="literal"
>DeleteKey</CODE
><A
CLASS="indexterm"
NAME="ch16-idx-649570-0"
></A
> will delete a key and all of its values&nbsp;- it will <EM
CLASS="emphasis"
>not</EM
> delete a key with subkeys. To do that, you need to remove all of the subkeys first. Here's how you do that:</P
><PRE
CLASS="programlisting"
>use Win32::Registry;
$main::HKEY_CURRENT_USER-&gt;Open(&quot;SOFTWARE&quot;, $Software) || 
        die &quot;Open: $!&quot;;
$Software-&gt;Create(&quot;ERIKO&quot;, $eriko) || 
        die &quot;Create: $!&quot;;
$eriko-&gt;Open(&quot;blah&quot;, $blah); # open blah 
$blah-&gt;GetKeys(\@kids);      # get all child keys
foreach $k (@kids) {         # kill all of them
    $blah-&gt;DeleteKey($k);
} 
$eriko-&gt;DeleteKey(&quot;blah&quot;);   # now, remove blah</PRE
><P
CLASS="para"
>This code assumes that none of the child keys of <CODE
CLASS="literal"
>blah</CODE
> have child keys themselves. If they do, you'll need to do something recursive to iterate over each subkey and all of its subkeys.</P
><P
CLASS="para"
>The following example saves a Registry hive to an external file using the <CODE
CLASS="literal"
>Save</CODE
> method:</P
><PRE
CLASS="programlisting"
>use Win32::Registry;
$main::HKEY_LOCAL_MACHINE-&gt;Open(&quot;SOFTWARE&quot;, $Software) || 
        die &quot;Open: $!&quot;;
$Software-&gt;Open(&quot;ActiveState&quot;, $ActiveState) || 
        die &quot;Open: $!&quot;;
# write ActiveState hive to perlkeys.reg
$ActiveState-&gt;Save(&quot;perlkeys.reg&quot;) || 
        die &quot;Save: $!&quot;;</PRE
><P
CLASS="para"
>You can connect to the Registry of a remote machine (but only to the HKEY_LOCAL_MACHINE or HKEY_USERS hives) using the <CODE
CLASS="literal"
>RegConnectRegistry</CODE
> function:</P
><PRE
CLASS="programlisting"
>use Win32::Registry;
Win32::Registry::RegConnectRegistry(&quot;\\\\somemachine&quot;, <A
CLASS="indexterm"
NAME="ch16-idx-649572-0"
></A
>
           HKEY_LOCAL_MACHINE, $key) || die &quot;connect: $!&quot;;<A
CLASS="indexterm"
NAME="ch16-idx-649545-0"
></A
><A
CLASS="indexterm"
NAME="ch16-idx-649545-1"
></A
></PRE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch16_05.htm"
TITLE="16.5 Opening and Reading Registry Values"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 16.5 Opening and Reading Registry Values"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch16_07.htm"
TITLE="16.7 Exercises"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 16.7 Exercises"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>16.5 Opening and Reading Registry Values</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>16.7 Exercises</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
