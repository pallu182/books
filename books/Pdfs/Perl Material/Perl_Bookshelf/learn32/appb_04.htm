<HTML
><HEAD
>
<TITLE>[Appendix B] B.4 Win32 Extensions</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:38:09Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appb_01.htm"
TITLE="B. Libraries and Modules"><LINK
REL="prev"
HREF="appb_03.htm"
TITLE="B.3 CPAN: Beyond the Standard Library"><LINK
REL="next"
HREF="appc_01.htm"
TITLE="C. Networking Clients"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appb_03.htm"
TITLE="B.3 CPAN: Beyond the Standard Library"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: B.3 CPAN: Beyond the Standard Library"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="appendix"
REL="up"
HREF="appb_01.htm"
TITLE="B. Libraries and Modules"
>Appendix B<BR>Libraries and Modules</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="appendix"
HREF="appc_01.htm"
TITLE="C. Networking Clients"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: C. Networking Clients"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appb-pgfId-1000002316"
>B.4 <A
CLASS="indexterm"
NAME="appb-idx-1000002672-0"
></A
>Win32 Extensions</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="appb-idx-1000004324-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000004324-1"
></A
>We've said that extensions consist of a module written in Perl, and a library written in C or C++. Win32 extensions are valuable tools because they provide Windows-specific functionality that otherwise wouldn't be present in the base language. The following list details the extensions included with the ActiveState distribution (these are also available for the standard distribution via the <EM
CLASS="emphasis"
>libwin32</EM
> distribution, available from CPAN).</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><B
CLASS="emphasis.bold"
>OLE </B
><EM
CLASS="emphasis"
>(</EM
><A
CLASS="indexterm"
NAME="appb-idx-1000002680-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002680-1"
></A
><B
CLASS="emphasis.bold"
>Win32::OLE </B
><EM
CLASS="emphasis"
>in the</EM
> <B
CLASS="emphasis.bold"
>libwin32 </B
><EM
CLASS="emphasis"
>distribution)</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Access to OLE automation and OLE variants</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002673-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002673-1"
></A
>Win32::Process</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Access to extended Win32 process creation and management; includes methods to kill, suspend, resume, and set the priorities of processes</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002681-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002681-1"
></A
>Win32::Semaphore</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides access to Win32 semaphores and synchronization</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002682-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002682-1"
></A
>Win32::IPC</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides sychronization for objects of type Semaphore, Mutex, Process, or ChangeNotify</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002683-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002683-1"
></A
>Win32::Mutex</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides access to Win32 mutex objects</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002684-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002684-1"
></A
>Win32::ChangeNotify</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides access to Win32 change-notification objects, letting you do things like monitor changes to directory trees</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002685-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002685-1"
></A
>Win32::EventLog</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides access to the Windows NT event log</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002686-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002686-1"
></A
>Win32::Registry</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides access to the Windows NT registry</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002687-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002687-1"
></A
>Win32::NetAdmin</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Lets you manipulate users and groups</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002688-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002688-1"
></A
>Win32::File</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Lets you get and set file attributes</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002689-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002689-1"
></A
>Win32::Service</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides a service control interface: lets you start, pause, resume, and stop services</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002690-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002690-1"
></A
>Win32::NetResource</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Lets you work with shares, both as a client and a server</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002691-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002691-1"
></A
>Win32::FileSecurity</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Lets you work with file permissions on NTFS</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002692-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002692-1"
></A
>Win32::Error</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides an interface to the system error codes and messages</P
></DD
></DL
><P
CLASS="para"
>The following Win32 extensions are not included in (but are readily available for) the ActiveState distribution, and are included with the <EM
CLASS="emphasis"
>libwin32</EM
> distribution.</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002693-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002693-1"
></A
>Win32::Internet</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides an interface to HTTP and FTP</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002694-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002694-1"
></A
>Win32::ODBC</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides an interface to ODBC data sources</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002695-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002695-1"
></A
>Win32::Shortcut</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Lets you create Explorer (shell) shortcuts</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002696-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002696-1"
></A
>Win32::Sound</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Plays <EM
CLASS="emphasis"
>.wav</EM
> files or uses system sounds</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002697-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002697-1"
></A
>Win32::AdminMisc</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides an extension of <CODE
CLASS="literal"
>Win32::NetAdmin</CODE
> that adds user impersonation, password manipulation, and DNS administration</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002698-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002698-1"
></A
>Win32::Clipboard</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Accesses the Windows NT clipboard</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002699-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002699-1"
></A
>Win32::Console</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Interfaces to console screen drawing; lets you do colors, boxes, etc.</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002700-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002700-1"
></A
>Win32::Pipe</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Provides access to named pipes on Windows NT</P
></DD
></DL
><P
CLASS="para"
>In addition to these extensions, a Win32 extension is included with the ActiveState distribution, and is available as part of <EM
CLASS="emphasis"
>libwin32</EM
>. The Win32 extension provides the following list functions (we've given a brief code snippet to illustrate how you might code each one):</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002701-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002701-1"
></A
>Win32::GetLastError </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the last error value generated by a call to a Win32 API function:</P
><PRE
CLASS="programlisting"
>use Win32;
$err = Win32::GetLastError();
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002702-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002702-1"
></A
>Win32::BuildNumber </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the build number of Perl for Win32:</P
><PRE
CLASS="programlisting"
>use Win32:
$build = Win32::BuildNumber(); # $build has 306 (or whatever it is)
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002703-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002703-1"
></A
>Win32::LoginName </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the username of the owner of the current perl process:</P
><PRE
CLASS="programlisting"
>use Win32;
$user = Win32::LoginName();   # $user has eriko (account name of 
    current user)
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002704-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002704-1"
></A
>Win32::NodeName </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the Microsoft Network node name of the current machine:</P
><PRE
CLASS="programlisting"
>use Win32;
$node = Win32::NodeName(); # $node has machine name 
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002705-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002705-1"
></A
>Win32::DomainName </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the name of the Microsoft Network domain that the owner of the current perl process is logged into:</P
><PRE
CLASS="programlisting"
>use Win32;
$domain = Win32::Domain();  # $domain has network domain name (not 
    TCP/IP domain name)
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002706-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002706-1"
></A
>Win32::FsType </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns a string naming the filesystem type of the currently active drive:</P
><PRE
CLASS="programlisting"
>use Win32;
$fs = Win32::FsType();     # $fs contains fs type, like NTFS or FAT
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002707-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002707-1"
></A
>Win32::GetCwd </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the current active drive and directory; this function does not return a UNC path:</P
><PRE
CLASS="programlisting"
>use Win32;
$cwd = Win32::GetCwd();      # $cwd has current working directory
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002708-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002708-1"
></A
>Win32::SetCwd NEW_DIRECTORY</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Sets the current active drive and directory; this function does not work with UNC paths:</P
><PRE
CLASS="programlisting"
>use Win32;
Win32::SetCwd(&quot;c:/temp&quot;) || die &quot;SetCwd: $!&quot;;
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002709-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002709-1"
></A
>Win32::GetOSVersion </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns an array (<CODE
CLASS="literal"
>$string</CODE
>, <CODE
CLASS="literal"
>$major</CODE
>, <CODE
CLASS="literal"
>$minor</CODE
>, <CODE
CLASS="literal"
>$build</CODE
>, and <CODE
CLASS="literal"
>$id</CODE
>). <CODE
CLASS="literal"
>$string</CODE
> is a descriptive string, <CODE
CLASS="literal"
>$major</CODE
> is the major version of the operating system, <CODE
CLASS="literal"
>$minor</CODE
> is the minor version of the operating system, <CODE
CLASS="literal"
>$build</CODE
> is the build number of the OS, and <CODE
CLASS="literal"
>$id</CODE
> is a digit that denotes the operating system variety (zero for Win32s, one for Windows 95, and two for Windows NT):</P
><PRE
CLASS="programlisting"
>use Win32;
($string, $major, $minor, $build, $id) = Win32::GetOSVersion();
@os = qw(Win32s, Win95, WinNT);
print &quot;$os[$id] $major\.$minor $string (Build $build)\n&quot;;
</PRE
><P
CLASS="para"
>The output on a Windows NT 4.0 system is:</P
><PRE
CLASS="programlisting"
>WinNT 4.0 Service Pack 3 (Build 1381)
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002710-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002710-1"
></A
>Win32::FormatMessage ERROR_CODE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Converts the supplied Win32 error bitmap (returned by <CODE
CLASS="literal"
>GetLastError</CODE
>) to a descriptive string:</P
><PRE
CLASS="programlisting"
>use Win32;
use Win32::WinError;  # for error constants
$msg = Win32::FormatMessage(ERROR_INTERNAL_ERROR);
# $msg contains the string: There is not enough space on disk
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002711-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002711-1"
></A
>Win32::Spawn COMMAND, ARGS, PID </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Spawns a new process using the supplied <CODE
CLASS="literal"
>COMMAND</CODE
>, passing in arguments in the string ARGS; the pid of the new process is stored in <CODE
CLASS="literal"
>PID</CODE
>:</P
><PRE
CLASS="programlisting"
>use Win32;
Win32::Spawn('c:/nt/system32/notepad.exe', undef, $pid); # $pid has
    new pid of notepad</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002712-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002712-1"
></A
>Win32::LookupAccountName SYSTEM, ACCOUNT, DOMAIN, SID, SIDTYPE </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Looks up <CODE
CLASS="literal"
>ACCOUNT</CODE
> on <CODE
CLASS="literal"
>SYSTEM</CODE
> and returns the domain name, <CODE
CLASS="literal"
>SID</CODE
>, and <CODE
CLASS="literal"
>SID</CODE
> type</P
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002713-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002713-1"
></A
>Win32::LookupAccountSID SYSTEM, SID, ACCOUNT, DOMAIN, SIDTYPE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Looks up <CODE
CLASS="literal"
>SID</CODE
> (Security ID) on <CODE
CLASS="literal"
>SYSTEM</CODE
> and returns the account name, domain name, and <CODE
CLASS="literal"
>SID</CODE
> type:</P
><PRE
CLASS="programlisting"
>use Win32;
Win32::LookupAccountSID(undef, $some_sid, $acct, $domain, $sidtype);
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002714-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002714-1"
></A
>Win32::InitiateSystemShutdown MACHINE, MESSAGE, TIMEOUT, FORCECLOSE, REBOOT </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Shuts down the specified <CODE
CLASS="literal"
>MACHINE</CODE
> (<CODE
CLASS="literal"
>undef</CODE
> means local machine), notifying users with the supplied <CODE
CLASS="literal"
>MESSAGE</CODE
>, within the specified <CODE
CLASS="literal"
>TIMEOUT</CODE
> (in seconds) interval. Forces closing of all documents without prompting the user if <CODE
CLASS="literal"
>FORCECLOSE</CODE
> is true, and reboots the machine if <CODE
CLASS="literal"
>REBOOT</CODE
> is true (be careful experimenting with this one):</P
><PRE
CLASS="programlisting"
>use Win32;
Win32::InitiateSystemShutdown(undef, &quot;Bye&quot;,  15, undef, 1);
# try to shut down local machine
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002715-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002715-1"
></A
>Win32::AbortSystemShutdown MACHINE </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Aborts a shutdown on the specified <CODE
CLASS="literal"
>MACHINE</CODE
>:</P
><PRE
CLASS="programlisting"
>use Win32;
Win32::AbortSystemShutdown(undef);  
# stop a shutdown on local machine
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002716-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002716-1"
></A
>Win32::GetTickCount </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the Win32 tick count, which is the number of milliseconds that have elasped since the system started:</P
><PRE
CLASS="programlisting"
>use Win32;
$tick = Win32::GetTickCount();  
# tick has number of milliseconds since system start
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002717-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002717-1"
></A
>Win32::IsWinNT </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns nonzero if the operating system is Windows NT:</P
><PRE
CLASS="programlisting"
>use Win32;
$winnt = Win32::IsWinNT();  # true if running on Windows NT
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002718-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002718-1"
></A
>Win32::IsWin95 </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns nonzero if the operating system is Windows 95:</P
><PRE
CLASS="programlisting"
>use Win32;
$win95 = Win32::IsWin95(); # true if running on Windows 95
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002719-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002719-1"
></A
>Win32::ExpandEnvironmentStrings STRING </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Takes the <CODE
CLASS="literal"
>STRING</CODE
> and builds a return string that has environment-variable strings replaced with their defined values:</P
><PRE
CLASS="programlisting"
>use Win32;
$path = Win32::ExpandEnvironmentStrings('%PATH%'); # $path contains expanded PATH
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002720-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002720-1"
></A
>Win32::GetShortPathName LONGPATHNAME </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the short (8.3) pathname for <CODE
CLASS="literal"
>LONGPATHNAME</CODE
>:</P
><PRE
CLASS="programlisting"
>use Win32;
$short = Win32::GetShortPathName('words.secret');   # $short now has 8.3 name (WORDS~1.SEC)
</PRE
></DD
><DT
CLASS="term"
><A
CLASS="indexterm"
NAME="appb-idx-1000002721-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000002721-1"
></A
>Win32::GetNextAvailDrive </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns a string in the form of <CODE
CLASS="literal"
>&lt;d&gt;:\</CODE
> where <CODE
CLASS="literal"
>&lt;d&gt;</CODE
> is the first available drive letter:</P
><PRE
CLASS="programlisting"
>use Win32;
$drive = Win32::GetNextAvailDrive();  # $drive has first drive (e.g,. B:)</PRE
></DD
></DL
><PRE
CLASS="programlisting"
><A
CLASS="indexterm"
NAME="appb-idx-1000004327-0"
></A
><A
CLASS="indexterm"
NAME="appb-idx-1000004327-1"
></A
></PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appb_03.htm"
TITLE="B.3 CPAN: Beyond the Standard Library"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: B.3 CPAN: Beyond the Standard Library"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="appendix"
HREF="appc_01.htm"
TITLE="C. Networking Clients"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: C. Networking Clients"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>B.3 CPAN: Beyond the Standard Library</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>C. Networking Clients</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
