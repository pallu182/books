<HTML
><HEAD
>
<TITLE>[Chapter 7] 7.2.30 File::Find&nbsp;- Traverse a File Tree</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:02:27Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"><LINK
REL="prev"
HREF="ch07_029.htm"
TITLE="7.2.29 File::Copy&nbsp;- Copy Files or Filehandles"><LINK
REL="next"
HREF="ch07_031.htm"
TITLE="7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_029.htm"
TITLE="7.2.29 File::Copy&nbsp;- Copy Files or Filehandles"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.29 File::Copy&nbsp;- Copy Files or Filehandles"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. The Standard Perl Library"
>Chapter 7<BR>The Standard Perl Library</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_031.htm"
TITLE="7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="AUTOID-22408"
>7.2.30 File::Find&nbsp;- Traverse a File Tree</A
></H3
><PRE
CLASS="programlisting"
>use File::Find;
find(\&amp;wanted, '<CODE
CLASS="replaceable"
><I
>dir1</I
></CODE
>', '<CODE
CLASS="replaceable"
><I
>dir2</I
></CODE
>'...);
sub wanted { ... }

use File::Find;
finddepth(\&amp;wanted, '<CODE
CLASS="replaceable"
><I
>dir1</I
></CODE
>', '<CODE
CLASS="replaceable"
><I
>dir2</I
></CODE
>'...);  # traverse depth-first
sub wanted { ... }</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-22416"
></A
><A
CLASS="indexterm"
NAME="AUTOID-22418"
></A
><A
CLASS="indexterm"
NAME="AUTOID-22420"
></A
><CODE
CLASS="literal"
>find()</CODE
> is similar to the UNIX
<EM
CLASS="emphasis"
>find</EM
>(1) command in that it traverses the specified
directories, performing whatever tests or other actions you request.  However,
these actions are given in the subroutine, <CODE
CLASS="literal"
>wanted()</CODE
>, which
you must define (but see <EM
CLASS="emphasis"
>find2perl</EM
> below).  For example, to
print out the names of all executable files, you could define
<CODE
CLASS="literal"
>wanted()</CODE
> this way:</P
><PRE
CLASS="programlisting"
>sub wanted {
    print &quot;$File::Find::name\n&quot; if -x;
}</PRE
><P
CLASS="para"
><CODE
CLASS="literal"
>$File::Find::dir</CODE
> contains the current directory name, and
<B
CLASS="emphasis.bold"
>$_</B
> the current filename within that directory.
<CODE
CLASS="literal"
>$File::Find::name</CODE
> contains
<CODE
CLASS="literal"
>&quot;$File::Find::dir/$_&quot;</CODE
>.  You are <A
CLASS="xref"
HREF="ch03_011.htm"
TITLE="chdir"
><B
CLASS="xref.cmd"
>chdir</B
></A
>ed to <CODE
CLASS="literal"
>$File::Find::dir</CODE
> when
<CODE
CLASS="literal"
>find()</CODE
> is called.  You can set
<CODE
CLASS="literal"
>$File::Find::prune</CODE
> to true in <CODE
CLASS="literal"
>wanted()</CODE
> in
order to prune the tree; that is, <CODE
CLASS="literal"
>find()</CODE
> will not descend
into any directory when <CODE
CLASS="literal"
>$File::Find::prune</CODE
> is set.</P
><P
CLASS="para"
>This library is primarily for use with the <EM
CLASS="emphasis"
>find2perl</EM
>(1) command,
which is supplied with the standard Perl distribution and converts a
<EM
CLASS="emphasis"
>find</EM
>(1) invocation to an appropriate <CODE
CLASS="literal"
>wanted()</CODE
> subroutine.
The command:</P
><PRE
CLASS="programlisting"
>find2perl / -name .nfs\* -mtime +7 \
             -exec rm -f {} \; -o -fstype nfs -prune</PRE
><P
CLASS="para"
>produces something like:</P
><PRE
CLASS="programlisting"
>sub wanted {
    /^\.nfs.*$/ &amp;&amp;
    (($dev, $ino, $mode, $nlink, $uid, $gid) = lstat($_)) &amp;&amp;
    int(-M _) &gt; 7 &amp;&amp;
    unlink($_)
    ||
    ($nlink || (($dev, $ino, $mode, $nlink, $uid, $gid) = lstat($_))) &amp;&amp;
    $dev &lt; 0 &amp;&amp;
    ($File::Find::prune = 1);
}</PRE
><P
CLASS="para"
>Set the variable <CODE
CLASS="literal"
>$File::Find::dont_use_nlink</CODE
> if
you're using the AFS.</P
><P
CLASS="para"
><CODE
CLASS="literal"
>finddepth()</CODE
> is just like <CODE
CLASS="literal"
>find()</CODE
>, except that it does a
depth-first search.</P
><P
CLASS="para"
>Here's another interesting <CODE
CLASS="literal"
>wanted()</CODE
> function.  It will find all
symbolic links that don't resolve:</P
><PRE
CLASS="programlisting"
>sub wanted {
    -l and not -e and print &quot;bogus link: $File::Find::name\n&quot;;
}</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_029.htm"
TITLE="7.2.29 File::Copy&nbsp;- Copy Files or Filehandles"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.29 File::Copy&nbsp;- Copy Files or Filehandles"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_031.htm"
TITLE="7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.2.29 File::Copy&nbsp;- Copy Files or Filehandles</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
