<HTML
><HEAD
>
<TITLE>[Chapter 7] 7.2.19 ExtUtils::Manifest&nbsp;- Utilities to Write and Check a MANIFEST File</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:02:10Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"><LINK
REL="prev"
HREF="ch07_018.htm"
TITLE="7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension"><LINK
REL="next"
HREF="ch07_020.htm"
TITLE="7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_018.htm"
TITLE="7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. The Standard Perl Library"
>Chapter 7<BR>The Standard Perl Library</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_020.htm"
TITLE="7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="AUTOID-21636"
>7.2.19 ExtUtils::Manifest&nbsp;- Utilities to Write and Check a
MANIFEST File</A
></H3
><PRE
CLASS="programlisting"
>require ExtUtils::Manifest;

ExtUtils::Manifest::mkmanifest();
ExtUtils::Manifest::manicheck();
ExtUtils::Manifest::filecheck();
ExtUtils::Manifest::fullcheck();
ExtUtils::Manifest::skipcheck();
ExtUtild::Manifest::manifind();
ExtUtils::Manifest::maniread($file);
ExtUtils::Manifest::manicopy($read, $target, $how);</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="CH07.MANIF1"
></A
><A
CLASS="indexterm"
NAME="CH07.MANIF2"
></A
><A
CLASS="indexterm"
NAME="CH07.MANIF3"
></A
><A
CLASS="indexterm"
NAME="CH07.MANIF4"
></A
>These routines automate the maintenance and use of a <EM
CLASS="emphasis"
>MANIFEST</EM
>
file.  A <EM
CLASS="emphasis"
>MANIFEST</EM
> file is essentially just a list of filenames,
one per line, with an optional comment on each line, separated by
whitespace (usually one or more tabs).  The idea is simply that you can
extract the filenames by saying:</P
><PRE
CLASS="programlisting"
>awk '{print $1}' MANIFEST</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21654"
></A
><CODE
CLASS="literal"
>mkmanifest()</CODE
> writes the names of all files in and below the
current directory to a file named in the global variable
<CODE
CLASS="literal"
>$ExtUtils::Manifest::MANIFEST</CODE
> (which defaults to <EM
CLASS="emphasis"
>MANIFEST</EM
>)
in the current directory.  As the counterpart to the <EM
CLASS="emphasis"
>awk</EM
> command
above, it works much like:</P
><PRE
CLASS="programlisting"
>find . -type f -print &gt; MANIFEST</PRE
><P
CLASS="para"
>except that it also checks the existing <EM
CLASS="emphasis"
>MANIFEST</EM
> file (if any) and
copies over any comments that are found there.
Also, all filenames that match any regular expression in a file
<EM
CLASS="emphasis"
>MANIFEST.SKIP</EM
> (if such a file exists) are ignored.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21665"
></A
><CODE
CLASS="literal"
>manicheck()</CODE
> checks whether all files listed in a <EM
CLASS="emphasis"
>MANIFEST</EM
>
file in the current directory really do exist.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21670"
></A
><CODE
CLASS="literal"
>filecheck()</CODE
> finds files below the current directory that are not
mentioned in the <EM
CLASS="emphasis"
>MANIFEST</EM
> file.  An optional <EM
CLASS="emphasis"
>MANIFEST.SKIP</EM
>
file will be consulted, and any filename matching a regular expression
in such a file will not be reported as missing in the <EM
CLASS="emphasis"
>MANIFEST</EM
> file.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21677"
></A
><CODE
CLASS="literal"
>fullcheck()</CODE
> does both a <CODE
CLASS="literal"
>manicheck()</CODE
> and a <CODE
CLASS="literal"
>filecheck()</CODE
>.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21683"
></A
><CODE
CLASS="literal"
>skipcheck()</CODE
> lists all files that are skipped due to your
<EM
CLASS="emphasis"
>MANIFEST.SKIP</EM
> file.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21688"
></A
><CODE
CLASS="literal"
>manifind()</CODE
> returns a hash reference.  The keys of the hash are the
files found below the current directory.  The values are null strings,
representing all the <EM
CLASS="emphasis"
>MANIFEST</EM
> comments that aren't there.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21693"
></A
><CODE
CLASS="literal"
>maniread($file)</CODE
> reads a named <EM
CLASS="emphasis"
>MANIFEST</EM
> file (defaults to
<EM
CLASS="emphasis"
>MANIFEST</EM
> in the current directory) and returns a hash reference,
the keys of which are the filenames, and the values of which are the
comments that <EM
CLASS="emphasis"
>are</EM
> there.  Er, which may be null if the
comments aren't there....</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21700"
></A
><CODE
CLASS="literal"
>manicopy($read, $target, $how)</CODE
> copies the files that are the
keys in the hash <CODE
CLASS="literal"
>%$read</CODE
> to the named target directory.  The
hash reference <CODE
CLASS="literal"
>$read</CODE
> is typically returned by the
<CODE
CLASS="literal"
>maniread()</CODE
> function.  <CODE
CLASS="literal"
>manicopy()</CODE
> is useful
for producing a directory tree identical to the intended distribution tree.  The
third parameter <CODE
CLASS="literal"
>$how</CODE
> can be used to specify a different
method of &quot;copying&quot;.  Valid values are &quot;<CODE
CLASS="literal"
>cp</CODE
>&quot;,
which actually copies the files, &quot;<CODE
CLASS="literal"
>ln</CODE
>&quot;, which
creates hard links, and &quot;<CODE
CLASS="literal"
>best</CODE
>&quot;, which mostly
links the files but copies any symbolic link to make a tree without any symbolic
link.  &quot;<CODE
CLASS="literal"
>best</CODE
>&quot; is the default, though it may not
be the best default.</P
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.30"
>7.2.19.1 Ignoring files</A
></H4
><P
CLASS="para"
>The <EM
CLASS="emphasis"
>MANIFEST.SKIP</EM
> file may contain regular expressions of
files that should be ignored by <CODE
CLASS="literal"
>mkmanifest()</CODE
> and
<CODE
CLASS="literal"
>filecheck()</CODE
>.  The regular expressions should appear one on
each line.  A typical example:</P
><PRE
CLASS="programlisting"
>\bRCS\b
^MANIFEST\.
(?i)^makefile$
~$
\.html$
\.old$
^blib/
^MakeMaker-\d</PRE
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.31"
>7.2.19.2 Exportability</A
></H4
><P
CLASS="para"
><CODE
CLASS="literal"
>mkmanifest()</CODE
>, <CODE
CLASS="literal"
>manicheck()</CODE
>, <CODE
CLASS="literal"
>filecheck()</CODE
>, <CODE
CLASS="literal"
>fullcheck()</CODE
>,
<CODE
CLASS="literal"
>maniread()</CODE
>, and <CODE
CLASS="literal"
>manicopy()</CODE
> are exportable.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.32"
>7.2.19.3 Global variables</A
></H4
><P
CLASS="para"
><CODE
CLASS="literal"
>$ExtUtils::Manifest::MANIFEST</CODE
> defaults to <CODE
CLASS="literal"
>MANIFEST</CODE
>.  Changing it
results in both a different <EM
CLASS="emphasis"
>MANIFEST</EM
> and a different
<EM
CLASS="emphasis"
>MANIFEST.SKIP</EM
> file.  This is useful if you want to maintain
different distributions for different audiences (say a user version
and a developer version including RCS).</P
><P
CLASS="para"
><CODE
CLASS="literal"
>$ExtUtils::Manifest::Quiet</CODE
> defaults to 0.  You can set it to a true
value to get all the functions to shutup already.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.33"
>7.2.19.4 Diagnostics</A
></H4
><P
CLASS="para"
>All diagnostic output is sent to <CODE
CLASS="literal"
>STDERR</CODE
>.</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
>Not in MANIFEST:</CODE
> <CODE
CLASS="replaceable"
><I
>file</I
></CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>A file excluded by a regular expression in <EM
CLASS="emphasis"
>MANIFEST.SKIP</EM
> was
missing from the <EM
CLASS="emphasis"
>MANIFEST</EM
> file.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>No such file:</CODE
> <CODE
CLASS="replaceable"
><I
>file</I
></CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>A file mentioned in a <EM
CLASS="emphasis"
>MANIFEST</EM
> file does not
exist.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>MANIFEST:</CODE
> <EM
CLASS="emphasis"
>$!</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The <EM
CLASS="emphasis"
>MANIFEST</EM
> file could not be opened.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Added to MANIFEST:</CODE
> <CODE
CLASS="replaceable"
><I
>file</I
></CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reported by <CODE
CLASS="literal"
>mkmanifest()</CODE
> if <CODE
CLASS="literal"
>$Verbose</CODE
> is set and a file is added
to <EM
CLASS="emphasis"
>MANIFEST</EM
>. <CODE
CLASS="literal"
>$Verbose</CODE
> is set to 1 by default.</P
></DD
></DL
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.34"
>7.2.19.5 See also</A
></H4
><P
CLASS="para"
>The <EM
CLASS="emphasis"
>ExtUtils::MakeMaker</EM
> library module generates a <EM
CLASS="emphasis"
>Makefile</EM
> with
handy targets for most of this functionality.</P
><A
CLASS="indexterm"
NAME="AUTOID-21779"
></A
><A
CLASS="indexterm"
NAME="AUTOID-21780"
></A
><A
CLASS="indexterm"
NAME="AUTOID-21781"
></A
><A
CLASS="indexterm"
NAME="AUTOID-21782"
></A
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_018.htm"
TITLE="7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_020.htm"
TITLE="7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
