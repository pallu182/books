<HTML
><HEAD
>
<TITLE>[Chapter 7] 7.2.61 Symbol&nbsp;- Generate Anonymous Globs; Qualify Variable Names</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:04:11Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"><LINK
REL="prev"
HREF="ch07_060.htm"
TITLE="7.2.60 subs&nbsp;- Predeclare Subroutine Names"><LINK
REL="next"
HREF="ch07_062.htm"
TITLE="7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_060.htm"
TITLE="7.2.60 subs&nbsp;- Predeclare Subroutine Names"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.60 subs&nbsp;- Predeclare Subroutine Names"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. The Standard Perl Library"
>Chapter 7<BR>The Standard Perl Library</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_062.htm"
TITLE="7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="AUTOID-26864"
>7.2.61 Symbol&nbsp;- Generate Anonymous Globs; Qualify Variable Names</A
></H3
><PRE
CLASS="programlisting"
>use Symbol;

$sym = gensym;
open($sym, &quot;<CODE
CLASS="replaceable"
><I
>filename</I
></CODE
>&quot;);
$_ = &lt;$sym&gt;;

ungensym $sym;      # no effect

print qualify(&quot;x&quot;);              # &quot;main::x&quot;
print qualify(&quot;x&quot;, &quot;FOO&quot;);       # &quot;FOO::x&quot;
print qualify(&quot;BAR::x&quot;);         # &quot;BAR::x&quot;
print qualify(&quot;BAR::x&quot;, &quot;FOO&quot;);  # &quot;BAR::x&quot;
print qualify(&quot;STDOUT&quot;, &quot;FOO&quot;);  # &quot;main::STDOUT&quot; (global)
print qualify(\*x);              # \*x--for example: GLOB(0x99530)
print qualify(\*x, &quot;FOO&quot;);       # \*x--for example: GLOB(0x99530)</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-26869"
></A
><A
CLASS="indexterm"
NAME="AUTOID-26871"
></A
><A
CLASS="indexterm"
NAME="AUTOID-26873"
></A
><A
CLASS="indexterm"
NAME="AUTOID-26875"
></A
><A
CLASS="indexterm"
NAME="AUTOID-26878"
></A
><CODE
CLASS="literal"
>gensym()</CODE
> creates an anonymous glob and returns a reference
to it.  Such a glob reference can be used as a filehandle or directory
handle.</P
><P
CLASS="para"
>For backward compatibility with older implementations that didn't
support anonymous globs, <CODE
CLASS="literal"
>ungensym()</CODE
> is also provided.
But it doesn't do anything.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-26885"
></A
><CODE
CLASS="literal"
>qualify()</CODE
> turns unqualified symbol names into qualified
variable names (for example, <CODE
CLASS="literal"
>myvar</CODE
> becomes
<CODE
CLASS="literal"
>MyPackage::myvar</CODE
>).  If it is given a second parameter,
<CODE
CLASS="literal"
>qualify()</CODE
> uses it as the default package; otherwise, it uses
the package of its caller.  Regardless, global variable names (for example,
<CODE
CLASS="literal"
>STDOUT</CODE
>, <CODE
CLASS="literal"
>%ENV</CODE
>, <CODE
CLASS="literal"
>%SIG</CODE
>) are
always qualified with <CODE
CLASS="literal"
>main::</CODE
>.</P
><P
CLASS="para"
>Qualification applies only to symbol names (strings).  References are
left unchanged under the assumption that they are glob references,
which are qualified by their nature.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_060.htm"
TITLE="7.2.60 subs&nbsp;- Predeclare Subroutine Names"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.60 subs&nbsp;- Predeclare Subroutine Names"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_062.htm"
TITLE="7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.2.60 subs&nbsp;- Predeclare Subroutine Names</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
