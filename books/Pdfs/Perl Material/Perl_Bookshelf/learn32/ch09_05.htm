<HTML
><HEAD
>
<TITLE>[Chapter 9] 9.5 Expression Modifiers</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:13Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. Miscellaneous Control Structures"><LINK
REL="prev"
HREF="ch09_04.htm"
TITLE="9.4 Labeled Blocks"><LINK
REL="next"
HREF="ch09_06.htm"
TITLE="9.6 &amp;&amp;, ||, and ?: as Control Structures"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_04.htm"
TITLE="9.4 Labeled Blocks"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.4 Labeled Blocks"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. Miscellaneous Control Structures"
>Chapter 9<BR>Miscellaneous Control Structures</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_06.htm"
TITLE="9.6 &amp;&amp;, ||, and ?: as Control Structures"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.6 &amp;&amp;, ||, and ?: as Control Structures"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch09-21157"
>9.5 Expression Modifiers</A
></H2
><P
CLASS="para"
>As Yet Another Way to indicate "if this, then that," Perl allows you to tag an <A
CLASS="indexterm"
NAME="ch09-idx-903245-0"
></A
><EM
CLASS="emphasis"
>if</EM
> modifier onto an expression that is a standalone statement, like this:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="replaceable"
><I
>some_expression</I
></CODE
> if <CODE
CLASS="replaceable"
><I
>control_expression</I
></CODE
>;</PRE
><P
CLASS="para"
>In this case, <CODE
CLASS="replaceable"
><I
>control_expression</I
></CODE
> is evaluated first for its truth value (using the same rules as always), and if true, <CODE
CLASS="replaceable"
><I
>some_expression</I
></CODE
> is evaluated next. This method is roughly equivalent to:</P
><PRE
CLASS="programlisting"
>if (<CODE
CLASS="replaceable"
><I
>control_expression</I
></CODE
>) {
        <CODE
CLASS="replaceable"
><I
>some_expression</I
></CODE
>;
}</PRE
><P
CLASS="para"
>except that you don't need the extra punctuation, the statement reads backwards, and the expression must be a simple expression (not a block of statements). Many times, however, this inverted description turns out to be the most natural way to state the problem. For example, here's how you can exit from a loop when a certain condition arises:</P
><PRE
CLASS="programlisting"
>LINE: while (&lt;STDIN&gt;) {
        <A
CLASS="indexterm"
NAME="ch09-idx-903261-0"
></A
>last LINE if /^From: /;
}</PRE
><P
CLASS="para"
>See how much easier that is to write? And you can even read it in a normal English way: "last line if it begins with From."</P
><P
CLASS="para"
>Other parallel forms include the following:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
> <A
CLASS="indexterm"
NAME="ch09-idx-613-0"
></A
>unless <CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
>;# like: unless (<CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
>) { <CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
>; }
<CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
> <A
CLASS="indexterm"
NAME="ch09-idx-615-0"
></A
>while <CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
>; # like: while (<CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
>) { <CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
>; }
<CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
> <A
CLASS="indexterm"
NAME="ch09-idx-617-0"
></A
>until <CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
>; # like: until (<CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
>) { <CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
>; }</PRE
><P
CLASS="para"
>All of these forms evaluate <CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
> first, and based on that evaluation, do or don't do something with <CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
>.</P
><P
CLASS="para"
>For example, here's how to find the first power of two greater than a given number:</P
><PRE
CLASS="programlisting"
>chomp($n = &lt;STDIN&gt;);
$i = 1;                   # initial guess
$i *= 2 until $i &gt; $n;    # iterate until we find it</PRE
><P
CLASS="para"
>Once again, we gain some clarity and reduce the clutter.</P
><P
CLASS="para"
>These forms don't nest: you can't say <CODE
CLASS="replaceable"
><I
>exp3</I
></CODE
> <CODE
CLASS="literal"
>while</CODE
> <CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
> <CODE
CLASS="literal"
>if</CODE
> <CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
>. This restriction is because the form <CODE
CLASS="replaceable"
><I
>exp2</I
></CODE
> <CODE
CLASS="literal"
>if</CODE
> <CODE
CLASS="replaceable"
><I
>exp1</I
></CODE
> is no longer an expression, but a full-blown statement, and you can't tack one of these modifiers on after a statement.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_04.htm"
TITLE="9.4 Labeled Blocks"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.4 Labeled Blocks"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_06.htm"
TITLE="9.6 &amp;&amp;, ||, and ?: as Control Structures"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.6 &amp;&amp;, ||, and ?: as Control Structures"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.4 Labeled Blocks</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>9.6 &amp;&amp;, ||, and ?: as Control Structures</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
