<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.14 chop</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:48:01Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_013.htm"
TITLE="3.2.13 chomp"><LINK
REL="next"
HREF="ch03_015.htm"
TITLE="3.2.15 chown"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_013.htm"
TITLE="3.2.13 chomp"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.13 chomp"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_015.htm"
TITLE="3.2.15 chown"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.15 chown"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-CHOP"
>3.2.14 chop</A
></H3
><PRE
CLASS="programlisting"
>chop <CODE
CLASS="replaceable"
><I
>VARIABLE</I
></CODE
>
chop <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>
chop</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9213"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9215"
></A
>This function chops off the last character of a string and returns the
character chopped.  The <A
CLASS="xref"
HREF="ch03_014.htm"
TITLE="chop"
><B
CLASS="xref.cmd"
>chop</B
></A
> operator is used primarily to
remove the newline from the end of an input record, but is more
efficient than <CODE
CLASS="literal"
>s/\n$//</CODE
>.
If <CODE
CLASS="replaceable"
><I
>VARIABLE</I
></CODE
> is omitted, the function chops the <B
CLASS="emphasis.bold"
>$_</B
> variable.  For
example:</P
><PRE
CLASS="programlisting"
>while (&lt;PASSWD&gt;) {
    chop;   # avoid \n on last field
    @array = split /:/;
    ...
}</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9224"
></A
>If you chop a <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>, each string in the list is chopped:</P
><PRE
CLASS="programlisting"
>@lines = `cat myfile`;
chop @lines;</PRE
><P
CLASS="para"
>You can actually chop anything that is an lvalue, including an
assignment:</P
><PRE
CLASS="programlisting"
>chop($cwd = `pwd`);
chop($answer = &lt;STDIN&gt;);</PRE
><P
CLASS="para"
>Note that this is different from:</P
><PRE
CLASS="programlisting"
>$answer = chop($tmp = &lt;STDIN&gt;);  # WRONG</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9234"
></A
>which puts a newline into <CODE
CLASS="literal"
>$answer</CODE
>, because <A
CLASS="xref"
HREF="ch03_014.htm"
TITLE="chop"
><B
CLASS="xref.cmd"
>chop</B
></A
> returns the
character chopped, not the remaining string (which is in <CODE
CLASS="literal"
>$tmp</CODE
>).  One way
to get the result intended here is with <A
CLASS="xref"
HREF="ch03_162.htm"
TITLE="substr"
><B
CLASS="xref.cmd"
>substr</B
></A
>:</P
><PRE
CLASS="programlisting"
>$answer = substr &lt;STDIN&gt;, 0, -1;</PRE
><P
CLASS="para"
>But this is more commonly written as:</P
><PRE
CLASS="programlisting"
>chop($answer = &lt;STDIN&gt;);</PRE
><P
CLASS="para"
>To chop more than one character, use
<A
CLASS="xref"
HREF="ch03_162.htm"
TITLE="substr"
><B
CLASS="xref.cmd"
>substr</B
></A
>
as an lvalue, assigning a null string.
The following removes the last
five characters of
<CODE
CLASS="literal"
>$caravan</CODE
>:</P
><PRE
CLASS="programlisting"
>substr($caravan, -5) = &quot;&quot;;</PRE
><P
CLASS="para"
>The negative subscript causes
<A
CLASS="xref"
HREF="ch03_162.htm"
TITLE="substr"
><B
CLASS="xref.cmd"
>substr</B
></A
>
to count from the end of the string instead of the beginning.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_013.htm"
TITLE="3.2.13 chomp"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.13 chomp"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_015.htm"
TITLE="3.2.15 chown"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.15 chown"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.13 chomp</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.15 chown</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
