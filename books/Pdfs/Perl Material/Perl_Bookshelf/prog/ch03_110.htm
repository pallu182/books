<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.110 print</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:52:28Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_109.htm"
TITLE="3.2.109 pos"><LINK
REL="next"
HREF="ch03_111.htm"
TITLE="3.2.111 printf"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_109.htm"
TITLE="3.2.109 pos"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.109 pos"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_111.htm"
TITLE="3.2.111 printf"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.111 printf"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-PRINT"
>3.2.110 print</A
></H3
><PRE
CLASS="programlisting"
>print <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>
print <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>
print</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-11914"
></A
><A
CLASS="indexterm"
NAME="AUTOID-11917"
></A
><A
CLASS="indexterm"
NAME="AUTOID-11919"
></A
><A
CLASS="indexterm"
NAME="AUTOID-11922"
></A
>This function prints a string or a comma-separated list of strings.
The function returns 1 if successful, 0 otherwise.  <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> may be
a scalar variable name (unsubscripted), in which case the variable
contains either the name of the actual filehandle or a reference to
a filehandle object from one of the object-oriented filehandle packages.
<CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> may also be a block that returns either kind of value:</P
><PRE
CLASS="programlisting"
>print { $OK ? &quot;STDOUT&quot; : &quot;STDERR&quot; } &quot;stuff\n&quot;;
print { $iohandle[$i] } &quot;stuff\n&quot;;</PRE
><P
CLASS="para"
>Note that if <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> is a variable and the next
token is a term, it may be misinterpreted as an operator unless you
interpose a <B
CLASS="emphasis.bold"
>+</B
> or put parentheses around the arguments.
For example:</P
><PRE
CLASS="programlisting"
>print $a - 2;   # prints $a - 2 to default filehandle (usually STDOUT)
print $a (- 2); # prints -2 to filehandle specified in $a
print $a -2;    # ditto (weird parsing rules :-)</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-11933"
></A
>If <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> is omitted, the function prints to the currently
selected output filehandle, initially <CODE
CLASS="literal"
>STDOUT</CODE
>.
To set the default output filehandle to something other than
<CODE
CLASS="literal"
>STDOUT</CODE
> use the <CODE
CLASS="literal"
>select</CODE
>(<CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>) operation.[<A
CLASS="footnote"
HREF="#AUTOID-11940"
>7</A
>]
If <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
> is also omitted, prints <B
CLASS="emphasis.bold"
>$_</B
>.  Note that, because
<A
CLASS="xref"
HREF="ch03_110.htm"
TITLE="print"
><B
CLASS="xref.cmd"
>print</B
></A
> takes a <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>, anything in the <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>
is evaluated in
list context, and any subroutine that you call will likely have one or more
of its own internal expressions evaluated in list context.
Thus, when you say:</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="AUTOID-11940"
>[7]</A
> Thus, <CODE
CLASS="literal"
>STDOUT</CODE
> isn't really the default filehandle for
<A
CLASS="xref"
HREF="ch03_110.htm"
TITLE="print"
><B
CLASS="xref.cmd"
>print</B
></A
>.  It's merely the default default filehandle.</P
></DIV
></BLOCKQUOTE
><PRE
CLASS="programlisting"
>print OUT &lt;STDIN&gt;;</PRE
><P
CLASS="para"
>it is not going to print out the next line from standard input, but all the rest
of the lines from standard input up to end-of-file, since that's what
<CODE
CLASS="literal"
>&lt;STDIN&gt;</CODE
> returns in list context.  Also, remembering the
if-it-looks-like-a-function-it-is-a-function rule, be careful not to follow the
<A
CLASS="xref"
HREF="ch03_110.htm"
TITLE="print"
><B
CLASS="xref.cmd"
>print</B
></A
> keyword with a left parenthesis unless
you want the corresponding right parenthesis to terminate the arguments to the
<A
CLASS="xref"
HREF="ch03_110.htm"
TITLE="print"
><B
CLASS="xref.cmd"
>print</B
></A
>&nbsp;- interpose a <B
CLASS="emphasis.bold"
>+</B
> or put parens around all the arguments:</P
><PRE
CLASS="programlisting"
>print (1+2)*3, &quot;\n&quot;;            # WRONG
print +(1+2)*3, &quot;\n&quot;;           # ok
print ((1+2)*3, &quot;\n&quot;);          # ok</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_109.htm"
TITLE="3.2.109 pos"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.109 pos"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_111.htm"
TITLE="3.2.111 printf"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.111 printf"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.109 pos</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.111 printf</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
