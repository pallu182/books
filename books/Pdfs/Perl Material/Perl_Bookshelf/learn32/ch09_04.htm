<HTML
><HEAD
>
<TITLE>[Chapter 9] 9.4 Labeled Blocks</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:11Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. Miscellaneous Control Structures"><LINK
REL="prev"
HREF="ch09_03.htm"
TITLE="9.3 The redo Statement"><LINK
REL="next"
HREF="ch09_05.htm"
TITLE="9.5 Expression Modifiers"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_03.htm"
TITLE="9.3 The redo Statement"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.3 The redo Statement"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. Miscellaneous Control Structures"
>Chapter 9<BR>Miscellaneous Control Structures</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_05.htm"
TITLE="9.5 Expression Modifiers"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.5 Expression Modifiers"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch09-24800"
>9.4 Labeled Blocks</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch09-idx-903241-0"
></A
>What if you want to jump out of the block that contains the innermost block&nbsp;- to exit from two nested blocks at once? In C, you'd resort to that much maligned <A
CLASS="indexterm"
NAME="ch09-idx-903240-0"
></A
><CODE
CLASS="literal"
>goto</CODE
> to get you out. No such <A
CLASS="indexterm"
NAME="ch09-idx-903258-0"
></A
>kludge is required in Perl. You can use <CODE
CLASS="literal"
>last</CODE
>, <CODE
CLASS="literal"
>next</CODE
>, and <CODE
CLASS="literal"
>redo</CODE
> on any enclosing block by giving the block a name with a <A
CLASS="indexterm"
NAME="ch09-idx-903239-0"
></A
><EM
CLASS="emphasis"
>label</EM
>.</P
><P
CLASS="para"
>A label is yet another type of name from yet another namespace following the same rules as scalars, arrays, hashes, and subroutines. As we'll see, however, a label doesn't have a special prefix punctuation character (like <CODE
CLASS="literal"
>$</CODE
> for scalars, <CODE
CLASS="literal"
>&amp;</CODE
> for subroutines, and so on), so a label named <CODE
CLASS="literal"
>print</CODE
> conflicts with the reserved word <CODE
CLASS="literal"
>print</CODE
>, and would not be allowed. For this reason, you should choose labels that consist entirely of uppercase letters and digits, which will never be chosen for a reserved word in the future. Besides, using all uppercase makes an item stand out better within the text of a mostly lowercase program.</P
><P
CLASS="para"
>After you've chosen your label, place it immediately in front of the statement containing the block, and follow it with a <A
CLASS="indexterm"
NAME="ch09-idx-903243-0"
></A
>colon, like this:</P
><PRE
CLASS="programlisting"
>SOMELABEL: while (<CODE
CLASS="replaceable"
><I
>condition</I
></CODE
>) {
        <CODE
CLASS="replaceable"
><I
>statement</I
></CODE
>;
        <CODE
CLASS="replaceable"
><I
>statement</I
></CODE
>;
        <CODE
CLASS="replaceable"
><I
>statement</I
></CODE
>;
        if (<CODE
CLASS="replaceable"
><I
>nuthercondition</I
></CODE
>) {
            last SOMELABEL;
        }
}</PRE
><P
CLASS="para"
>We added <CODE
CLASS="literal"
>SOMELABEL</CODE
> as a parameter to <CODE
CLASS="literal"
>last</CODE
>. This parameter tells Perl to exit the block named <CODE
CLASS="literal"
>SOMELABEL</CODE
>, rather than exiting just the innermost block. In this case, we don't have anything but the innermost block. But suppose we had <A
CLASS="indexterm"
NAME="ch09-idx-588-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-588-1"
></A
>nested loops:</P
><PRE
CLASS="programlisting"
>OUTER: <A
CLASS="indexterm"
NAME="ch09-idx-903259-0"
></A
>for ($i = 1; $i &lt;= 10; $i++) {
        INNER: for ($j = 1; $j &lt;= 10; $j++) {
            if ($i * $j == 63) {
                print &quot;$i times $j is 63!\n&quot;;
                last OUTER;
            }
            if ($j &gt;= $i) {
                next OUTER;
            }
        }
}</PRE
><P
CLASS="para"
>This set of statements tries all successive values of two small numbers multiplied together until it finds a pair whose <A
CLASS="indexterm"
NAME="ch09-idx-903260-0"
></A
>product is 63 (7 and 9). After the pair is found, there's no point in testing other numbers, so the first <CODE
CLASS="literal"
>if</CODE
> statement exits both <CODE
CLASS="literal"
>for</CODE
> loops using <CODE
CLASS="literal"
>last</CODE
> with a label. The second <CODE
CLASS="literal"
>if</CODE
> ensures that the bigger of the two numbers will always be the first number by skipping to the next iteration of the outer loop as soon as the condition would no longer hold. This means that the numbers will be tested with (<CODE
CLASS="literal"
>$i</CODE
>, <CODE
CLASS="literal"
>$j</CODE
>) being (<CODE
CLASS="literal"
>1</CODE
>,<CODE
CLASS="literal"
>1</CODE
>), (<CODE
CLASS="literal"
>2</CODE
>,<CODE
CLASS="literal"
>1</CODE
>), (<CODE
CLASS="literal"
>2</CODE
>,<CODE
CLASS="literal"
>2</CODE
>), (<CODE
CLASS="literal"
>3</CODE
>,<CODE
CLASS="literal"
>1</CODE
>), (<CODE
CLASS="literal"
>3</CODE
>,<CODE
CLASS="literal"
>2</CODE
>), (<CODE
CLASS="literal"
>3</CODE
>,<CODE
CLASS="literal"
>3</CODE
>), (<CODE
CLASS="literal"
>4</CODE
>,<CODE
CLASS="literal"
>1</CODE
>), and so on.</P
><P
CLASS="para"
>Even if the innermost block is labeled, the <CODE
CLASS="literal"
>last</CODE
>, <CODE
CLASS="literal"
>next</CODE
>, and <CODE
CLASS="literal"
>redo</CODE
> statements without the optional parameter (the label) still operate with respect to that innermost block. Also, you can't use labels to jump into a block&nbsp;- just out of a block. The <CODE
CLASS="literal"
>last</CODE
>, <CODE
CLASS="literal"
>next</CODE
>, or <CODE
CLASS="literal"
>redo</CODE
> has to be within the block.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_03.htm"
TITLE="9.3 The redo Statement"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.3 The redo Statement"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_05.htm"
TITLE="9.5 Expression Modifiers"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.5 Expression Modifiers"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.3 The redo Statement</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>9.5 Expression Modifiers</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
