<HTML
><HEAD
>
<TITLE>[Appendix A] A.14 Chapter 15, Other Data Transformation</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:37:43Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"><LINK
REL="prev"
HREF="appa_13.htm"
TITLE="A.13 Chapter 14, Process Management"><LINK
REL="next"
HREF="appa_15.htm"
TITLE="A.15 Chapter 16, System Information"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_13.htm"
TITLE="A.13 Chapter 14, Process Management"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.13 Chapter 14, Process Management"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="appendix"
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"
>Appendix A<BR>Exercise Answers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_15.htm"
TITLE="A.15 Chapter 16, System Information"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.15 Chapter 16, System Information"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appa-pgfId-1758"
>A.14 <A
CLASS="xref"
HREF="ch15_01.htm"
TITLE="Other Data Transformation"
>Chapter 15, Other Data Transformation</A
></A
></H2
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179191"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>while (<A
CLASS="indexterm"
NAME="appa-idx-178758-0"
></A
>&lt;&gt;) {
  chomp;
  $slash = <A
CLASS="indexterm"
NAME="appa-idx-178759-0"
></A
>rindex($_,&quot;/&quot;);
  if ($slash &gt; -1) {
    $head = <A
CLASS="indexterm"
NAME="appa-idx-178760-0"
></A
>substr($_,0,$slash);
    $tail = substr($_,$slash+1);
  } else {
    ($head,$tail) = (&quot;&quot;, $_);
  }
  print &quot;head = '$head', tail = '$tail'\n&quot;;
}</PRE
><P
CLASS="para"
>Each line read by the diamond operator is first <CODE
CLASS="literal"
>chomp</CODE
>ed (tossing the newline). Next we look for the rightmost slash in the line, using <CODE
CLASS="literal"
>rindex()</CODE
>. The next two lines break the string apart using <CODE
CLASS="literal"
>substr()</CODE
>. If no slash exists, the result of the <CODE
CLASS="literal"
>rindex</CODE
> is <CODE
CLASS="literal"
>-1</CODE
>, so we hack around that. The final line within the loop prints the results.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179199"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>chomp(@nums = &lt;STDIN&gt;); # note special use of chomp
@nums = <A
CLASS="indexterm"
NAME="appa-idx-181353-0"
></A
>sort { $a &lt;=&gt; $b } @nums;
foreach (@nums) {
  printf &quot;%30g\n&quot;, $_;
}</PRE
><P
CLASS="para"
>The first line grabs all of the numbers into the <CODE
CLASS="literal"
>@nums</CODE
> array. The second line sorts the array numerically, using an inline definition for a sorting order. The <CODE
CLASS="literal"
>foreach</CODE
> loop prints the results.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-175574"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
><A
CLASS="indexterm"
NAME="appa-idx-175575-0"
></A
>while (&lt;&gt;) {
  <A
CLASS="indexterm"
NAME="appa-idx-175577-0"
></A
>substr($_,0,1) =~ tr/a-z/A-Z/;
  substr($_,1) =~ tr/A-Z/a-z/;
  print;
}</PRE
><P
CLASS="para"
>For each line read by the diamond operator, we use two <CODE
CLASS="literal"
>tr</CODE
> operators, each on a different portion of the string. The first <CODE
CLASS="literal"
>tr</CODE
> operator uppercases the first character of the line, and the second <CODE
CLASS="literal"
>tr</CODE
> operator lowercases the remainder. The result is printed.</P
><P
CLASS="para"
>Another way to do this, using only double-quoted string operators, is:</P
><PRE
CLASS="programlisting"
>while (&lt;&gt;) {
  print &quot;\u\L$_&quot;;
}</PRE
><P
CLASS="para"
>Give yourself an extra five points if you thought of that method instead.</P
></LI
></OL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_13.htm"
TITLE="A.13 Chapter 14, Process Management"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.13 Chapter 14, Process Management"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_15.htm"
TITLE="A.15 Chapter 16, System Information"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.15 Chapter 16, System Information"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>A.13 Chapter 14, Process Management</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>A.15 Chapter 16, System Information</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
