<HTML
><HEAD
>
<TITLE>[Appendix D] D.10 Embeddible, Extensible</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:38:26Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appd_01.htm"
TITLE="D. Topics We Didn't Mention"><LINK
REL="prev"
HREF="appd_09.htm"
TITLE="D.9 Packages"><LINK
REL="next"
HREF="appd_11.htm"
TITLE="D.11 And Other Stuff"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appd_09.htm"
TITLE="D.9 Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: D.9 Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="appendix"
REL="up"
HREF="appd_01.htm"
TITLE="D. Topics We Didn't Mention"
>Appendix D<BR>Topics We Didn't Mention</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appd_11.htm"
TITLE="D.11 And Other Stuff"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: D.11 And Other Stuff"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appd-pgfId-379"
>D.10 Embeddible, Extensible</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="appd-idx-109216-0"
></A
><A
CLASS="indexterm"
NAME="appd-idx-109216-1"
></A
>The guts of Perl is defined well enough that it becomes a relatively straightforward task to embed the Perl compiler/interpreter inside another application, or to extend Perl by connecting it with arbitrary code written in C/C++ (or having a C-like interface). In fact, about a third of the on-line documentation for Perl is specifically devoted to embedding and extending Perl. The <EM
CLASS="emphasis"
>perlembed </EM
>, <EM
CLASS="emphasis"
>perlapi</EM
>, <EM
CLASS="emphasis"
>perlxs </EM
>, <EM
CLASS="emphasis"
>perlxstut </EM
>, <EM
CLASS="emphasis"
>perlguts</EM
>, and <EM
CLASS="emphasis"
>perlcall </EM
> documenation pages cover these topics in depth.</P
><P
CLASS="para"
>And because Perl is freely reusable, you can write your proprietary spreadsheet application, using an embedded Perl to evaluate the expressions in your spreadsheet cells, and not have to pay one cent in royalties for all that power. Joy.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appd-pgfId-644"
>D.10.1 Security Matters</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="appd-idx-109217-0"
></A
>Perl was designed with security in mind. See <A
CLASS="olink"
HREF="../prog/ch06_01.htm"
>Chapter 6</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> or the <EM
CLASS="emphasis"
>perlsec</EM
>  documentation about taint checking. This is the kind of security where you trust the writer of the program, but not the person running it, such as is often the case with server-launched programs. The <CODE
CLASS="literal"
>Safe</CODE
> module, covered in the <CODE
CLASS="literal"
>Safe</CODE
> documentation and <A
CLASS="olink"
HREF="../prog/ch07_01.htm"
>Chapter 7</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>, provides something else entirely: the kind of security necessary when executing (as with <CODE
CLASS="literal"
>eval</CODE
>) unchecked code.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appd-pgfId-646"
>D.10.2 Switch or Case Statements</A
></H3
><P
CLASS="para"
>No, Perl doesn't <EM
CLASS="emphasis"
>really</EM
> have these statements, but you can easily make them by using more basic constructs. See <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> or the <EM
CLASS="emphasis"
>perlsyn </EM
> documentation.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appd-pgfId-648"
>D.10.3 Direct I/O: sysopen, sysread, syswrite, and sysseek</A
></H3
><P
CLASS="para"
>Sometimes Perl's high-level I/O is a bit too high-level for what you need to do. <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and the <EM
CLASS="emphasis"
>perlfunc </EM
> documentation cover direct access to the raw system calls for I/O.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appd-pgfId-650"
>D.10.4 The Perl Compiler</A
></H3
><P
CLASS="para"
>Although we speak of Perl as compiling your code before executing it, this compiled form is not native object code. Malcolm Beatie's <A
CLASS="indexterm"
NAME="appd-idx-109218-0"
></A
>Perl compiler project can produce standalone byte code or compilable C code out of your Perl script. The 5.005 release of Perl is expected to have native code generation included as part of the standard release. See the material in the <EM
CLASS="emphasis"
>perlfaq3 </EM
> documentation about this.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appd-pgfId-652"
>D.10.5 Database Support</A
></H3
><P
CLASS="para"
>Yes, Perl can interface directly with your commercial database servers, including Oracle, Sybase, Informix, and ODBC, just to name a few. See the database section in the CPAN modules directory for the relevant extension modules.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appd-pgfId-654"
>D.10.6 Complex Data Structures</A
></H3
><P
CLASS="para"
>Using references, you can build data structures of arbitrary complexity. These are discussed in <A
CLASS="olink"
HREF="../prog/ch04_01.htm"
>Chapter 4</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>, and in the <EM
CLASS="emphasis"
>perllol </EM
>, <EM
CLASS="emphasis"
>perldsc </EM
>, and <EM
CLASS="emphasis"
>perlref </EM
> documentation. If you prefer an object-oriented data structure, see <A
CLASS="olink"
HREF="../prog/ch05_01.htm"
>Chapter 5</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>, or the <EM
CLASS="emphasis"
>perltoot </EM
> and <EM
CLASS="emphasis"
>perlobj </EM
> documentation.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appd-pgfId-656"
>D.10.7 Function Pointers</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="appd-idx-109219-0"
></A
><A
CLASS="indexterm"
NAME="appd-idx-109219-1"
></A
>Perl can store and pass pointers to functions via the <CODE
CLASS="literal"
>\&amp;funcname</CODE
> notation, and call them indirectly via <CODE
CLASS="literal"
>&amp;$funcptr($args)</CODE
>. You can even write functions that create and return new anonymous functions, just as you could in languages like Lisp or Scheme. Such anonymous functions are often called <A
CLASS="olink"
HREF="../prog/ch04_03.htm#PERL2-CH-4-SECT-3.6"
>closures</A
>. See <A
CLASS="olink"
HREF="../prog/ch04_01.htm"
>Chapter 4</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and the <EM
CLASS="emphasis"
>perlsub </EM
> and <EM
CLASS="emphasis"
>perlfaq7 </EM
> documentation for details.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appd_09.htm"
TITLE="D.9 Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: D.9 Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appd_11.htm"
TITLE="D.11 And Other Stuff"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: D.11 And Other Stuff"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>D.9 Packages</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>D.11 And Other Stuff</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
