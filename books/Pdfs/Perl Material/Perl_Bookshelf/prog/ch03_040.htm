<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.40 fork</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:49:20Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_039.htm"
TITLE="3.2.39 flock"><LINK
REL="next"
HREF="ch03_041.htm"
TITLE="3.2.41 format"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_039.htm"
TITLE="3.2.39 flock"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.39 flock"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_041.htm"
TITLE="3.2.41 format"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.41 format"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-FORK"
>3.2.40 fork</A
></H3
><PRE
CLASS="programlisting"
>fork</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-10033"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10035"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10038"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10041"
></A
>This function does a <EM
CLASS="emphasis"
>fork</EM
>(2) call.  If it succeeds, the
function returns the child pid to the parent process and 0 to the
child process.  (If it fails, it returns the undefined value to the
parent process. There is no child process.)
Note that unflushed buffers remain unflushed in both
processes, which means you may need to set <B
CLASS="emphasis.bold"
>$|</B
> on one or more
filehandles earlier in the program to avoid duplicate output.</P
><P
CLASS="para"
>A nearly bulletproof way to launch a child process while checking for
&quot;cannot fork&quot; errors would be:</P
><PRE
CLASS="programlisting"
>FORK: {
    if ($pid = fork) {
        # parent here
        # child process pid is available in $pid
    } elsif (defined $pid) { # $pid is zero here if defined
        # child here
        # parent process pid is available with getppid
    } elsif ($! =~ /No more process/) {     
        # EAGAIN, supposedly recoverable fork error
        sleep 5;
        redo FORK;
    } else {
        # weird fork error
        die &quot;Can't fork: $!\n&quot;;
    }
}</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-10049"
></A
>These precautions are not necessary on operations which do an implicit
<EM
CLASS="emphasis"
>fork</EM
>(2), such as <A
CLASS="xref"
HREF="ch03_167.htm"
TITLE="system"
><B
CLASS="xref.cmd"
>system</B
></A
>, backquotes, or opening a process
as a filehandle, because Perl automatically retries a fork on a temporary
failure in these cases.
Be very careful to end the child code with an
<A
CLASS="xref"
HREF="ch03_035.htm"
TITLE="exit"
><B
CLASS="xref.cmd"
>exit</B
></A
>, or your child may inadvertently leave the conditional and
start executing code intended only for the parent process.</P
><P
CLASS="para"
>If you <A
CLASS="xref"
HREF="ch03_040.htm"
TITLE="fork"
><B
CLASS="xref.cmd"
>fork</B
></A
> your child processes, you'll have to <A
CLASS="xref"
HREF="ch03_189.htm"
TITLE="wait"
><B
CLASS="xref.cmd"
>wait</B
></A
> on their
zombies when they die.  See the <A
CLASS="xref"
HREF="ch03_189.htm"
TITLE="wait"
><B
CLASS="xref.cmd"
>wait</B
></A
> function for examples of
doing this.</P
><P
CLASS="para"
>The <A
CLASS="xref"
HREF="ch03_040.htm"
TITLE="fork"
><B
CLASS="xref.cmd"
>fork</B
></A
> function is unlikely to be implemented on any operating system
not resembling UNIX, unless it purports POSIX compliance.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_039.htm"
TITLE="3.2.39 flock"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.39 flock"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_041.htm"
TITLE="3.2.41 format"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.41 format"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.39 flock</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.41 format</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
