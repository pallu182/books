<HTML
><HEAD
>
<TITLE>[Chapter 6] 6.3 Output to STDOUT</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:33:29Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. Basic I/O"><LINK
REL="prev"
HREF="ch06_02.htm"
TITLE="6.2 Input from the Diamond Operator"><LINK
REL="next"
HREF="ch06_04.htm"
TITLE="6.4 Exercises"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_02.htm"
TITLE="6.2 Input from the Diamond Operator"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.2 Input from the Diamond Operator"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. Basic I/O"
>Chapter 6<BR>Basic I/O</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_04.htm"
TITLE="6.4 Exercises"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.4 Exercises"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-33352"
>6.3 Output to STDOUT</A
></H2
><P
CLASS="para"
>Perl uses the <CODE
CLASS="literal"
>print</CODE
> and <CODE
CLASS="literal"
>printf</CODE
> functions to write to standard output. Let's look at how they are used.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-560917"
>6.3.1 Using print for Normal Output</A
></H3
><P
CLASS="para"
>We've already used <CODE
CLASS="literal"
>print</CODE
> to display text on standard output. Let's expand on that usage a bit.</P
><P
CLASS="para"
>The <CODE
CLASS="literal"
>print</CODE
><A
CLASS="indexterm"
NAME="ch06-idx-562111-0"
></A
> function takes a list of strings and sends each string to standard output in turn, without any intervening or trailing characters added. What might not be obvious is that <CODE
CLASS="literal"
>print</CODE
> is really just a function that takes a list of arguments, and returns a value like any other function. In other words:</P
><PRE
CLASS="programlisting"
>$a = print(&quot;hello &quot;, &quot;world&quot;, &quot;\n&quot;);</PRE
><P
CLASS="para"
>would be another way to say <CODE
CLASS="literal"
>hello world</CODE
>. The <A
CLASS="indexterm"
NAME="ch06-idx-560855-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-560855-1"
></A
>return value of <CODE
CLASS="literal"
>print</CODE
> is a true or false value, indicating the success of the print. The print nearly always succeeds, unless you get some I/O error, so <CODE
CLASS="literal"
>$a</CODE
> in this case will usually be 1.</P
><P
CLASS="para"
>Sometimes you'll need to add <A
CLASS="indexterm"
NAME="ch06-idx-560854-0"
></A
>parentheses to <CODE
CLASS="literal"
>print</CODE
> as shown in the example given below, especially when the first thing you want to print starts with a left parenthesis, as in:</P
><PRE
CLASS="programlisting"
>print (2+3),&quot;hello&quot;;   # wrong! prints 5, ignores &quot;hello&quot;
print ((2+3),&quot;hello&quot;); # right, prints 5hello
print 2+3,&quot;hello&quot;;     # also right, prints 5hello</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-560918"
>6.3.2 Using printf for Formatted Output</A
></H3
><P
CLASS="para"
>You may wish to have a little more control over your output than <CODE
CLASS="literal"
>print</CODE
> provides. In fact, you may be accustomed to the <A
CLASS="indexterm"
NAME="ch06-idx-560860-0"
></A
>formatted output of C's <CODE
CLASS="literal"
>printf</CODE
> function. Fear not: Perl provides a comparable operation with the same name.</P
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch06-idx-560858-0"
></A
><CODE
CLASS="literal"
>printf</CODE
> function takes a list of arguments (enclosed in optional parentheses, like the <CODE
CLASS="literal"
>print</CODE
> function). The first argument is a format control string, defining how to print the remaining arguments. Here's an example:</P
><PRE
CLASS="programlisting"
> printf &quot;%15s %5d %10.2f\n&quot;, $s, $n, $r;</PRE
><P
CLASS="para"
>This function prints <CODE
CLASS="literal"
>$s</CODE
> in a 15-character field, then a space, then <CODE
CLASS="literal"
>$n</CODE
> as a decimal integer in a 5-character field, then another space, then <CODE
CLASS="literal"
>$r</CODE
> as a floating-point value with 2 decimal places in a 10-character field, and finally a newline.</P
><P
CLASS="para"
>Among the many formats supported by Perl's <CODE
CLASS="literal"
>printf()</CODE
> and <CODE
CLASS="literal"
>sprintf()</CODE
> functions are the following commonly used ones:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%%</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Percent sign</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%c</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Character with the given number</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%s</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>String</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%d</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Signed integer, in decimal</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%u</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Unsigned integer, in decimal</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%o</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Unsigned integer, in octal</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%x</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Unsigned integer, in hexadecimal</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%e</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Floating-point number, in scientific notation</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%f</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Floating-point number, in fixed decimal notation</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>%g</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Floating-point number, in %e or %f notation</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Between the percent and the format character, you may place one or more of the following flags:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>space   </P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Prefix positive number with a space</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>+       </P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Prefix positive number with a plus sign</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>-       </P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Left justify within the field</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>0       </P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Use zeros, not spaces, to right justify</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>number  </P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Minimum field width</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>.number </P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Precision: digits after decimal point for floating-point number, maximum length for string, minimum length for integer</P
></TD
></TR
></TBODY
></TABLE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_02.htm"
TITLE="6.2 Input from the Diamond Operator"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.2 Input from the Diamond Operator"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_04.htm"
TITLE="6.4 Exercises"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.4 Exercises"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>6.2 Input from the Diamond Operator</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>6.4 Exercises</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
