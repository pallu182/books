<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.38 fileno</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:49:19Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_037.htm"
TITLE="3.2.37 fcntl"><LINK
REL="next"
HREF="ch03_039.htm"
TITLE="3.2.39 flock"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_037.htm"
TITLE="3.2.37 fcntl"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.37 fcntl"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_039.htm"
TITLE="3.2.39 flock"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.39 flock"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-FILENO"
>3.2.38 fileno</A
></H3
><PRE
CLASS="programlisting"
>fileno <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9985"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9987"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9989"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9992"
></A
>This function returns the file descriptor for a filehandle.
(A <EM
CLASS="emphasis"
>file descriptor</EM
> is a small integer, unlike the filehandle, which
is a symbol.)  It returns <A
CLASS="xref"
HREF="ch03_180.htm"
TITLE="undef"
><B
CLASS="xref.cmd"
>undef</B
></A
> if the handle is not open.
It's useful for constructing bitmaps for <B
CLASS="emphasis.bold"
>select</B
>, and for
passing to certain obscure system calls if <EM
CLASS="emphasis"
>syscall</EM
>(2) is
implemented.
It's also useful for double-checking that the <A
CLASS="xref"
HREF="ch03_102.htm"
TITLE="open"
><B
CLASS="xref.cmd"
>open</B
></A
> function
gave you the file descriptor you wanted&nbsp;- see the example under
<A
CLASS="xref"
HREF="ch03_037.htm"
TITLE="fcntl"
><B
CLASS="xref.cmd"
>fcntl</B
></A
>.</P
><P
CLASS="para"
>If <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> is an expression, its value is taken
to represent a filehandle, either indirectly by name, or directly
as a reference to a filehandle object.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-10003"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10005"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10007"
></A
>A caution: don't count on the association of a Perl filehandle and a
numeric file descriptor throughout the life of the program.  If a file
has been closed and reopened, the file descriptor may change.
Filehandles <CODE
CLASS="literal"
>STDIN</CODE
>, <CODE
CLASS="literal"
>STDOUT</CODE
>, and <CODE
CLASS="literal"
>STDERR</CODE
> start with
file descriptors of 0, 1, and 2 (the UNIX standard convention),
but even they can change if you start closing and opening them with
wild abandon.
But you can't get into trouble with 0, 1, and 2 as long as you always
reopen immediately after closing, since the basic rule on UNIX
systems is to pick the lowest available descriptor, and that'll be the
one you just closed.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_037.htm"
TITLE="3.2.37 fcntl"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.37 fcntl"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_039.htm"
TITLE="3.2.39 flock"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.39 flock"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.37 fcntl</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.39 flock</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
