<HTML
><HEAD
>
<TITLE>[Chapter 7] 7.2.59 strict&nbsp;- Restrict Unsafe Constructs</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:04:05Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"><LINK
REL="prev"
HREF="ch07_058.htm"
TITLE="7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators"><LINK
REL="next"
HREF="ch07_060.htm"
TITLE="7.2.60 subs&nbsp;- Predeclare Subroutine Names"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_058.htm"
TITLE="7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. The Standard Perl Library"
>Chapter 7<BR>The Standard Perl Library</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_060.htm"
TITLE="7.2.60 subs&nbsp;- Predeclare Subroutine Names"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.60 subs&nbsp;- Predeclare Subroutine Names"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="AUTOID-26791"
>7.2.59 strict&nbsp;- Restrict Unsafe Constructs</A
></H3
><PRE
CLASS="programlisting"
>use strict;        # apply all possible restrictions

use strict 'vars'; # restrict unsafe use of variables for rest of block
use strict 'refs'; # restrict unsafe use of references for rest of block
use strict 'subs'; # restrict unsafe use of barewords for rest of block

no strict 'vars';  # relax restrictions on variables for rest of block
no strict 'refs';  # relax restrictions on references for rest of block
no strict 'subs';  # relax restrictions on barewords for rest of block</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-26795"
></A
>If no import list is given to <CODE
CLASS="literal"
>use strict</CODE
>, all possible restrictions
upon unsafe Perl constructs are imposed.  (This is the safest mode to
operate in, but is sometimes too
strict for casual programming.)  Currently, there are three possible things
to be strict about:  <CODE
CLASS="literal"
>refs</CODE
>, <CODE
CLASS="literal"
>vars</CODE
>, and <CODE
CLASS="literal"
>subs</CODE
>.</P
><P
CLASS="para"
>In all cases the restrictions apply only until the end of the immediately
enclosing block.</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
>strict 'refs'</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-26808"
></A
>This generates a run-time error if you
use symbolic references.</P
><PRE
CLASS="programlisting"
>use strict 'refs';
$ref = \$foo;
print $$ref;        # ok
$ref = &quot;foo&quot;;
print $$ref;        # run-time error; normally ok</PRE
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>strict 'vars'</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-26817"
></A
>This generates a compile-time error if you access a variable that wasn't
declared via <A
CLASS="xref"
HREF="ch03_097.htm"
TITLE="my"
><B
CLASS="xref.cmd"
>my</B
></A
>, or fully qualified, or imported.</P
><PRE
CLASS="programlisting"
>use strict 'vars';
use vars '$foe';
$SomePack::fee = 1;  # ok, fully qualified
my $fie = 10;        # ok, my() var
$foe = 7;            # ok, pseudo-imported by 'use vars'
$foo = 9;            # blows up--did you mistype $foe maybe?</PRE
><P
CLASS="para"
>The last line generates a compile-time error because you're touching a
global name without fully qualifying it.  Since the purpose of this
pragma is to encourage use of <A
CLASS="xref"
HREF="ch03_097.htm"
TITLE="my"
><B
CLASS="xref.cmd"
>my</B
></A
> variables, using <A
CLASS="xref"
HREF="ch03_087.htm"
TITLE="local"
><B
CLASS="xref.cmd"
>local</B
></A
> on a
variable isn't good enough to declare it.  You can, however, use
<A
CLASS="xref"
HREF="ch03_087.htm"
TITLE="local"
><B
CLASS="xref.cmd"
>local</B
></A
> on a variable that you declared with <CODE
CLASS="literal"
>use vars</CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>strict 'subs'</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-26832"
></A
>This generates a compile-time error if
you try to use a bareword identifier that's not a predeclared subroutine.</P
><PRE
CLASS="programlisting"
>use strict 'subs';

$SIG{PIPE} = Plumber;     # blows up (assuming Plumber sub not declared yet)
$SIG{PIPE} = &quot;Plumber&quot;;   # okay, means &quot;main::Plumber&quot; really
$SIG{PIPE} = \&amp;Plumber;   # preferred form</PRE
></DD
></DL
><P
CLASS="para"
>The <CODE
CLASS="literal"
>no strict 'vars'</CODE
> statement negates any preceding <CODE
CLASS="literal"
>use strict
vars</CODE
> for the remainder of the innermost enclosing block.  Likewise,
<CODE
CLASS="literal"
>no strict 'refs'</CODE
> negates any preceding invocation of <CODE
CLASS="literal"
>use strict
refs</CODE
>, and <CODE
CLASS="literal"
>no strict 'subs'</CODE
> negates <CODE
CLASS="literal"
>use strict 'subs'</CODE
>.</P
><P
CLASS="para"
>The arguments to <CODE
CLASS="literal"
>use strict</CODE
> are sometimes given as barewords&nbsp;- that is,
without surrounding quotes.  Be aware, however, that the following
sequence will not work:</P
><PRE
CLASS="programlisting"
>use strict;      # or just:  use strict subs;
...
no strict subs;  # WRONG!  Should be:  no strict 'subs';
...</PRE
><P
CLASS="para"
>The problem here is that giving <CODE
CLASS="literal"
>subs</CODE
> as a bareword is no longer allowed
after the <CODE
CLASS="literal"
>use strict</CODE
> statement.  <CODE
CLASS="literal"
>:-)</CODE
></P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_058.htm"
TITLE="7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_060.htm"
TITLE="7.2.60 subs&nbsp;- Predeclare Subroutine Names"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.60 subs&nbsp;- Predeclare Subroutine Names"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.2.60 subs&nbsp;- Predeclare Subroutine Names</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
