<HTML>
<HEAD>
<TITLE>Index</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<P><A HREF="../index.htm"><IMG SRC="../gifs/smbanns.gif" ALT="Book Home" BORDER=0></A>

<P><FONT SIZE="-1"><A HREF="../../search/lsrch.htm">Search</A> |
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| E
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_x.htm">X</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<H1>Index: E</H1>

<DL>
<DT><A NAME=".2de-command.2dline-option">-e command-line option, and inplace editing</A>
: <A HREF="../ch17_05.htm">17.5. Variable-Length ( Text) Databases</A>
<DT><A NAME=".2de-operator">-e operator</A>
: <A HREF="../ch10_05.htm">10.5. The -x File Tests</A>
<DT><A NAME="e-option-to-substitute-operator">e option to substitute operator</A>
: <A HREF="../appd_05.htm#appd-40322">D.5.2. The eval Operator (and s///e)</A>
<DT><A NAME="each">each( ) operator</A>
: <A HREF="../ch05_04.htm#ch05-pgfId-188702">5.4.3. The each Function</A>
<DD><DL>
  <DT>examples of
  <DD><DL>
    <DT><A HREF="../appa_16.htm">A.16. Chapter 17, User Database Manipulation</A>
    <DT><A HREF="../ch17_03.htm">17.3. Using a DBM Hash</A>
  </DL>
</DL>
<DT><A NAME="echo-command">echo command, and globbing</A>
: <A HREF="../ch12_02.htm">12.2. Globbing</A>
<DT><A NAME="editors">editors, and updating databases</A>
: <A HREF="../ch17_05.htm">17.5. Variable-Length ( Text) Databases</A>
<DT><A NAME="elements-of-array">elements of array</A>
: <A HREF="../ch03_01.htm#ch03-23092">3.1. What Is a List or Array?</A>
<DT><A NAME="else-keyword">else keyword</A>
: <A HREF="../ch04_02.htm">4.2. The if/unless Statement</A>
<DT><A NAME="elsif-keyword">elsif keyword</A>
<DD><DL>
  <DT><A HREF="../ch01_05.htm#ch01-pgfId-869132">1.5.5. More than One Secret Word</A>
  <DT><A HREF="../ch04_02.htm">4.2. The if/unless Statement</A>
  <DT>example of
  <DD><DL>
    <DT><A HREF="../appa_03.htm">A.3. Chapter 4, Control Structures</A>
    <DT><A HREF="../ch15_04.htm">15.4. Advanced Sorting</A>
  </DL>
</DL>
<DT><A NAME="email">email, example of handling</A>
: <A HREF="../ch09_01.htm#ch09-12775">9.1. The last Statement</A>
<DT><A NAME="embedded-perl">embedded Perl</A>
: <A HREF="../ch19_10.htm#ch19-pgfId-458">19.10.2. Embedded Perl</A>
<DT><A NAME="empty-array">empty array</A>
: <A HREF="../ch03_02.htm">3.2. Literal Representation</A>
<DT><A NAME="empty-list">empty list</A>
: <A HREF="../ch03_02.htm">3.2. Literal Representation</A>
<DD><DL>
  <DT>and clearing out associative array
: <A HREF="../ch05_04.htm#ch05-pgfId-188701">5.4.2. The values Function</A>
  <DT>as default value for array variable
: <A HREF="../ch03_03.htm">3.3. Variables</A>
  <DT>as return value from getpwent( )
: <A HREF="../ch16_01.htm#ch16-16248">16.1. Getting Password and Group Information</A>
</DL>
<DT><A NAME="end-of-file">end of file</A>
<DD><DL>
  <DT>Control-D as
: <A HREF="../ch03_06.htm">3.6. &lt;STDIN&gt; as an Array</A>
  <DT>detecting, introduced
: <A HREF="../ch01_05.htm#ch01-pgfId-869115">1.5.10. Moving the Secret Word List into a Separate File</A>
</DL>
<DT><A NAME="end-tokens">end tokens</A>
: <A HREF="../ch19_03.htm">19.3. Simplest CGI Program</A>
<DT><A NAME="endgrent">endgrent( ) operator</A>
: <A HREF="../ch16_01.htm#ch16-16248">16.1. Getting Password and Group Information</A>
<DT><A NAME="endpwent">endpwent( ) operator</A>
: <A HREF="../ch16_01.htm#ch16-16248">16.1. Getting Password and Group Information</A>
<DT><A NAME=".25env-variable">%ENV variable</A>
: <A HREF="../ch14_01.htm#ch14-23962">14.1. Using system and exec</A>
<DT><A NAME="environment-variables">environment variables, controlling through %ENV</A>
: <A HREF="../ch14_01.htm#ch14-23962">14.1. Using system and exec</A>
<DT><A NAME="eof">eof( ) (Perl)</A>
: <A HREF="../ch19_08.htm#ch19-pgfId-318">19.8.2. Objects in CGI.pm</A>
<DT><A NAME="eq-operator">eq operator</A>
: <A HREF="../ch02_04.htm#ch02-15504">2.4.2. Operators for Strings</A>
<DD><DL>
  <DT>example of
  <DD><DL>
    <DT><A HREF="../ch01_05.htm#ch01-pgfId-869020">1.5.3. Adding Choices</A>
    <DT><A HREF="../ch01_05.htm#ch01-pgfId-871077">1.5.17. The Final Programs</A>
  </DL>
</DL>
<DT><A NAME="equal-sign">equal sign (=)</A>
<DD><DL>
  <DT>as array assignment operator
: <A HREF="../ch03_04.htm#ch03-pgfId-685561">3.4.1. Assignment</A>
  <DT>as assignment operator
: <A HREF="../ch02_06.htm">2.6. Scalar Operators and Functions</A>
</DL>
<DT><A NAME="eval">eval( ) operator</A>
<DD><DL>
  <DT><A HREF="../appd_05.htm#appd-40322">D.5.2. The eval Operator (and s///e)</A>
  <DT><A HREF="../ch11_01.htm#ch11-22867">11.1. What Is a Format?</A>
</DL>
<DT><A NAME="exec">exec( ) operator</A>
: <A HREF="../ch14_04.htm">14.4. Using fork</A>
<DT><A NAME="execute-bit">execute bit, and Perl programs</A>
: <A HREF="../ch01_04.htm">1.4. Basic Concepts</A>
<DT><A NAME="exit-status">exit status, and die( )</A>
: <A HREF="../ch10_03.htm">10.3. A Slight Diversion: die</A>
<DT><A NAME="exit-value">exit value</A>
: <A HREF="../ch14_04.htm">14.4. Using fork</A>
<DT><A NAME="exit">exit( ) operator</A>
: <A HREF="../ch14_04.htm">14.4. Using fork</A>
<DT><A NAME="exponential-notation">exponential notation, in floating-point numbers</A>
: <A HREF="../ch02_02.htm#ch02-pgfId-768719">2.2.2. Float Literals</A>
<DT><A NAME="exponentiation-operator">exponentiation operator (**)</A>
: <A HREF="../ch02_04.htm#ch02-pgfId-768786">2.4.1. Operators for Numbers</A>
<DT><A NAME="export-command">export command, emulating</A>
: <A HREF="../ch14_01.htm#ch14-23962">14.1. Using system and exec</A>
<DT><A NAME="expressions">expressions</A>
<DD><DL>
  <DT>in array literals
: <A HREF="../ch03_02.htm">3.2. Literal Representation</A>
  <DT>in subroutine body
: <A HREF="../ch08_03.htm">8.3. Return Values</A>
</DL>
</DL>

<P>
<HR WIDTH="515" ALIGN="LEFT">

<P><FONT SIZE="-1"><A HREF="../../search/lsrch.htm">Search</A> |
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| E
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_x.htm">X</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<P><A HREF="../../copyrght.htm">Copyright</A> &copy; 1999
 <A HREF="http://www.oreilly.com/">O'Reilly &amp; Associates, Inc.</A>
All Rights Reserved.
<P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../index.htm"
TITLE="Learning Perl">Learning Perl</A
> | <A
HREF="../../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
>
</BODY>
</HTML>
