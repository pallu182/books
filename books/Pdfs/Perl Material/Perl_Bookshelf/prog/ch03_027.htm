<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.27 die</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:48:24Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_026.htm"
TITLE="3.2.26 delete"><LINK
REL="next"
HREF="ch03_028.htm"
TITLE="3.2.28 do"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_026.htm"
TITLE="3.2.26 delete"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.26 delete"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_028.htm"
TITLE="3.2.28 do"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.28 do"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-DIE"
>3.2.27 die</A
></H3
><PRE
CLASS="programlisting"
>die <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9586"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9588"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9590"
></A
>Outside of an <A
CLASS="xref"
HREF="ch03_032.htm"
TITLE="eval"
><B
CLASS="xref.cmd"
>eval</B
></A
>, this function prints the concatenated value
of <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
> to <CODE
CLASS="literal"
>STDERR</CODE
> and exits with the current value of <B
CLASS="emphasis.bold"
>$!</B
>
(<CODE
CLASS="literal"
>errno</CODE
>).
If <B
CLASS="emphasis.bold"
>$!</B
> is 0, it exits with the value of <CODE
CLASS="literal"
>($? &gt;&gt; 8)</CODE
>
(which is the status of the last reaped child from a <A
CLASS="xref"
HREF="ch03_167.htm"
TITLE="system"
><B
CLASS="xref.cmd"
>system</B
></A
>, <A
CLASS="xref"
HREF="ch03_189.htm"
TITLE="wait"
><B
CLASS="xref.cmd"
>wait</B
></A
>, 
<A
CLASS="xref"
HREF="ch03_018.htm"
TITLE="close"
><B
CLASS="xref.cmd"
>close</B
></A
> on a pipe, or `command`).
If <CODE
CLASS="literal"
>($? &gt;&gt; 8)</CODE
> is 0, it exits with 255.  If <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
> is unspecified,
the current value of the <CODE
CLASS="literal"
>$@</CODE
> variable is propagated, if any.
Otherwise the string <CODE
CLASS="literal"
>&quot;Died&quot;</CODE
> is used as the default.</P
><P
CLASS="para"
>Equivalent examples:</P
><PRE
CLASS="programlisting"
>&#13;
die &quot;Can't cd to spool: $!\n&quot; unless chdir '/usr/spool/news';

chdir '/usr/spool/news' or die &quot;Can't cd to spool: $!\n&quot;</PRE
><P
CLASS="para"
>(The second form is generally preferred, since the important part is
the <A
CLASS="xref"
HREF="ch03_011.htm"
TITLE="chdir"
><B
CLASS="xref.cmd"
>chdir</B
></A
>.)</P
><P
CLASS="para"
>Within an <A
CLASS="xref"
HREF="ch03_032.htm"
TITLE="eval"
><B
CLASS="xref.cmd"
>eval</B
></A
>, the function sets the
<B
CLASS="emphasis.bold"
>$@</B
> variable equal to the error message that would
have been produced otherwise, and aborts the <A
CLASS="xref"
HREF="ch03_032.htm"
TITLE="eval"
><B
CLASS="xref.cmd"
>eval</B
></A
>, which then returns the undefined value.  The <A
CLASS="xref"
HREF="ch03_027.htm"
TITLE="die"
><B
CLASS="xref.cmd"
>die</B
></A
> function can thus be used to raise named
exceptions that can be caught at a higher level in the program.  See the section
on the <A
CLASS="xref"
HREF="ch03_032.htm"
TITLE="eval"
><B
CLASS="xref.cmd"
>eval</B
></A
> function later in this chapter.</P
><P
CLASS="para"
>If the final value of <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
> does not end in a newline, the current
script filename, line number, and input line number (if any) are
appended to the message, as well as a newline.  Hint: sometimes
appending <CODE
CLASS="literal"
>&quot;, stopped&quot;</CODE
> to your message will cause it to
make better sense when the string <CODE
CLASS="literal"
>&quot;at scriptname line 123&quot;</CODE
> is
appended.  Suppose you are running script <EM
CLASS="emphasis"
>canasta</EM
>:</P
><PRE
CLASS="programlisting"
>die &quot;/etc/games is no good&quot;;
die &quot;/etc/games is no good, stopped&quot;;</PRE
><P
CLASS="para"
>which produces, respectively:</P
><PRE
CLASS="programlisting"
>/etc/games is no good at canasta line 123.
/etc/games is no good, stopped at canasta line 123.</PRE
><P
CLASS="para"
>If you want your own error messages reporting the filename and linenumber, use
the <CODE
CLASS="literal"
>__FILE__</CODE
> and
<CODE
CLASS="literal"
>__LINE__</CODE
> special tokens:</P
><PRE
CLASS="programlisting"
>die '&quot;', __FILE__, '&quot;, line ', __LINE__, &quot;, phooey on you!\n&quot;;</PRE
><P
CLASS="para"
>This produces output like:</P
><PRE
CLASS="programlisting"
>&quot;canasta&quot;, line 38, phooey on you!</PRE
><P
CLASS="para"
>See also <A
CLASS="xref"
HREF="ch03_035.htm"
TITLE="exit"
><B
CLASS="xref.cmd"
>exit</B
></A
> and <A
CLASS="xref"
HREF="ch03_192.htm"
TITLE="warn"
><B
CLASS="xref.cmd"
>warn</B
></A
>.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_026.htm"
TITLE="3.2.26 delete"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.26 delete"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_028.htm"
TITLE="3.2.28 do"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.28 do"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.26 delete</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.28 do</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
