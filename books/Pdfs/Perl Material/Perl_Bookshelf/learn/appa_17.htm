<HTML
><HEAD
>
<TITLE>[Appendix A] A.17 Chapter 18, Converting Other Languages to Perl</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl"><META
NAME="DC.creator"
CONTENT="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:37:08Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-284-0"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"><LINK
REL="prev"
HREF="appa_16.htm"
TITLE="A.16 Chapter 17, User Database Manipulation"><LINK
REL="next"
HREF="appa_18.htm"
TITLE="A.18 Chapter 19, CGI Programming"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/lsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_16.htm"
TITLE="A.16 Chapter 17, User Database Manipulation"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.16 Chapter 17, User Database Manipulation"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="appendix"
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"
>Appendix A<BR>Exercise Answers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_18.htm"
TITLE="A.18 Chapter 19, CGI Programming"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.18 Chapter 19, CGI Programming"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appa-29760"
>A.17 Chapter 18, Converting Other Languages to Perl</A
></H2
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179165"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
><A
CLASS="indexterm"
NAME="appa-idx-178782-0"
></A
>for (;;) {
    ($user,$home) = (getpwent)[0,7];
    <A
CLASS="indexterm"
NAME="appa-idx-178783-0"
></A
>last unless $user;
    <A
CLASS="indexterm"
NAME="appa-idx-178784-0"
></A
>next unless open(N,&quot;$home/.newsrc&quot;);
    next unless -M N &lt; 30; ## added value :-)
    while (&lt;N&gt;) {
        if (/^comp\.lang\.perl\.announce:/) {
            print &quot;$user is a good person, &quot;,
            &quot;and reads comp.lang.perl.announce!\n&quot;;
            last;
        }
    }
}</PRE
><P
CLASS="para"
>The outermost loop is a <CODE
CLASS="literal"
>for</CODE
> loop that runs forever; this loop gets exited by the <CODE
CLASS="literal"
>last</CODE
> operator inside, however. Each time through the loop, a new value for <CODE
CLASS="literal"
>$user</CODE
> (a username) and <CODE
CLASS="literal"
>$home</CODE
> (their home directory) is fetched using the <CODE
CLASS="literal"
>getpwent</CODE
> operator.</P
><P
CLASS="para"
>If the value of <CODE
CLASS="literal"
>$user</CODE
> is empty, the <CODE
CLASS="literal"
>for</CODE
> loop exits. The next two lines look for a recent <EM
CLASS="emphasis"
>.newsrc</EM
> file in the user's home directory. If the file cannot be opened, or the modification time of the file is too distant, the next iteration of the <CODE
CLASS="literal"
>for</CODE
> loop is triggered.</P
><P
CLASS="para"
>The <CODE
CLASS="literal"
>while</CODE
> loop reads a line at a time from the <EM
CLASS="emphasis"
>.newsrc</EM
> file. If the line begins with <EM
CLASS="emphasis"
>comp.lang.perl.announce:</EM
>, the <CODE
CLASS="literal"
>print</CODE
> statement says so, and the <CODE
CLASS="literal"
>while</CODE
> loop is exited early.</P
></LI
></OL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_16.htm"
TITLE="A.16 Chapter 17, User Database Manipulation"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.16 Chapter 17, User Database Manipulation"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_18.htm"
TITLE="A.18 Chapter 19, CGI Programming"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.18 Chapter 19, CGI Programming"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>A.16 Chapter 17, User Database Manipulation</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>A.18 Chapter 19, CGI Programming</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
