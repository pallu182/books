<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.30 each</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:48:56Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_029.htm"
TITLE="3.2.29 dump"><LINK
REL="next"
HREF="ch03_031.htm"
TITLE="3.2.31 eof"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_029.htm"
TITLE="3.2.29 dump"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.29 dump"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_031.htm"
TITLE="3.2.31 eof"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.31 eof"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-EACH"
>3.2.30 each</A
></H3
><PRE
CLASS="programlisting"
>each <CODE
CLASS="replaceable"
><I
>HASH</I
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9703"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9705"
></A
>This function returns a two-element list consisting of the key and
value for the next value of a hash.  With successive
calls to <A
CLASS="xref"
HREF="ch03_030.htm"
TITLE="each"
><B
CLASS="xref.cmd"
>each</B
></A
> you can iterate over the entire hash.
Entries are returned in an apparently random order.  When the hash is
entirely read, a null list is returned (which, when used in a list assignment,
produces a false value).  The next call to <A
CLASS="xref"
HREF="ch03_030.htm"
TITLE="each"
><B
CLASS="xref.cmd"
>each</B
></A
> after that
will start a new iteration.  The iterator can be reset either by reading
all the elements from the hash, or by calling the <A
CLASS="xref"
HREF="ch03_079.htm"
TITLE="keys"
><B
CLASS="xref.cmd"
>keys</B
></A
> function in
scalar context.  You must not add elements to the
hash while iterating over it, although you are permitted to use
<A
CLASS="xref"
HREF="ch03_026.htm"
TITLE="delete"
><B
CLASS="xref.cmd"
>delete</B
></A
>.  In a scalar context, 
<B
CLASS="emphasis.bold"
>each</B
> returns just the key, but watch out for
false keys.</P
><P
CLASS="para"
>There is a single iterator for each hash, shared by all
<A
CLASS="xref"
HREF="ch03_030.htm"
TITLE="each"
><B
CLASS="xref.cmd"
>each</B
></A
>, <A
CLASS="xref"
HREF="ch03_079.htm"
TITLE="keys"
><B
CLASS="xref.cmd"
>keys</B
></A
>, and <A
CLASS="xref"
HREF="ch03_187.htm"
TITLE="values"
><B
CLASS="xref.cmd"
>values</B
></A
> function calls in
the program.  This means that after a <A
CLASS="xref"
HREF="ch03_079.htm"
TITLE="keys"
><B
CLASS="xref.cmd"
>keys</B
></A
> or <A
CLASS="xref"
HREF="ch03_187.htm"
TITLE="values"
><B
CLASS="xref.cmd"
>values</B
></A
> call, the
next <A
CLASS="xref"
HREF="ch03_030.htm"
TITLE="each"
><B
CLASS="xref.cmd"
>each</B
></A
> call will start again from the beginning.
The following example prints out your environment like
the <EM
CLASS="emphasis"
>printenv</EM
>(1) program, only in a different order:</P
><PRE
CLASS="programlisting"
>while (($key,$value) = each %ENV) {
    print &quot;$key=$value\n&quot;;
}</PRE
><P
CLASS="para"
>See also <A
CLASS="xref"
HREF="ch03_079.htm"
TITLE="keys"
><B
CLASS="xref.cmd"
>keys</B
></A
> and <A
CLASS="xref"
HREF="ch03_187.htm"
TITLE="values"
><B
CLASS="xref.cmd"
>values</B
></A
>.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_029.htm"
TITLE="3.2.29 dump"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.29 dump"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_031.htm"
TITLE="3.2.31 eof"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.31 eof"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.29 dump</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.31 eof</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
