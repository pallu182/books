<HTML
><HEAD
>
<TITLE>[Appendix A] A.16 Chapter 17, User Database Manipulation</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl"><META
NAME="DC.creator"
CONTENT="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:37:06Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-284-0"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"><LINK
REL="prev"
HREF="appa_15.htm"
TITLE="A.15 Chapter 16, System Database Access"><LINK
REL="next"
HREF="appa_17.htm"
TITLE="A.17 Chapter 18, Converting Other Languages to Perl"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/lsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_15.htm"
TITLE="A.15 Chapter 16, System Database Access"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.15 Chapter 16, System Database Access"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="appendix"
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"
>Appendix A<BR>Exercise Answers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_17.htm"
TITLE="A.17 Chapter 18, Converting Other Languages to Perl"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.17 Chapter 18, Converting Other Languages to Perl"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appa-25261"
>A.16 Chapter 17, User Database Manipulation</A
></H2
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179175"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
><A
CLASS="indexterm"
NAME="appa-idx-178778-0"
></A
>dbmopen(%ALIAS, &quot;/etc/aliases&quot;, undef) ||
    die &quot;No aliases!: $!&quot;;
while (($key,$value) = <A
CLASS="indexterm"
NAME="appa-idx-178779-0"
></A
>each(%ALIAS)) {
    chop($key,$value);
    print &quot;$key $value\n&quot;;
}</PRE
><P
CLASS="para"
>The first line opens the aliases DBM. (Your system may keep the aliases DBM in <EM
CLASS="emphasis"
>/usr/lib/aliases</EM
> instead&nbsp;- try that if this doesn't work.) The <CODE
CLASS="literal"
>while</CODE
> loop steps through the DBM array. The first line within the loop chops off the NUL character from the end of the key and the value. The final line of the loop prints out the result.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179181"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
># program 1:
dbmopen(%WORDS,&quot;words&quot;,0644);
while (<A
CLASS="indexterm"
NAME="appa-idx-178780-0"
></A
>&lt;&gt;) {
    foreach $word (split(/\W+/)) {
        $WORDS{$word}++;
    }
}
dbmclose(%WORDS);</PRE
><P
CLASS="para"
>The first program (the writer) opens a DBM in the current directory called <CODE
CLASS="literal"
>words</CODE
>, creating files named <EM
CLASS="emphasis"
>words.dir</EM
> and <EM
CLASS="emphasis"
>words.pag</EM
>. The <CODE
CLASS="literal"
>while</CODE
> loop grabs each line using the diamond operator. This line is split apart using the <CODE
CLASS="literal"
>split</CODE
> operator, with a delimiter of <CODE
CLASS="literal"
>/\W+/</CODE
>, meaning nonword characters. Each word is then counted into the DBM array, using the <CODE
CLASS="literal"
>foreach</CODE
> statement to step through the words:</P
><PRE
CLASS="programlisting"
># program 2:
dbmopen(%WORDS,&quot;words&quot;,undef);
foreach $word (sort { $WORDS{$b} <A
CLASS="indexterm"
NAME="appa-idx-178781-0"
></A
>&lt;=&gt; $WORDS{$a} } keys %WORDS) {
    print &quot;$word $WORDS{$word}\n&quot;;
}
dbmclose(%WORDS);</PRE
><P
CLASS="para"
>The second program opens a DBM in the current directory called <CODE
CLASS="literal"
>words</CODE
>. That complicated looking <CODE
CLASS="literal"
>foreach</CODE
> line does most of the dirty work. The value of <CODE
CLASS="literal"
>$word</CODE
> each time through the loop will be the next element of a list. The list is the sorted keys from <CODE
CLASS="literal"
>%WORDS</CODE
>, sorted by their values (the count) in descending order. For each word in the list, we print the word and the number of times the word has occurred.</P
></LI
></OL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_15.htm"
TITLE="A.15 Chapter 16, System Database Access"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.15 Chapter 16, System Database Access"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_17.htm"
TITLE="A.17 Chapter 18, Converting Other Languages to Perl"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.17 Chapter 18, Converting Other Languages to Perl"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>A.15 Chapter 16, System Database Access</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>A.17 Chapter 18, Converting Other Languages to Perl</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
