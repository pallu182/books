<HTML
><HEAD
>
<TITLE>[Chapter 11] 11.3 Invoking a Format</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl"><META
NAME="DC.creator"
CONTENT="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:13Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-284-0"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch11_01.htm"
TITLE="11. Formats"><LINK
REL="prev"
HREF="ch11_02.htm"
TITLE="11.2 Defining a Format"><LINK
REL="next"
HREF="ch11_04.htm"
TITLE="11.4 More About the Fieldholders"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/lsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_02.htm"
TITLE="11.2 Defining a Format"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.2 Defining a Format"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch11_01.htm"
TITLE="11. Formats"
>Chapter 11<BR>Formats</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_04.htm"
TITLE="11.4 More About the Fieldholders"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.4 More About the Fieldholders"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch11-29140"
>11.3 Invoking a Format</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch11-idx-948276-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-948276-1"
></A
>You invoke a format with the <A
CLASS="indexterm"
NAME="ch11-idx-948277-0"
></A
><CODE
CLASS="literal"
>write</CODE
> function. This function takes the name of a <A
CLASS="indexterm"
NAME="ch11-idx-948278-0"
></A
>filehandle and generates text for that filehandle using the current format for that filehandle. By default, the current format for a filehandle is a format with the same name (so for the <CODE
CLASS="literal"
>STDOUT</CODE
> filehandle, the <CODE
CLASS="literal"
>STDOUT</CODE
> format is used), but we'll soon see that you can change it.</P
><P
CLASS="para"
>Let's take another look at that address label format, and create a file full of address labels. Here's a program segment:</P
><PRE
CLASS="programlisting"
><A
CLASS="indexterm"
NAME="ch11-idx-948281-0"
></A
>format ADDRESSLABEL =
===============================
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; |
$name
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; |
$address
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;, @&lt; @&lt;&lt;&lt;&lt; |
$city,          $state, $zip
===============================
.

<A
CLASS="indexterm"
NAME="ch11-idx-948316-0"
></A
>open(ADDRESSLABEL,&quot;&gt;labels-to-print&quot;) || die &quot;can't create&quot;;
open(ADDRESSES,&quot;addresses&quot;) || die &quot;cannot open addresses&quot;;
while (&lt;ADDRESSES&gt;) {
    chomp; # remove newline
    ($name,$address,$city,$state,$zip) = <A
CLASS="indexterm"
NAME="ch11-idx-948317-0"
></A
>split(/:/);
        # load up the global variables
    <A
CLASS="indexterm"
NAME="ch11-idx-948318-0"
></A
>write (ADDRESSLABEL); # send the output
}</PRE
><P
CLASS="para"
>Here we see our previous format definition, but now we also have some executable code. First, we open a filehandle onto an output file, which is called <CODE
CLASS="literal"
>labels-to-print</CODE
>. Note that the filehandle name (<CODE
CLASS="literal"
>ADDRESSLABEL</CODE
>) is the same as the name of the format. This is important. Next, we open a filehandle on an address list. The format of the address list is presumed to be something like this:</P
><PRE
CLASS="programlisting"
>Stonehenge:4470 SW Hall Suite 107:Beaverton:OR:97005
Fred Flintstone:3737 Hard Rock Lane:Bedrock:OZ:999bc</PRE
><P
CLASS="para"
>In other words, five colon-separated fields, which our code parses as described below.</P
><P
CLASS="para"
>The <CODE
CLASS="literal"
>while</CODE
> loop in the program reads each line of the address file, gets rid of the newline, and then splits the remainder into five variables. Note that the variable names are the same names as the ones we used when we defined the format. This, too, is important.</P
><P
CLASS="para"
>Once we have all of the variables loaded up (so that the values used by the format are correct), the <CODE
CLASS="literal"
>write</CODE
> function invokes the format. Note that the parameter to <CODE
CLASS="literal"
>write</CODE
> is the filehandle to be written to, and by default, the format of the same name is also used.</P
><P
CLASS="para"
>Each field in the format is replaced with the corresponding value from the next line of the format. After the two sample records given above are processed, the file <CODE
CLASS="literal"
>labels-to-print</CODE
> contains:</P
><PRE
CLASS="programlisting"
>===============================
| Stonehenge                  |
| 4470 SW Hall Suite 107      |
| Beaverton        , OR 97005 |
===============================
===============================
| Fred Flintstone             |
| 3737 Hard Rock Lane         |
| Bedrock          , OZ 999bc |
===============================</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_02.htm"
TITLE="11.2 Defining a Format"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.2 Defining a Format"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_04.htm"
TITLE="11.4 More About the Fieldholders"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.4 More About the Fieldholders"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>11.2 Defining a Format</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>11.4 More About the Fieldholders</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
