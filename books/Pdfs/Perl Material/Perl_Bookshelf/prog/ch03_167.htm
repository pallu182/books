<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.167 system</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:55:16Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_166.htm"
TITLE="3.2.166 sysread"><LINK
REL="next"
HREF="ch03_168.htm"
TITLE="3.2.168 syswrite"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_166.htm"
TITLE="3.2.166 sysread"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.166 sysread"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_168.htm"
TITLE="3.2.168 syswrite"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.168 syswrite"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-SYSTEM"
>3.2.167 system</A
></H3
><PRE
CLASS="programlisting"
>system <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-13715"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13717"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13720"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13723"
></A
>This function executes any program on the system for you.  It does exactly the
same thing as <CODE
CLASS="literal"
>exec</CODE
> <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
> except
that it does a <A
CLASS="xref"
HREF="ch03_040.htm"
TITLE="fork"
><B
CLASS="xref.cmd"
>fork</B
></A
> first, and then, after
the exec, it waits for the exec'd program to complete.  That is (in non-UNIX
terms), it runs the program for you, and returns when it's done, unlike <A
CLASS="xref"
HREF="ch03_033.htm"
TITLE="exec"
><B
CLASS="xref.cmd"
>exec</B
></A
>, which never returns (if it succeeds).  Note
that argument processing varies depending on the number of arguments, as
described for <A
CLASS="xref"
HREF="ch03_033.htm"
TITLE="exec"
><B
CLASS="xref.cmd"
>exec</B
></A
>.  The return value is the
exit status of the program as returned by the
<EM
CLASS="emphasis"
>wait</EM
>(2) call.  To get the actual exit value, divide
by 256.  (The lower 8 bits are set if the process died from a signal.)  See
<A
CLASS="xref"
HREF="ch03_033.htm"
TITLE="exec"
><B
CLASS="xref.cmd"
>exec</B
></A
>.</P
><P
CLASS="para"
>Because <A
CLASS="xref"
HREF="ch03_167.htm"
TITLE="system"
><B
CLASS="xref.cmd"
>system</B
></A
> and backticks block
<CODE
CLASS="literal"
>SIGINT</CODE
> and <CODE
CLASS="literal"
>SIGQUIT</CODE
>, killing the program
they're running with one of those signals doesn't actually interrupt your
program.</P
><PRE
CLASS="programlisting"
>@args = (&quot;command&quot;, &quot;arg1&quot;, &quot;arg2&quot;);
system(@args) == 0 
     or die &quot;system @args failed: $?&quot;</PRE
><P
CLASS="para"
>Here's a more elaborate example of analyzing the return value from <A
CLASS="xref"
HREF="ch03_167.htm"
TITLE="system"
><B
CLASS="xref.cmd"
>system</B
></A
> on a UNIX system to check for all
possibilities, including for signals and coredumps.</P
><PRE
CLASS="programlisting"
>$rc = 0xffff &amp; system @args;
printf &quot;system(%s) returned %#04x: &quot;, &quot;@args&quot;, $rc;
if ($rc == 0) {
    print &quot;ran with normal exit\n&quot;;
} 
elsif ($rc == 0xff00) {
    print &quot;command failed: $!\n&quot;;
} 
elsif (($rc &amp; 0xff) == 0) {
    $rc &gt;&gt;= 8;
    print &quot;ran with non-zero exit status $rc\n&quot;;
} 
else {
    print &quot;ran with &quot;;
    if ($rc &amp;   0x80) {
        $rc &amp;= ~0x80;
        print &quot;coredump from &quot;;
    } 
    print &quot;signal $rc\n&quot;
} 
$ok = ($rc == 0);</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_166.htm"
TITLE="3.2.166 sysread"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.166 sysread"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_168.htm"
TITLE="3.2.168 syswrite"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.168 syswrite"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.166 sysread</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.168 syswrite</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
