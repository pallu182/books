<HTML
><HEAD
>
<TITLE>[Chapter 7] 7.2.66 Test::Harness&nbsp;- Run Perl Standard Test Scripts with Statistics</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:04:26Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"><LINK
REL="prev"
HREF="ch07_065.htm"
TITLE="7.2.65 Term::Complete&nbsp;- Word Completion Module"><LINK
REL="next"
HREF="ch07_067.htm"
TITLE="7.2.67 Text::Abbrev&nbsp;- Create an Abbreviation Table from a List"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_065.htm"
TITLE="7.2.65 Term::Complete&nbsp;- Word Completion Module"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.65 Term::Complete&nbsp;- Word Completion Module"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. The Standard Perl Library"
>Chapter 7<BR>The Standard Perl Library</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_067.htm"
TITLE="7.2.67 Text::Abbrev&nbsp;- Create an Abbreviation Table from a List"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.67 Text::Abbrev&nbsp;- Create an Abbreviation Table from a List"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="AUTOID-27138"
>7.2.66 Test::Harness&nbsp;- Run Perl Standard Test Scripts with Statistics</A
></H3
><PRE
CLASS="programlisting"
>use Test::Harness;
runtests(@tests);</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-27142"
></A
><A
CLASS="indexterm"
NAME="AUTOID-27145"
></A
><A
CLASS="indexterm"
NAME="AUTOID-27147"
></A
><A
CLASS="indexterm"
NAME="AUTOID-27149"
></A
>This module is used by MakeMaker.  If you're building a Perl extension
and if you have test scripts with filenames matching <EM
CLASS="emphasis"
>t/*.t</EM
> in the
extension's subdirectory, then you can run those tests by executing the
shell command, <CODE
CLASS="literal"
>make test</CODE
>.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-27155"
></A
><CODE
CLASS="literal"
>runtests(@tests)</CODE
> runs all test scripts named as arguments and
checks standard output for the expected &quot;<CODE
CLASS="literal"
>ok</CODE
>
<CODE
CLASS="replaceable"
><I
>n</I
></CODE
>&quot; strings.  (Standard Perl test scripts print
&quot;<CODE
CLASS="literal"
>ok</CODE
> <CODE
CLASS="replaceable"
><I
>n</I
></CODE
>&quot; for each single test, where
<CODE
CLASS="replaceable"
><I
>n</I
></CODE
> is an integer incremented by one each time around.)
After all tests have been performed, <CODE
CLASS="literal"
>runtests()</CODE
> prints some
performance statistics that are computed by the Benchmark module.</P
><P
CLASS="para"
><CODE
CLASS="literal"
>runtests()</CODE
> is exported by Test::Harness by default.</P
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.97"
>7.2.66.1 The test script output</A
></H4
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-27169"
></A
>The first line output by a standard test script should be
<CODE
CLASS="literal"
>1..</CODE
><CODE
CLASS="replaceable"
><I
>m</I
></CODE
> with
<CODE
CLASS="replaceable"
><I
>m</I
></CODE
> being the number of tests that the test script
attempts to run.  Any output from the test script to standard error is ignored
and bypassed, and thus will be seen by the user.  Lines written to standard
output that look like Perl comments (starting with <CODE
CLASS="literal"
>/^\s*\#/</CODE
>)
are discarded.  Lines containing <CODE
CLASS="literal"
>/^(not\s+)?ok\b/</CODE
> are
interpreted as feedback for <CODE
CLASS="literal"
>runtests()</CODE
>.</P
><P
CLASS="para"
>The global variable <CODE
CLASS="literal"
>$Test::Harness::verbose</CODE
> is exportable and
can be used to let <CODE
CLASS="literal"
>runtests()</CODE
> display the standard output of
the script without altering the behavior otherwise.</P
><P
CLASS="para"
>It is tolerated if the script omits test numbers after <CODE
CLASS="literal"
>ok</CODE
>.
In this case Test::Harness maintains its own counter.  So the following script
output:</P
><P
CLASS="para"
><BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>1..6
not ok
ok
not ok
ok
ok
not ok</PRE
></BLOCKQUOTE
></P
><P
CLASS="para"
>will generate:</P
><P
CLASS="para"
><BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>FAILED tests 1, 3, 6
Failed 3/6 tests, 50.00% okay</PRE
></BLOCKQUOTE
></P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.98"
>7.2.66.2 Diagnostics</A
></H4
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
>All tests successful.\nFiles=%d,  Tests=%d, %s</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>If all tests are successful, some statistics about the performance are
printed.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>FAILED tests %s\n\tFailed %d/%d tests, %.2f%% okay.</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>For any single script that has failing subtests, these statistics
are printed.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Test returned status %d (wstat %d)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Scripts that return a non-zero exit status, both <CODE
CLASS="literal"
>$?&gt;&gt;8</CODE
> and <CODE
CLASS="literal"
>$?</CODE
>,
are printed in a message similar to the above.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Failed 1 test, %.2f%% okay.</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
></P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Failed %d/%d tests, %.2f%% okay.</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>If not all tests were successful, the script dies with one of the
above messages.</P
></DD
></DL
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1.99"
>7.2.66.3 Notes</A
></H4
><P
CLASS="para"
>Test::Harness uses <B
CLASS="emphasis.bold"
>$^X</B
> to determine which Perl binary to run
the tests
with.  Test scripts running via the shebang (<CODE
CLASS="literal"
>#!</CODE
>) line may not be
portable because <B
CLASS="emphasis.bold"
>$^X</B
> is not consistent for shebang scripts across
platforms.  This is no problem when Test::Harness is run with an
absolute path to the Perl binary or when <B
CLASS="emphasis.bold"
>$^X</B
> can be found in the path.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_065.htm"
TITLE="7.2.65 Term::Complete&nbsp;- Word Completion Module"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.65 Term::Complete&nbsp;- Word Completion Module"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_067.htm"
TITLE="7.2.67 Text::Abbrev&nbsp;- Create an Abbreviation Table from a List"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.67 Text::Abbrev&nbsp;- Create an Abbreviation Table from a List"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.2.65 Term::Complete&nbsp;- Word Completion Module</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.2.67 Text::Abbrev&nbsp;- Create an Abbreviation Table from a List</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
