<HTML
><HEAD
>
<TITLE>[Chapter 7] 7.2.22 ExtUtils::Mksymlists&nbsp;- Write Linker Option Files for Dynamic Extension</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:02:14Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"><LINK
REL="prev"
HREF="ch07_021.htm"
TITLE="7.2.21 ExtUtils::Mkbootstrap&nbsp;- Make a Bootstrap File for Use by DynaLoader"><LINK
REL="next"
HREF="ch07_023.htm"
TITLE="7.2.23 ExtUtils::MM_OS2&nbsp;- Methods to Override UNIX Behavior in ExtUtils::MakeMaker"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_021.htm"
TITLE="7.2.21 ExtUtils::Mkbootstrap&nbsp;- Make a Bootstrap File for Use by DynaLoader"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.21 ExtUtils::Mkbootstrap&nbsp;- Make a Bootstrap File for Use by DynaLoader"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. The Standard Perl Library"
>Chapter 7<BR>The Standard Perl Library</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_023.htm"
TITLE="7.2.23 ExtUtils::MM_OS2&nbsp;- Methods to Override UNIX Behavior in ExtUtils::MakeMaker"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.23 ExtUtils::MM_OS2&nbsp;- Methods to Override UNIX Behavior in ExtUtils::MakeMaker"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="AUTOID-21823"
>7.2.22 ExtUtils::Mksymlists&nbsp;- Write Linker Option Files for Dynamic Extension</A
></H3
><PRE
CLASS="programlisting"
>use ExtUtils::Mksymlists;

Mksymlists(  NAME     =&gt; $name,
             DL_FUNCS =&gt; { $pkg1 =&gt; [$func1, $func2], $pkg2 =&gt; [$func3] },
             DL_VARS  =&gt; [$var1, $var2, $var3]);</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-21827"
></A
><A
CLASS="indexterm"
NAME="AUTOID-21829"
></A
><CODE
CLASS="literal"
>ExtUtils::Mksymlists()</CODE
> produces files used by the linker
under some OSes during the creation of shared libraries for dynamic extensions.
It is normally called from a MakeMaker-generated <EM
CLASS="emphasis"
>Makefile</EM
>
when the extension is built.  The linker option file is generated by calling the
function <CODE
CLASS="literal"
>Mksymlists()</CODE
>, which is exported by default from
ExtUtils::Mksymlists.  It takes one argument, a list of key/value pairs, in
which the following keys are recognized:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
>NAME</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>This gives the name of the extension (for example, <CODE
CLASS="literal"
>Tk::Canvas</CODE
>)
for which
the linker option file will be produced.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>DL_FUNCS</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>This is identical to the <CODE
CLASS="literal"
>DL_FUNCS</CODE
> attribute available via MakeMaker,
from which it is usually taken.  Its value is a reference to a hash,
in which each key is the name of a package, and
each value is a reference to an array of function names, which
should be exported by the extension. So, one might say:</P
><PRE
CLASS="programlisting"
>DL_FUNCS =&gt; {
     Homer::Iliad   =&gt; [ qw(trojans greeks) ],
     Homer::Odyssey =&gt; [ qw(travelers family suitors) ],
},</PRE
><P
CLASS="para"
>The function names should be identical to those in the
<CODE
CLASS="literal"
>XSUB</CODE
> code; <CODE
CLASS="literal"
>Mksymlists()</CODE
> will
alter the names written to the linker option file to match the changes
made by <EM
CLASS="emphasis"
>xsubpp</EM
>.  In addition, if none of the
functions in a list begins with the string &quot;<CODE
CLASS="literal"
>boot_</CODE
>&quot;,
<CODE
CLASS="literal"
>Mksymlists()</CODE
> will add a bootstrap function for that
package, just as <EM
CLASS="emphasis"
>xsubpp</EM
> does.  (If a
<CODE
CLASS="literal"
>boot_</CODE
><CODE
CLASS="replaceable"
><I
>pkg</I
></CODE
> function is present
in the list, it is passed through unchanged.)  If
<CODE
CLASS="literal"
>DL_FUNCS</CODE
> is not specified, it defaults to the
bootstrap function for the extension specified in
<CODE
CLASS="literal"
>NAME</CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>DL_VARS</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>This is identical to the <CODE
CLASS="literal"
>DL_VARS</CODE
> attribute available via MakeMaker,
and, like <CODE
CLASS="literal"
>DL_FUNCS</CODE
>, it is usually specified via MakeMaker.  Its
value is a reference to an array of variable names that should
be exported by the extension.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>FILE</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>This key can be used to specify the name of the linker option file
(minus the OS-specific extension) if for some reason you do not
want to use the default value, which is the last word of the <CODE
CLASS="literal"
>NAME</CODE
>
attribute (for example, for <CODE
CLASS="literal"
>Tk::Canvas</CODE
>,
<CODE
CLASS="literal"
>FILE</CODE
> defaults to <CODE
CLASS="literal"
>Canvas</CODE
>).</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>FUNCLIST</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>This provides an alternate means to specify function names to be
exported from the extension.  Its value is a reference to an
array of function names to be exported.  These
names are passed through unaltered to the linker options file.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>DLBASE</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>This item specifies the name by which the linker knows the
extension, which may be different from the name of the
extension itself (for instance, some linkers add an &quot;_&quot; to the
name of the extension).  If it is not specified, it is derived
from the <CODE
CLASS="literal"
>NAME</CODE
> attribute.  It is presently used only by OS/2.</P
></DD
></DL
><P
CLASS="para"
>When calling <CODE
CLASS="literal"
>Mksymlists()</CODE
>, one should always specify the <CODE
CLASS="literal"
>NAME</CODE
>
attribute.  In most cases, this is all that's necessary.  In
the case of unusual extensions, however, the other attributes
can be used to provide additional information to the linker.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_021.htm"
TITLE="7.2.21 ExtUtils::Mkbootstrap&nbsp;- Make a Bootstrap File for Use by DynaLoader"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.2.21 ExtUtils::Mkbootstrap&nbsp;- Make a Bootstrap File for Use by DynaLoader"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch07_023.htm"
TITLE="7.2.23 ExtUtils::MM_OS2&nbsp;- Methods to Override UNIX Behavior in ExtUtils::MakeMaker"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2.23 ExtUtils::MM_OS2&nbsp;- Methods to Override UNIX Behavior in ExtUtils::MakeMaker"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.2.21 ExtUtils::Mkbootstrap&nbsp;- Make a Bootstrap File for Use by DynaLoader</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.2.23 ExtUtils::MM_OS2&nbsp;- Methods to Override UNIX Behavior in ExtUtils::MakeMaker</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
