<HTML
><HEAD
>
<TITLE>[Chapter 19] 19.4 Passing Parameters via CGI</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl"><META
NAME="DC.creator"
CONTENT="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:36:15Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-284-0"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch19_01.htm"
TITLE="19. CGI Programming"><LINK
REL="prev"
HREF="ch19_03.htm"
TITLE="19.3 Simplest CGI Program"><LINK
REL="next"
HREF="ch19_05.htm"
TITLE="19.5 Less Typing"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/lsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_03.htm"
TITLE="19.3 Simplest CGI Program"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.3 Simplest CGI Program"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch19_01.htm"
TITLE="19. CGI Programming"
>Chapter 19<BR>CGI Programming</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_05.htm"
TITLE="19.5 Less Typing"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.5 Less Typing"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch19-27146"
>19.4 Passing Parameters via CGI</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch19-idx-4317-0"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-4317-1"
></A
>You don't need a form to pass a parameter to (most) CGI programs. To test this, change the URL to <EM
CLASS="emphasis"
>http://www.SOMEWHERE.org /cgi-bin/ice_cream?flavor=mint</EM
></P
><P
CLASS="para"
>When you point your browser at this URL, the browser not only requests the web server to invoke the <EM
CLASS="emphasis"
>ice_cream</EM
> program, but it also passes the string <CODE
CLASS="literal"
>flavor=mint</CODE
> to the program. Now it's up to the program to read the argument string and pick it apart. Doing this properly is not as easy as you might think. Many programs try to wing it and parse the request on their own, but most hand-rolled algorithms only work some of the time. Given how hard it is to get it right in all cases, you probably shouldn't try to write your own code, especially when perfectly fine modules already handle the tricky parsing business for you. </P
><P
CLASS="para"
>Enter the CGI.pm module, which always parses the incoming CGI request correctly. To pull this module into your program, merely say </P
><PRE
CLASS="programlisting"
>use CGI;</PRE
><P
CLASS="para"
>somewhere near the top of your program.[<A
CLASS="footnote"
HREF="#ch19-pgfId-1270"
>5</A
>] </P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch19-pgfId-1270"
>[5]</A
> All Perl modules end in the suffix ".pm"; in fact, the <CODE
CLASS="literal"
>use</CODE
> statement assumes this suffix. You can learn how to build your own modules in <A
CLASS="olink"
HREF="../prog/ch05_01.htm"
>Chapter 5</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> or the <EM
CLASS="emphasis"
>perlmod</EM
> (1) manpage.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>use</CODE
><A
CLASS="indexterm"
NAME="ch19-idx-4318-0"
></A
> statement is like an <CODE
CLASS="literal"
>#include</CODE
> statement in C programming in that it pulls in code from another file at compile-time. But it also allows optional arguments specifying which functions and variables you'd like to access from that module. Put those in a list following the module name in the <CODE
CLASS="literal"
>use</CODE
> statement. You can then access the named functions and variables as if they were your own. </P
><P
CLASS="para"
>In this case, all we need to use from CGI.pm is the <CODE
CLASS="literal"
>param()</CODE
><A
CLASS="indexterm"
NAME="ch19-idx-4319-0"
></A
> function.[<A
CLASS="footnote"
HREF="#ch19-pgfId-1282"
>6</A
>] </P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch19-pgfId-1282"
>[6]</A
> Some modules automatically export all their functions, but because CGI.pm is really an object module masquerading as a traditional module, we have to ask for its functions explicitly. </P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>If given no arguments, <CODE
CLASS="literal"
>param()</CODE
> returns a list of all the fields that were in the HTML form this CGI script is responding to. (In the current example that's the <CODE
CLASS="literal"
>flavor</CODE
> field. In general, it's the list of all the names in <CODE
CLASS="literal"
>name=value</CODE
> strings received from the submitted form.) If given an argument naming a field, <CODE
CLASS="literal"
>param()</CODE
> returns the value (or values) associated with that field. Therefore, <CODE
CLASS="literal"
>param(&quot;flavor&quot;)</CODE
> returns <CODE
CLASS="literal"
>&quot;mint&quot;</CODE
>, because we passed in <CODE
CLASS="literal"
>?flavor=mint</CODE
> at the end of the URL. </P
><P
CLASS="para"
>Even though we have only one item in our import list for <CODE
CLASS="literal"
>use</CODE
>, we'll employ the <CODE
CLASS="literal"
>qw()</CODE
><A
CLASS="indexterm"
NAME="ch19-idx-4325-0"
></A
> notation. This way it will be easier to expand the list later. </P
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# cgi-bin/ice_cream: program to answer ice cream
# favorite flavor form (version 1)
use CGI qw(param);

print &lt;&lt;END_of_Start;
Content-type: text/html

&lt;HTML&gt;
    &lt;HEAD&gt;
    &lt;TITLE&gt;Hello World&lt;/TITLE&gt;
    &lt;/HEAD&gt;
    &lt;BODY&gt;
    &lt;H1&gt;Greetings, Terrans!&lt;/H1&gt;
END_of_Start

my $favorite = param(&quot;flavor&quot;);
print &quot;&lt;P&gt;Your favorite flavor is $favorite.&quot;;
print &lt;&lt;All_Done;
    &lt;/BODY&gt;
&lt;/HTML&gt;
All_Done</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_03.htm"
TITLE="19.3 Simplest CGI Program"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.3 Simplest CGI Program"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_05.htm"
TITLE="19.5 Less Typing"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.5 Less Typing"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>19.3 Simplest CGI Program</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>19.5 Less Typing</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
