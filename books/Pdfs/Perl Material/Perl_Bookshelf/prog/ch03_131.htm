<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.131 scalar</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:53:38Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_130.htm"
TITLE="3.2.130 s///"><LINK
REL="next"
HREF="ch03_132.htm"
TITLE="3.2.132 seek"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_130.htm"
TITLE="3.2.130 s///"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.130 s///"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_132.htm"
TITLE="3.2.132 seek"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.132 seek"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-SCALAR"
>3.2.131 scalar</A
></H3
><PRE
CLASS="programlisting"
>scalar <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-12436"
></A
><A
CLASS="indexterm"
NAME="AUTOID-12438"
></A
><A
CLASS="indexterm"
NAME="AUTOID-12441"
></A
>This pseudo-function may be used within a <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
> to force <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
>
to be
evaluated in scalar context when evaluation in list context
would produce a different result.</P
><P
CLASS="para"
>For example:</P
><PRE
CLASS="programlisting"
>local($nextvar) = scalar &lt;STDIN&gt;;</PRE
><P
CLASS="para"
>prevents <CODE
CLASS="literal"
>&lt;STDIN&gt;</CODE
> from reading all the lines from
standard input before doing the assignment, since assignment to a <B
CLASS="emphasis.bold"
>local</B
> list provides a list context.  (Without the use of
<A
CLASS="xref"
HREF="ch03_131.htm"
TITLE="scalar"
><B
CLASS="xref.cmd"
>scalar</B
></A
> in this example, the first line from
<CODE
CLASS="literal"
>&lt;STDIN&gt;</CODE
> would still be assigned to
<CODE
CLASS="literal"
>$nextvar</CODE
>, but the subsequent lines would be read and thrown
away.  This is because the assignment is being made to a list&nbsp;- one that
happens to be able to receive only a single, scalar value.)</P
><P
CLASS="para"
>Of course, a simpler way with less typing would be to simply leave the
parentheses off, thereby changing the list context to a scalar one:</P
><PRE
CLASS="programlisting"
>local $nextvar = &lt;STDIN&gt;;</PRE
><P
CLASS="para"
>Since a <A
CLASS="xref"
HREF="ch03_110.htm"
TITLE="print"
><B
CLASS="xref.cmd"
>print</B
></A
> function is a
<CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
> operator, you have to say:</P
><PRE
CLASS="programlisting"
>print &quot;Length is &quot;, scalar(@ARRAY), &quot;\n&quot;;</PRE
><P
CLASS="para"
>if you want the length of <CODE
CLASS="literal"
>@ARRAY</CODE
> to be printed out.</P
><P
CLASS="para"
>One never needs to force evaluation in a list context, because any operation
that wants a list already provides a list context to its list arguments for
free.  So there's no <B
CLASS="emphasis.bold"
>list</B
> function corresponding
to <A
CLASS="xref"
HREF="ch03_131.htm"
TITLE="scalar"
><B
CLASS="xref.cmd"
>scalar</B
></A
>.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_130.htm"
TITLE="3.2.130 s///"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.130 s///"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_132.htm"
TITLE="3.2.132 seek"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.132 seek"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.130 s///</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.132 seek</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
