<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.171 tie</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:55:25Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_170.htm"
TITLE="3.2.170 telldir"><LINK
REL="next"
HREF="ch03_172.htm"
TITLE="3.2.172 tied"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_170.htm"
TITLE="3.2.170 telldir"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.170 telldir"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_172.htm"
TITLE="3.2.172 tied"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.172 tied"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-TIE"
>3.2.171 tie</A
></H3
><PRE
CLASS="programlisting"
>tie <CODE
CLASS="replaceable"
><I
>VARIABLE</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>CLASSNAME</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-13810"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13812"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13815"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13818"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13821"
></A
>This function binds a variable to a package class that will provide
the implementation for the variable.  <CODE
CLASS="replaceable"
><I
>VARIABLE</I
></CODE
> is the name of the
variable to be tied.  <CODE
CLASS="replaceable"
><I
>CLASSNAME</I
></CODE
> is the name of a class
implementing objects of an appropriate type.  Any additional arguments are
passed to the &quot;new&quot; method of the class (meaning <CODE
CLASS="literal"
>TIESCALAR</CODE
>,
<CODE
CLASS="literal"
>TIEARRAY</CODE
>, or <CODE
CLASS="literal"
>TIEHASH</CODE
>).  Typically these are arguments such
as might be passed to the <EM
CLASS="emphasis"
>dbm_open</EM
>(3) function of C, but this is
package dependent.  The object
returned by the &quot;new&quot; method is also returned by the <A
CLASS="xref"
HREF="ch03_171.htm"
TITLE="tie"
><B
CLASS="xref.cmd"
>tie</B
></A
>
function, which can be useful if you want to access other methods in
<CODE
CLASS="replaceable"
><I
>CLASSNAME</I
></CODE
>.  (The object can also be accessed through the <A
CLASS="xref"
HREF="ch03_172.htm"
TITLE="tied"
><B
CLASS="xref.cmd"
>tied</B
></A
>
function.) So, a class for tying a hash to an ISAM implementation
might provide an extra method to traverse a set of keys sequentially
(the &quot;S&quot; of ISAM), since your typical DBM implementation can't do that.</P
><P
CLASS="para"
>Note that functions such as <A
CLASS="xref"
HREF="ch03_079.htm"
TITLE="keys"
><B
CLASS="xref.cmd"
>keys</B
></A
> and <A
CLASS="xref"
HREF="ch03_187.htm"
TITLE="values"
><B
CLASS="xref.cmd"
>values</B
></A
> may return huge list values when used on
large objects like DBM files.  You may prefer to use the <A
CLASS="xref"
HREF="ch03_030.htm"
TITLE="each"
><B
CLASS="xref.cmd"
>each</B
></A
> function to iterate over such.  For example:</P
><PRE
CLASS="programlisting"
>use NDBM_File;
tie %ALIASES, &quot;NDBM_File&quot;, &quot;/etc/aliases&quot;, 1, 0
    or die &quot;Can't open aliases: $!\n&quot;;
while (($key,$val) = each %ALIASES) {
    print $key, ' = ', $val, &quot;\n&quot;;
}
untie %ALIASES;</PRE
><P
CLASS="para"
>A class implementing a hash should provide the following
methods:</P
><PRE
CLASS="programlisting"
>TIEHASH $class, <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>
DESTROY $self
FETCH $self, $key
STORE $self, $key, $value
DELETE $self, $key
EXISTS $self, $key
FIRSTKEY $self
NEXTKEY $self, $lastkey</PRE
><P
CLASS="para"
>A class implementing an ordinary array should provide the following methods:</P
><PRE
CLASS="programlisting"
>TIEARRAY $classname, <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>
DESTROY $self
FETCH $self, $subscript
STORE $self, $subscript, $value</PRE
><P
CLASS="para"
>(As of this writing, other methods are still being designed.  Check the
online documentation for additions.)</P
><P
CLASS="para"
>A class implementing a scalar should provide the following methods:</P
><PRE
CLASS="programlisting"
>TIESCALAR $classname, <CODE
CLASS="replaceable"
><I
>LIST</I
></CODE
>
DESTROY $self
FETCH $self, 
STORE $self, $value</PRE
><P
CLASS="para"
>See &quot;Using Tied Variables&quot; in <A
CLASS="xref"
HREF="ch05_01.htm"
TITLE="Packages, Modules, and Object Classes"
>Chapter 5</A
> for detailed discussion of all these methods.
Unlike <A
CLASS="xref"
HREF="ch03_024.htm"
TITLE="dbmopen"
><B
CLASS="xref.cmd"
>dbmopen</B
></A
>, the <A
CLASS="xref"
HREF="ch03_171.htm"
TITLE="tie"
><B
CLASS="xref.cmd"
>tie</B
></A
> function will not <A
CLASS="xref"
HREF="ch03_185.htm"
TITLE="use"
><B
CLASS="xref.cmd"
>use</B
></A
> or <A
CLASS="xref"
HREF="ch03_123.htm"
TITLE="require"
><B
CLASS="xref.cmd"
>require</B
></A
> a module
for you&nbsp;- you need to do that explicitly yourself.  See the DB_File and
Config modules for interesting <A
CLASS="xref"
HREF="ch03_171.htm"
TITLE="tie"
><B
CLASS="xref.cmd"
>tie</B
></A
>
implementations.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_170.htm"
TITLE="3.2.170 telldir"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.170 telldir"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_172.htm"
TITLE="3.2.172 tied"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.172 tied"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.170 telldir</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.172 tied</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
