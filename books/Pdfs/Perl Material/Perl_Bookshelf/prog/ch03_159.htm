<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.159 stat</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:54:37Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_158.htm"
TITLE="3.2.158 srand"><LINK
REL="next"
HREF="ch03_160.htm"
TITLE="3.2.160 study"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_158.htm"
TITLE="3.2.158 srand"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.158 srand"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_160.htm"
TITLE="3.2.160 study"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.160 study"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-STAT"
>3.2.159 stat</A
></H3
><PRE
CLASS="programlisting"
>stat <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>
stat <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-13348"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13350"
></A
>This function returns a 13-element list giving the statistics for a
file, either the file opened via <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>, or named by <CODE
CLASS="replaceable"
><I
>EXPR</I
></CODE
>.
It's typically used as follows:</P
><PRE
CLASS="programlisting"
>($dev,$ino,$mode,$nlink,$uid,$gid,$rdev,$size,
    $atime,$mtime,$ctime,$blksize,$blocks)
            = stat $filename;</PRE
><P
CLASS="para"
>Not all fields are supported on all filesystem types.
Here are the meanings of the fields:<A
CLASS="indexterm"
NAME="AUTOID-13357"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13360"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13362"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13365"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13367"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13369"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13371"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13373"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13375"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13377"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13379"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13381"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13383"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13385"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13387"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13389"
></A
><A
CLASS="indexterm"
NAME="AUTOID-13391"
></A
></P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Field</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Meaning</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>dev</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Device number of filesystem </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>ino</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Inode number</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>mode</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>File mode  (type and permissions)</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>nlink</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Number of (hard) links to the file </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>uid</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Numeric user ID of file's owner </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>gid</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Numeric group ID of file's owner </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>rdev</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>The device identifier (special files only)</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>size</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Total size of file, in bytes </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>atime</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Last access time since the epoch</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>mtime</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Last modify time since the epoch</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>ctime</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Inode change time (NOT creation time!) since the epoch</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>blksize</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Preferred blocksize for file system I/O</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>blocks</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Actual number of blocks allocated</TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
><CODE
CLASS="literal"
>$dev</CODE
> and <CODE
CLASS="literal"
>$ino</CODE
>, taken together, uniquely
identify a file.  The <CODE
CLASS="literal"
>$blksize</CODE
> and <CODE
CLASS="literal"
>$blocks</CODE
>
are likely defined only on BSD-derived filesystems.  The
<CODE
CLASS="literal"
>$blocks</CODE
> field (if defined) is reported in 512-byte blocks.
Note that <CODE
CLASS="literal"
>$blocks*512</CODE
> can differ greatly from
<CODE
CLASS="literal"
>$size</CODE
> for files containing unallocated blocks, or &quot;holes&quot;,
which aren't counted in <CODE
CLASS="literal"
>$blocks</CODE
>.</P
><P
CLASS="para"
>If <A
CLASS="xref"
HREF="ch03_159.htm"
TITLE="stat"
><B
CLASS="xref.cmd"
>stat</B
></A
> is passed the special filehandle
consisting of an underline, no actual <EM
CLASS="emphasis"
>stat</EM
>(2) is done, but the current contents of
the stat structure from the last <B
CLASS="emphasis.bold"
>stat</B
> or <B
CLASS="emphasis.bold"
>stat</B
>-based file test (the <CODE
CLASS="literal"
>-x</CODE
> operators) are returned.</P
><P
CLASS="para"
>The following example first stats <CODE
CLASS="literal"
>$file</CODE
> to see whether it is
executable.  If it is, it then pulls the device number out of the existing stat
structure and tests it to see whether it looks like a Network File System
(NFS). Such filesystems tend to have negative device numbers.</P
><PRE
CLASS="programlisting"
>if (-x $file and ($d) = stat(_) and $d &lt; 0) {
    print &quot;$file is executable NFS file\n&quot;;
}</PRE
><P
CLASS="para"
>Hint: if you need only the size of the file, check out the <CODE
CLASS="literal"
>-s</CODE
> file test operator, which returns the size in
bytes directly.  There are also file tests that return the ages of files in
days.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_158.htm"
TITLE="3.2.158 srand"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.158 srand"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_160.htm"
TITLE="3.2.160 study"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.160 study"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.158 srand</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.160 study</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
