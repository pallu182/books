<HTML
><HEAD
>
<TITLE>[Appendix A] Exercise Answers</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl"><META
NAME="DC.creator"
CONTENT="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:36:44Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-284-0"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="index.htm"
TITLE="Learning Perl"><LINK
REL="prev"
HREF="ch19_12.htm"
TITLE="19.12 Exercises"><LINK
REL="next"
HREF="appa_02.htm"
TITLE="A.2 Chapter 3, Arrays and List Data"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/lsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_12.htm"
TITLE="19.12 Exercises"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.12 Exercises"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Appendix A</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_02.htm"
TITLE="A.2 Chapter 3, Arrays and List Data"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.2 Chapter 3, Arrays and List Data"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="appendix"
><H1
CLASS="appendix"
><A
CLASS="title"
NAME="appa-19582"
>A. Exercise Answers</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#appa-22410"
TITLE="A.1 Chapter 2, Scalar Data"
>Chapter 2, Scalar Data</A
><BR><A
CLASS="sect1"
HREF="appa_02.htm"
TITLE="A.2 Chapter 3, Arrays and List Data"
>Chapter 3, Arrays and List Data</A
><BR><A
CLASS="sect1"
HREF="appa_03.htm"
TITLE="A.3 Chapter 4, Control Structures"
>Chapter 4, Control Structures</A
><BR><A
CLASS="sect1"
HREF="appa_04.htm"
TITLE="A.4 Chapter 5, Hashes"
>Chapter 5, Hashes</A
><BR><A
CLASS="sect1"
HREF="appa_05.htm"
TITLE="A.5 Chapter 6, Basic I/O"
>Chapter 6, Basic I/O</A
><BR><A
CLASS="sect1"
HREF="appa_06.htm"
TITLE="A.6 Chapter 7, Regular Expressions"
>Chapter 7, Regular Expressions</A
><BR><A
CLASS="sect1"
HREF="appa_07.htm"
TITLE="A.7 Chapter 8, Functions"
>Chapter 8, Functions</A
><BR><A
CLASS="sect1"
HREF="appa_08.htm"
TITLE="A.8 Chapter 9, Miscellaneous Control Structures"
>Chapter 9, Miscellaneous Control Structures</A
><BR><A
CLASS="sect1"
HREF="appa_09.htm"
TITLE="A.9 Chapter 10, Filehandles and File Tests"
>Chapter 10, Filehandles and File Tests</A
><BR><A
CLASS="sect1"
HREF="appa_10.htm"
TITLE="A.10 Chapter 11, Formats"
>Chapter 11, Formats</A
><BR><A
CLASS="sect1"
HREF="appa_11.htm"
TITLE="A.11 Chapter 12, Directory Access"
>Chapter 12, Directory Access</A
><BR><A
CLASS="sect1"
HREF="appa_12.htm"
TITLE="A.12 Chapter 13, File and Directory Manipulation"
>Chapter 13, File and Directory Manipulation</A
><BR><A
CLASS="sect1"
HREF="appa_13.htm"
TITLE="A.13 Chapter 14, Process Management"
>Chapter 14, Process Management</A
><BR><A
CLASS="sect1"
HREF="appa_14.htm"
TITLE="A.14 Chapter 15, Other Data Transformation"
>Chapter 15, Other Data Transformation</A
><BR><A
CLASS="sect1"
HREF="appa_15.htm"
TITLE="A.15 Chapter 16, System Database Access"
>Chapter 16, System Database Access</A
><BR><A
CLASS="sect1"
HREF="appa_16.htm"
TITLE="A.16 Chapter 17, User Database Manipulation"
>Chapter 17, User Database Manipulation</A
><BR><A
CLASS="sect1"
HREF="appa_17.htm"
TITLE="A.17 Chapter 18, Converting Other Languages to Perl"
>Chapter 18, Converting Other Languages to Perl</A
><BR><A
CLASS="sect1"
HREF="appa_18.htm"
TITLE="A.18 Chapter 19, CGI Programming"
>Chapter 19, CGI Programming</A
></P
><P
></P
></DIV
><P
CLASS="para"
>This appendix gives the answers for the exercises found at the end of each chapter.</P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appa-22410"
>A.1 Chapter 2, Scalar Data</A
></H2
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-178835"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>$pi = 3.141592654;
$result = 2 * $pi * 12.5;
print &quot;radius 12.5 is circumference $result\n&quot;;</PRE
><P
CLASS="para"
>First, we give a constant value (<IMG
SRC="../chars/pi.gif"
ALT="[pi]">)<A
CLASS="indexterm"
NAME="appa-idx-178695-0"
></A
> to the scalar variable <CODE
CLASS="literal"
>$pi</CODE
>. Next, we compute the circumference using this value of <CODE
CLASS="literal"
>$pi</CODE
> in an expression. Finally, we print the result using a string containing a reference to the result.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-178839"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>print &quot;What is the radius: &quot;;
<A
CLASS="indexterm"
NAME="appa-idx-178696-0"
></A
>chomp($radius = &lt;STDIN&gt;);
$pi = 3.141592654;
$result = 2 * $pi * $radius;
print &quot;radius $radius is circumference $result\n&quot;;</PRE
><P
CLASS="para"
>This is similar to the previous exercise, but here we've asked the person running the program for a value, using a  <CODE
CLASS="literal"
>print</CODE
> statement for a prompt, and then the <CODE
CLASS="literal"
>&lt;STDIN&gt;</CODE
> operator to read a line from the terminal.</P
><P
CLASS="para"
>If we had left off the <CODE
CLASS="literal"
>chomp</CODE
>, we'd get a newline in the middle of the displayed string at the end. It's important to get that newline off the string as soon as we can.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-178845"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>print &quot;First number: &quot;; chomp($a = &lt;STDIN&gt;);
print &quot;Second number: &quot;; chomp($b = &lt;STDIN&gt;);
$c = $a * $b; print &quot;Answer is $c.\n&quot;;</PRE
><P
CLASS="para"
>The first line does three things: prompts you with a message, reads a line from standard input, and then gets rid of the inevitable newline at the end of the string. Note that since we are using the value of <CODE
CLASS="literal"
>$a</CODE
> strictly as a number, we can omit the <CODE
CLASS="literal"
>chomp</CODE
> here, because <CODE
CLASS="literal"
>45\n</CODE
> is 45 when used numerically. However, such careless programming would likely come back to haunt us later on (for example, if we were to include <CODE
CLASS="literal"
>$a</CODE
> in a message).</P
><P
CLASS="para"
>The second line does the same thing for the second number and places it into the scalar variable <CODE
CLASS="literal"
>$b</CODE
>.</P
><P
CLASS="para"
>The third line multiplies the two numbers together and prints the result. Note the newline at the end of the string here, contrasted with its absence in the first two lines. The first two messages are prompts, for which user input was desired on the same line. This last message is a complete statement; if we had left the newline out of the string, the shell prompt would appear immediately after the message. Not very cool.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-178852"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>print &quot;String: &quot;; $a = &lt;STDIN&gt;;
print &quot;Number of times: &quot;; chomp($b = &lt;STDIN&gt;);
$c = $a <A
CLASS="indexterm"
NAME="appa-idx-178705-0"
></A
>x $b; print &quot;The result is:\n$c&quot;;</PRE
><P
CLASS="para"
>Like the previous exercise, the first two lines ask for, and accept, values for the two variables. Unlike the previous exercise, we don't chomp the newline from the end of the string, because we need it! The third line takes the two entered values and performs a string repetition on them, then displays the answer. Note that the interpolation of <CODE
CLASS="literal"
>$c</CODE
> is not followed by a newline, because we believe that <CODE
CLASS="literal"
>$c</CODE
> will always end in a newline anyway.</P
></LI
></OL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_12.htm"
TITLE="19.12 Exercises"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.12 Exercises"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_02.htm"
TITLE="A.2 Chapter 3, Arrays and List Data"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.2 Chapter 3, Arrays and List Data"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>19.12 Exercises</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>A.2 Chapter 3, Arrays and List Data</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
