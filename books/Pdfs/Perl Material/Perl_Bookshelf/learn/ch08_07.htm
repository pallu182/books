<HTML
><HEAD
>
<TITLE>[Chapter 8] 8.7 File-Level my( ) Variables</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl"><META
NAME="DC.creator"
CONTENT="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:33:36Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-284-0"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch08_01.htm"
TITLE="8. Functions"><LINK
REL="prev"
HREF="ch08_06.htm"
TITLE="8.6 Semiprivate Variables Using local"><LINK
REL="next"
HREF="ch08_08.htm"
TITLE="8.8 Exercises"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/lsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_06.htm"
TITLE="8.6 Semiprivate Variables Using local"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.6 Semiprivate Variables Using local"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch08_01.htm"
TITLE="8. Functions"
>Chapter 8<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_08.htm"
TITLE="8.8 Exercises"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.8 Exercises"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch08-40316"
>8.7 File-Level my( ) Variables</A
></H2
><P
CLASS="para"
>The <CODE
CLASS="literal"
>my()</CODE
> operator can also be used at the outermost level of your program, outside of any subroutines or blocks. While this isn't really a "local" variable in the sense defined above, it's actually rather useful, especially when used in conjunction with a Perl <EM
CLASS="emphasis"
>pragma</EM
>:[<A
CLASS="footnote"
HREF="#ch08-pgfId-84580"
>4</A
>]<PRE
CLASS="programlisting"
> use strict;</PRE
></P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch08-pgfId-84580"
>[4]</A
> A pragma is a compiler directive. Other directives include those to set up integer arithmetic, overload numeric operators, or request more verbose warnings and error messages. These are documented in <A
CLASS="olink"
HREF="../prog/ch07_01.htm"
>Chapter 7</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and the <EM
CLASS="emphasis"
>perlmodlib </EM
>(1) manpage.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>If you place this pragma at the beginning of your file, you will no longer be able to use variables (scalars, arrays, and hashes) until you have first "declared" them. And you declare them with <CODE
CLASS="literal"
>my()</CODE
>, like so:</P
><PRE
CLASS="programlisting"
>use strict;
my $a;                         # starts as undef
my @b = qw(fred barney betty); # give initial value
...
push @b, qw(wilma);            # cannot leave her out
@c = sort @b;                  # WILL NOT COMPILE</PRE
><P
CLASS="para"
>That last statement will be flagged at compile time as an error, because it referred to a variable that had not previously been declared with <CODE
CLASS="literal"
>my</CODE
> (that is, <CODE
CLASS="literal"
>@c</CODE
>). In other words, your program won't even start running unless every single variable being used has been declared.</P
><P
CLASS="para"
>The advantages of forcing variable declarations are twofold:</P
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch08-pgfId-471"
></A
>Your programs will run slightly faster (variables created with <CODE
CLASS="literal"
>my</CODE
> are accessed slightly faster than ordinary variables[<A
CLASS="footnote"
HREF="#ch08-pgfId-489"
>5</A
>]).</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch08-pgfId-489"
>[5]</A
> In this case, "ordinary variable" is really a package variable (so <CODE
CLASS="literal"
>$x</CODE
> is really <CODE
CLASS="literal"
>$main::x</CODE
>). Variables created with <CODE
CLASS="literal"
>my()</CODE
> are not found in any package.</P
></DIV
></BLOCKQUOTE
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch08-pgfId-472"
></A
>You'll catch mistakes in typing much faster, because you'll no longer be able to accidentally reference a nonexisting variable named <CODE
CLASS="literal"
>$freed</CODE
> when you wanted <CODE
CLASS="literal"
>$fred</CODE
>.</P
></LI
></OL
><P
CLASS="para"
>Because of this, many Perl programmers automatically begin every new Perl program with <CODE
CLASS="literal"
>use</CODE
> <CODE
CLASS="literal"
>strict</CODE
>.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_06.htm"
TITLE="8.6 Semiprivate Variables Using local"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.6 Semiprivate Variables Using local"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_08.htm"
TITLE="8.8 Exercises"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.8 Exercises"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>8.6 Semiprivate Variables Using local</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>8.8 Exercises</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
