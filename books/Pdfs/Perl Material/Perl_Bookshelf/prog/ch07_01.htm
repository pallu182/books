<HTML
><HEAD
>
<TITLE>[Chapter 7] The Standard Perl Library</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:00:18Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="index.htm"
TITLE="Programming Perl"><LINK
REL="prev"
HREF="ch06_04.htm"
TITLE="6.4 Cooperating with Other Languages"><LINK
REL="next"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch06_04.htm"
TITLE="6.4 Cooperating with Other Languages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.4 Cooperating with Other Languages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 7</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2 Library Modules"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="CHAPTER"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="PERL2-CH-7"
>7. The Standard Perl Library</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="SECT1"
HREF="#PERL2-CH-7-SECT-1A"
TITLE="7.1 Beyond the Standard Library"
>Beyond the Standard Library</A
><BR><A
CLASS="SECT1"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"
>Library Modules</A
></P
><P
></P
></DIV
><P
CLASS="para"
>This chapter describes the collection of Perl code that comes along
with the Perl distribution.  If you use this library and then share your
program with others, they will not have to take special steps to execute
the program, because the same library is available to Perl programs
everywhere.<A
CLASS="indexterm"
NAME="CH07.PSL"
></A
><A
CLASS="indexterm"
NAME="CH07.SLIB"
></A
></P
><P
CLASS="para"
>You'll save some time if you make the effort to get familiar with the
standard library.  There's no point in reinventing the wheel.  You
should be aware, however, that the library contains a wide range of
material.  While some modules may be extremely helpful, others may be
completely irrelevant to your needs.  For example, some are useful only
if you are creating extensions to Perl.
We offer below a rough classification of the library modules to aid you
in browsing.</P
><P
CLASS="para"
>First, however, let's untangle some terminology:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>package</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-18412"
></A
>A <EM
CLASS="emphasis"
>package</EM
> is a simple namespace management device, allowing two
different parts of a Perl program to have a (different) variable
named <CODE
CLASS="literal"
>$fred</CODE
>.  These namespaces are managed with the
<A
CLASS="xref"
HREF="ch03_106.htm"
TITLE="package"
><B
CLASS="xref.cmd"
>package</B
></A
> declaration, described in <A
CLASS="xref"
HREF="ch05_01.htm"
TITLE="Packages, Modules, and Object Classes"
>Chapter 5, <CITE
CLASS="chapter"
>Packages, Modules, and Object Classes</CITE
></A
>.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>library</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-18423"
></A
><A
CLASS="indexterm"
NAME="AUTOID-18425"
></A
>A <EM
CLASS="emphasis"
>library</EM
> is a set of subroutines for a particular purpose.  Often the
library declares itself a separate package so that related variables and
subroutines can be kept together, and so that they won't interfere with
other variables in your program.  Generally, a library is placed in a
separate file, often ending in &quot;<EM
CLASS="emphasis"
>.pl</EM
>&quot;, and then pulled into the main
program via <A
CLASS="xref"
HREF="ch03_123.htm"
TITLE="require"
><B
CLASS="xref.cmd"
>require</B
></A
>.  (This mechanism has largely been superseded
by the module mechanism, so nowadays we often use the term &quot;library&quot;
to talk about the whole system of modules that come with Perl.  See the
title of this chapter, for instance.)</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>module</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-18436"
></A
>A <EM
CLASS="emphasis"
>module</EM
> is a library that conforms to specific conventions, allowing
the file to be brought in with a <A
CLASS="xref"
HREF="ch03_185.htm"
TITLE="use"
><B
CLASS="xref.cmd"
>use</B
></A
> directive at compile time.
Module filenames end in &quot;<EM
CLASS="emphasis"
>.pm</EM
>&quot;, because the <A
CLASS="xref"
HREF="ch03_185.htm"
TITLE="use"
><B
CLASS="xref.cmd"
>use</B
></A
> directive insists
on that.  (It also translates the subpackage delimiter <CODE
CLASS="literal"
>::</CODE
> to
whatever your subdirectory delimiter is; it is <CODE
CLASS="literal"
>/</CODE
> on UNIX.)  <A
CLASS="xref"
HREF="ch05_01.htm"
TITLE="Packages, Modules, and Object Classes"
>Chapter 5</A
>
describes Perl modules in greater detail.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>pragma</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-18450"
></A
><A
CLASS="indexterm"
NAME="AUTOID-18452"
></A
>A <EM
CLASS="emphasis"
>pragma</EM
> is a module that affects the compilation phase of your program
as well as the execution phase.  Think of them as hints to the compiler.
Unlike modules, pragmas often (but not always) limit the scope of their
effects to the innermost enclosing block of your program.  The names
of pragmas are by convention all lowercase.</P
></DD
></DL
><P
CLASS="para"
>For easy reference, this chapter is arranged alphabetically. If you
wish to look something up by functional grouping, Tables 7-1 
through 7-11 display an (admittedly arbitrary)
listing of the modules and pragmas described in this chapter.</P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-1"
>Table 7.1: General Programming: Miscellaneous</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Benchmark</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Check and compare running times of code</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Config</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Access Perl configuration information</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Env</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Import environment variables</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>English</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Use English or <EM
CLASS="emphasis"
>awk</EM
> names for punctuation variables</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Getopt::Long</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Extended processing of command-line options</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Getopt::Std</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Process single-character switches with switch clustering</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>lib</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Manipulate <CODE
CLASS="literal"
>@INC</CODE
> at compile time</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Shell</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Run shell commands transparently within Perl</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>strict</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Restrict unsafe constructs</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Symbol</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generate anonymous globs; qualify variable names</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>subs</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Predeclare subroutine names</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>vars</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Predeclare global variable names</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-2"
>Table 7.2: General Programming: Error Handling and Logging</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Carp</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generate error messages</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>diagnostics</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Force verbose warning diagnostics</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>sigtrap</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Enable stack backtrace on unexpected signals</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Sys::Syslog</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Perl interface to UNIX <EM
CLASS="emphasis"
>syslog</EM
>(3) calls</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-3"
>Table 7.3: General Programming: File Access and Handling</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Cwd</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Get pathname of current working directory</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>DirHandle</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Supply object methods for directory handles</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>File::Basename</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Parse file specifications</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>File::CheckTree</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Run many tests on a collection of files</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>File::Copy</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Copy files or filehandles</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>File::Find</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Traverse a file tree</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>File::Path</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Create or remove a series of directories</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>FileCache</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Keep more files open than the system permits</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>FileHandle</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Supply object methods for filehandles</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>SelectSaver</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Save and restore selected filehandle</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-4"
>Table 7.4: General Programming: Text Processing and Screen Interfaces</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Pod::Text</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Convert POD data to formatted ASCII text</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Search::Dict</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Search for key in dictionary file</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Term::Cap</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Terminal capabilities interface</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Term::Complete</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Word completion module</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Text::Abbrev</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Create an abbreviation table from a list</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Text::ParseWords</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Parse text into a list of tokens</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Text::Soundex</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>The Soundex Algorithm described by Knuth</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Text::Tabs</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Expand and unexpand tabs</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Text::Wrap</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Wrap text into a paragraph</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-5"
>Table 7.5: Database Interfaces</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>AnyDBM_File</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Provide framework for multiple DBMs</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>DB_File</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tied access to Berkeley DB</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>GDBM_File</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tied access to GDBM library</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>NDBM_File</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tied access to NDBM files</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ODBM_File</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tied access to ODBM files</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>SDBM_File</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tied access to SDBM files</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-6"
>Table 7.6: Mathematics</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>integer</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Do arithmetic in integer instead of double</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Math::BigFloat</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Arbitrary-length floating-point math package</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Math::BigInt</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Arbitrary-length integer math package</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Math::Complex</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Complex numbers package</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-7"
>Table 7.7: Networking and Interprocess Communication</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>IPC::Open2</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Open a process for both reading and writing</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>IPC::Open3</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Open a process for reading, writing, and error handling</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Net::Ping</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Check whether a host is online</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Socket</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Load the C <EM
CLASS="emphasis"
>socket.h</EM
> defines and structure manipulators</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Sys::Hostname</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Try every conceivable way to get hostname</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-8"
>Table 7.8: Time and Locale</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Time::Local</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Efficiently compute time from local and GMT time</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>I18N::Collate</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Compare 8-bit scalar data according to the current locale</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-9"
>Table 7.9: For Developers: Autoloading and Dynamic Loading</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>AutoLoader</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Load functions only on demand</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>AutoSplit</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Split a module for autoloading</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Devel::SelfStubber</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generate stubs for a SelfLoading module</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>DynaLoader</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Automatic dynamic loading of Perl modules</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>SelfLoader</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Load functions only on demand</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-10"
>Table 7.10: For Developers: Language Extensions and Platform Development Support</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::Install</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Install files from here to there</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::Liblist</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Determine libraries to use and how to use them</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::MakeMaker</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Create a <EM
CLASS="emphasis"
>Makefile</EM
> for a Perl extension</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::Manifest</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Utilities to write and check a <EM
CLASS="emphasis"
>MANIFEST</EM
> file</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::Miniperl</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Write the C code for <EM
CLASS="emphasis"
>perlmain.c</EM
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::Mkbootstrap</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Make a bootstrap file for use by DynaLoader</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::Mksymlists</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Write linker option files for dynamic extension</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::MM_OS2</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Methods to override UNIX behavior in ExtUtils::MakeMaker</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::MM_Unix</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Methods used by ExtUtils::MakeMaker</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>ExtUtils::MM_VMS</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Methods to override UNIX behavior in ExtUtils::MakeMaker</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Fcntl</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Load the C <EM
CLASS="emphasis"
>fcntl.h</EM
> defines</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>POSIX</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Interface to IEEE Std 1003.1</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Safe</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Create safe namespaces for evaluating Perl code</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Test::Harness</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Run Perl standard test scripts with statistics</TD
></TR
></TBODY
></TABLE
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PERL2-CH-7-TAB-11"
>Table 7.11: For Developers: Object-Oriented Programming Support</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Module</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Function</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Exporter</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Default import method for modules</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>overload</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Overload Perl's mathematical operations</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tie::Hash</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Base class definitions for tied hashes</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tie::Scalar</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Base class definitions for tied scalars</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tie::StdHash</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Base class definitions for tied hashes</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tie::StdScalar</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Base class definitions for tied scalars</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Tie::SubstrHash</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Fixed-table-size, fixed-key-length hashing</TD
></TR
></TBODY
></TABLE
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PERL2-CH-7-SECT-1A"
>7.1 Beyond the Standard Library</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-18812"
></A
><A
CLASS="indexterm"
NAME="AUTOID-18814"
></A
>If you don't find an entry in the standard library that fits your needs,
it's still quite possible that someone has written code that will be
useful to you.  There are many superb library modules that are not
included in the standard distribution, for various practical, political,
and pathetic reasons.  To find out what is available, you can look at
the Comprehensive Perl Archive Network (CPAN).  See the discussion of
CPAN in the Preface.</P
><P
CLASS="para"
>Here are the major categories of modules available from CPAN:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Archiving and Compression</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Authentication, Security and Encryption</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Control Flow Utilities (callbacks, exceptions, and so on)</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Data Types and Data Type Utilities</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Database Interfaces</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Development Support</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Filehandle and Input/Output Stream Utilities</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>File Names, File Systems and File Locking</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Images, Pixmap and Bitmap Manipulation, Drawing and Graphing</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Interfaces to/Emulations of Other Programming Languages</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Internationalization and Locale</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Language Extensions and Documentation Tools</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Mail and Usenet News</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Miscellaneous Modules</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Networking, Device Control (modems) and Inter-process Communication</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Operating System Interfaces</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Option, Argument, Parameter and Configuration File Processing</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Server and Daemon Utilities</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>String Processing, Language Text Processing, Parsing and Searching</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>User Interfaces</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>World Wide Web, HTML, HTTP, CGI, MIME</P
></LI
></UL
><P
CLASS="para"
>Allow us again to reiterate once more that these things are in a state
of flux, and you will certainly find more and better stuff on CPAN
than we can possibly describe here.  The Perl of Great Price has
outgrown its oyster, so to speak, because Perl is truly a community
effort these days&nbsp;- see John 14:12.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch06_04.htm"
TITLE="6.4 Cooperating with Other Languages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.4 Cooperating with Other Languages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch07_02.htm"
TITLE="7.2 Library Modules"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.2 Library Modules"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>6.4 Cooperating with Other Languages</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.2 Library Modules</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
