<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.43 getc</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:49:53Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_042.htm"
TITLE="3.2.42 formline"><LINK
REL="next"
HREF="ch03_044.htm"
TITLE="3.2.44 getgrent"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_042.htm"
TITLE="3.2.42 formline"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.42 formline"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_044.htm"
TITLE="3.2.44 getgrent"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.44 getgrent"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-GETC"
>3.2.43 getc</A
></H3
><PRE
CLASS="programlisting"
>getc <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>
getc</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-10140"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10142"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10145"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10148"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10151"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10154"
></A
>This function returns the next byte from the input file attached
to <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>.  At end-of-file, it returns a null string.  If
<CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> is
omitted, the function reads from <CODE
CLASS="literal"
>STDIN</CODE
>.  This operator is
very slow, but is occasionally useful for single-character,
buffered input from the keyboard.  This does <EM
CLASS="emphasis"
>not</EM
> enable single-character
input.  For unbuffered input, you have
to be slightly more clever, in an operating-system-dependent fashion.
Under UNIX you might say this:</P
><PRE
CLASS="programlisting"
>if ($BSD_STYLE) {
  system &quot;stty cbreak &lt;/dev/tty &gt;/dev/tty 2&gt;&amp;1&quot;;
} else {
  system &quot;stty&quot;, &quot;-icanon&quot;, &quot;eol&quot;, &quot;\001&quot;;
}

$key = getc;

if ($BSD_STYLE) {
  system &quot;stty -cbreak &lt;/dev/tty &gt;/dev/tty 2&gt;&amp;1&quot;;
} else {
  system &quot;stty&quot;, &quot;icanon&quot;, &quot;eol&quot;, &quot;^@&quot;; # ASCII NUL
}
print &quot;\n&quot;;</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-10162"
></A
>This code puts the next character typed on the terminal in the string
<CODE
CLASS="literal"
>$key</CODE
>.  If your <EM
CLASS="emphasis"
>stty</EM
> program has options like <CODE
CLASS="literal"
>cbreak</CODE
>,
you'll need to use the code where <CODE
CLASS="literal"
>$BSD_STYLE</CODE
> is true,
otherwise, you'll need to use the code where it is false.  Determining
the options for <EM
CLASS="emphasis"
>stty</EM
> is left as an exercise to the reader.</P
><P
CLASS="para"
>The POSIX module in <A
CLASS="xref"
HREF="ch07_01.htm"
TITLE="The Standard Perl Library"
>Chapter 7</A
> provides a more portable version of
this using the <CODE
CLASS="literal"
>POSIX::getattr()</CODE
> function.
See also the TERM::ReadKey module from your nearest CPAN site.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_042.htm"
TITLE="3.2.42 formline"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.42 formline"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_044.htm"
TITLE="3.2.44 getgrent"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.44 getgrent"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.42 formline</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.44 getgrent</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
