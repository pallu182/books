<HTML
><HEAD
>
<TITLE>[Chapter 4] 4.3 The while/until Statement</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:33:05Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch04_01.htm"
TITLE="4. Control Structures"><LINK
REL="prev"
HREF="ch04_02.htm"
TITLE="4.2 The if/unless Statement"><LINK
REL="next"
HREF="ch04_04.htm"
TITLE="4.4 The do {} while/until Statement"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch04_02.htm"
TITLE="4.2 The if/unless Statement"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 4.2 The if/unless Statement"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch04_01.htm"
TITLE="4. Control Structures"
>Chapter 4<BR>Control Structures</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch04_04.htm"
TITLE="4.4 The do {} while/until Statement"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4.4 The do {} while/until Statement"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch04-32411"
>4.3 The while/until Statement</A
></H2
><P
CLASS="para"
>No programming language would be complete without some form of iteration[<A
CLASS="footnote"
HREF="#ch04-pgfId-503"
>2</A
>] (repeated execution of a block of statements). Perl can iterate using the <A
CLASS="indexterm"
NAME="ch04-idx-504-0"
></A
><CODE
CLASS="literal"
>while</CODE
> statement:</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch04-pgfId-503"
>[2]</A
> That's why HTML is not a programming language.</P
></DIV
></BLOCKQUOTE
><PRE
CLASS="programlisting"
>while (<CODE
CLASS="replaceable"
><I
>some_expression</I
></CODE
>) {
        <CODE
CLASS="replaceable"
><I
>statement_1</I
></CODE
>;
        <CODE
CLASS="replaceable"
><I
>statement_2</I
></CODE
>;
        <CODE
CLASS="replaceable"
><I
>statement_3</I
></CODE
>;
}</PRE
><P
CLASS="para"
>To execute this <CODE
CLASS="literal"
>while</CODE
> statement, Perl evaluates the <A
CLASS="indexterm"
NAME="ch04-idx-510-0"
></A
>control expression (<CODE
CLASS="replaceable"
><I
>some_expression</I
></CODE
> in the example). If its value is true (using Perl's notion of truth), the body of the <CODE
CLASS="literal"
>while</CODE
> statement is evaluated once. This step is repeated until the control expression becomes false, at which point Perl goes on to the next statement after the <CODE
CLASS="literal"
>while</CODE
> <CODE
CLASS="literal"
>loop</CODE
>. For example:</P
><PRE
CLASS="programlisting"
>print &quot;how old are you? &quot;;
$a = &lt;STDIN&gt;;
chomp($a);
while ($a &gt; 0) {
        print &quot;At one time, you were $a years old.\n&quot;;
        $a--;
}</PRE
><P
CLASS="para"
>Sometimes it is easier to say "until something is true" rather than "while not this is true." Once again, Perl has the answer. Replacing the <CODE
CLASS="literal"
>while</CODE
> with <A
CLASS="indexterm"
NAME="ch04-idx-437540-0"
></A
><CODE
CLASS="literal"
>until</CODE
> yields the desired effect:</P
><PRE
CLASS="programlisting"
>until (<CODE
CLASS="replaceable"
><I
>some_expression</I
></CODE
>) {
        <CODE
CLASS="replaceable"
><I
>statement_1</I
></CODE
>;
        <CODE
CLASS="replaceable"
><I
>statement_2</I
></CODE
>;
        <CODE
CLASS="replaceable"
><I
>statement_3</I
></CODE
>;
}</PRE
><P
CLASS="para"
>Note that in both the <CODE
CLASS="literal"
>while</CODE
> and <CODE
CLASS="literal"
>until</CODE
> forms, the body statements will be skipped entirely if the control expression is the termination value to begin with. For example, if a user enters an age less than zero for the program fragment above, Perl skips over the body of the loop.</P
><P
CLASS="para"
>Sometimes the <A
CLASS="indexterm"
NAME="ch04-idx-437541-0"
></A
>control expression never lets the loop exit. This case is perfectly legal, and sometimes desired, and is thus not considered an error. For example, you might want a loop to repeat as long as you have no error, and then have some error handling code following the loop. You might use this for a program that is meant to run until the system terminates.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch04_02.htm"
TITLE="4.2 The if/unless Statement"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 4.2 The if/unless Statement"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch04_04.htm"
TITLE="4.4 The do {} while/until Statement"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4.4 The do {} while/until Statement"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>4.2 The if/unless Statement</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>4.4 The do {} while/until Statement</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
