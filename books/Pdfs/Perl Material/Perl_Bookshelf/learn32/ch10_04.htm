<HTML
><HEAD
>
<TITLE>[Chapter 10] 10.4 A Slight Diversion: die</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:30Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch10_01.htm"
TITLE="10. Filehandles and File Tests"><LINK
REL="prev"
HREF="ch10_03.htm"
TITLE="10.3 Using Pathnames and Filenames"><LINK
REL="next"
HREF="ch10_05.htm"
TITLE="10.5 Using Filehandles"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_03.htm"
TITLE="10.3 Using Pathnames and Filenames"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.3 Using Pathnames and Filenames"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch10_01.htm"
TITLE="10. Filehandles and File Tests"
>Chapter 10<BR>Filehandles and File Tests</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_05.htm"
TITLE="10.5 Using Filehandles"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.5 Using Filehandles"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch10-35616"
>10.4 A Slight Diversion: die</A
></H2
><P
CLASS="para"
>Consider the following a large footnote, but in the middle of the page.</P
><P
CLASS="para"
>A filehandle that has not been successfully opened can still be used without even so much as a warning throughout the program.[<A
CLASS="footnote"
HREF="#ch10-pgfId-779988"
>5</A
>] If you read from the filehandle, you'll get end-of-file right away. If you write to the filehandle, the data is silently discarded (like last year's campaign promises).</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch10-pgfId-779988"
>[5]</A
> This statement is true, unless you are running with the <CODE
CLASS="literal"
>-w</CODE
> switch enabled.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>Typically, you'll want to check the result of the open and report an error if the result is not what you expect. Sure, you can pepper your program with stuff like:</P
><PRE
CLASS="programlisting"
><A
CLASS="indexterm"
NAME="ch10-idx-367934-0"
></A
>unless (open (DATAPLACE,&quot;&gt;c:/temp/dataplace&quot;)) {
        print &quot;Sorry, I couldn't create c:/temp/dataplace\n&quot;;
} else {
        # the rest of your program
}</PRE
><P
CLASS="para"
>But that sort of change is a lot of work. And it happens often enough for Perl to offer a bit of a shortcut. The <A
CLASS="indexterm"
NAME="ch10-idx-367881-0"
></A
><CODE
CLASS="literal"
>die</CODE
> function takes a list within optional parentheses, spits out that list (like <CODE
CLASS="literal"
>print</CODE
>) on the standard error output, and then ends the Perl program with a nonzero <A
CLASS="indexterm"
NAME="ch10-idx-367882-0"
></A
>exit status (generally indicating that something unusual happened[<A
CLASS="footnote"
HREF="#ch10-pgfId-778250"
>6</A
>]). So, rewriting the chunk of code above turns out to look like this:</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch10-pgfId-778250"
>[6]</A
> Actually, <CODE
CLASS="literal"
>die</CODE
> <CODE
CLASS="literal"
>()</CODE
> merely raises an exception, but because you aren't being shown how to trap exceptions, it behaves as described. See <EM
CLASS="emphasis"
>Eval {}</EM
> in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> or <EM
CLASS="emphasis"
>perlfunc</EM
> for details.</P
></DIV
></BLOCKQUOTE
><PRE
CLASS="programlisting"
>    unless (open DATAPLACE,&quot;&gt;c:/temp/dataplace&quot;) {
        die &quot;Sorry, I couldn't create c:/temp/dataplace\n&quot;;
}
# rest of program</PRE
><P
CLASS="para"
>But we can go even one step further. Remember that we can use the <A
CLASS="indexterm"
NAME="ch10-idx-367883-0"
></A
><CODE
CLASS="literal"
>||</CODE
> (logical or) operator to shorten this up, as in:</P
><PRE
CLASS="programlisting"
>open(DATAPLACE,&quot;&gt;c:/temp/dataplace&quot;) ||
        die &quot;Sorry, I couldn't create c:/temp/dataplace\n&quot;;</PRE
><P
CLASS="para"
>So, the <CODE
CLASS="literal"
>die</CODE
> gets executed only when the result of the <CODE
CLASS="literal"
>open</CODE
> is false. The common way to read this is "open that file or die!" And that's an easy way to remember whether to use the logical <CODE
CLASS="literal"
>and</CODE
> or logical <CODE
CLASS="literal"
>or</CODE
>. </P
><P
CLASS="para"
>The message at death (built from the argument to <CODE
CLASS="literal"
>die</CODE
>) has the Perl program name and line number automatically attached, so you can easily identify which <CODE
CLASS="literal"
>die</CODE
> was responsible for the untimely exit. If you don't like the line number or file revealed, make sure that the death text has a newline on the end. For example:</P
><PRE
CLASS="programlisting"
>die &quot;you gravy-sucking pigs&quot;;</PRE
><P
CLASS="para"
>prints the file and line number, while</P
><PRE
CLASS="programlisting"
>die &quot;you gravy-sucking pigs\n&quot;;</PRE
><P
CLASS="para"
>does not.</P
><P
CLASS="para"
>Another handy thing inside die strings is the $! variable, which contains the text relating to the most recent operating system error value. The variable is used like this:</P
><PRE
CLASS="programlisting"
>open(LOG, &quot;&gt;&gt;logfile&quot;) || die &quot;cannot append: $!&quot;;</PRE
><P
CLASS="para"
>The program might end up saying "<CODE
CLASS="literal"
>cannot</CODE
> <CODE
CLASS="literal"
>append:</CODE
> <CODE
CLASS="literal"
>Permission</CODE
> <CODE
CLASS="literal"
>denied</CODE
>" as part of the message.</P
><P
CLASS="para"
>There's also the <EM
CLASS="emphasis"
>close call</EM
> function, which most people know as <CODE
CLASS="literal"
>warn</CODE
>. It does everything <CODE
CLASS="literal"
>die</CODE
> does, just short of actually dying. Use it to give error messages on standard error without a lot of extra hassle:</P
><PRE
CLASS="programlisting"
>open(LOG,&quot;&gt;&gt;log&quot;) || warn &quot;discarding logfile output\n&quot;;</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_03.htm"
TITLE="10.3 Using Pathnames and Filenames"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.3 Using Pathnames and Filenames"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_05.htm"
TITLE="10.5 Using Filehandles"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.5 Using Filehandles"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>10.3 Using Pathnames and Filenames</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10.5 Using Filehandles</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
