<HTML
><HEAD
>
<TITLE>[Chapter 6] Basic I/O</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl"><META
NAME="DC.creator"
CONTENT="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:32:44Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-284-0"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="index.htm"
TITLE="Learning Perl"><LINK
REL="prev"
HREF="ch05_06.htm"
TITLE="5.6 Exercises"><LINK
REL="next"
HREF="ch06_02.htm"
TITLE="6.2 Input from the Diamond Operator"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/lsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_06.htm"
TITLE="5.6 Exercises"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.6 Exercises"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 6</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_02.htm"
TITLE="6.2 Input from the Diamond Operator"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.2 Input from the Diamond Operator"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="ch06-14584"
>6. Basic I/O</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#ch06-24716"
TITLE="6.1 Input from STDIN"
>Input from STDIN</A
><BR><A
CLASS="sect1"
HREF="ch06_02.htm"
TITLE="6.2 Input from the Diamond Operator"
>Input from the Diamond Operator</A
><BR><A
CLASS="sect1"
HREF="ch06_03.htm"
TITLE="6.3 Output to STDOUT"
>Output to STDOUT</A
><BR><A
CLASS="sect1"
HREF="ch06_04.htm"
TITLE="6.4 Exercises"
>Exercises</A
></P
><P
></P
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-24716"
>6.1 Input from STDIN</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch06-idx-560831-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-560831-1"
></A
>Reading from standard input (via the Perl filehandle called <CODE
CLASS="literal"
>STDIN</CODE
>) is easy. We've been doing it already with the <A
CLASS="indexterm"
NAME="ch06-idx-560845-0"
></A
><CODE
CLASS="literal"
>&lt;STDIN&gt;</CODE
> operation. Evaluating this in a scalar context gives the next line of input,[<A
CLASS="footnote"
HREF="#ch06-pgfId-560888"
>1</A
>] or <A
CLASS="indexterm"
NAME="ch06-idx-560846-0"
></A
><CODE
CLASS="literal"
>undef</CODE
> if there are no more lines, like so:<PRE
CLASS="programlisting"
>$a = &lt;STDIN&gt;; # read the next line</PRE
></P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch06-pgfId-560888"
>[1]</A
> Up to a newline, or whatever you've set <A
CLASS="indexterm"
NAME="ch06-idx-560847-0"
></A
><CODE
CLASS="literal"
>$/</CODE
> to.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>Evaluating in a list context produces all remaining lines as a list: each element is one line, including its terminating newline. We've seen this before, but as a refresher, it might look something like this:</P
><PRE
CLASS="programlisting"
>@a = &lt;STDIN&gt;;</PRE
><P
CLASS="para"
>Typically, one thing you want to do is read all lines one at a time and do something with each line. One common way to do this is:</P
><PRE
CLASS="programlisting"
><A
CLASS="indexterm"
NAME="ch06-idx-560859-0"
></A
>while (defined($line = <A
CLASS="indexterm"
NAME="ch06-idx-562266-0"
></A
>&lt;STDIN&gt;)) {
    # process $line here
}</PRE
><P
CLASS="para"
>As long as a line has been read in, <CODE
CLASS="literal"
>&lt;STDIN&gt;</CODE
> evaluates to a defined value, so the loop continues to execute. When <CODE
CLASS="literal"
>&lt;STDIN&gt;</CODE
> has no more lines to read, it returns <CODE
CLASS="literal"
>undef</CODE
>, terminating the loop.</P
><P
CLASS="para"
>Reading a scalar value from <CODE
CLASS="literal"
>&lt;STDIN&gt;</CODE
> into <CODE
CLASS="literal"
>$_</CODE
> and using that value as the controlling expression of a loop (as in the previous example) occurs frequently enough that Perl has an abbreviation for it. Whenever a loop test consists solely of the input operator (something like <CODE
CLASS="literal"
>&lt;...&gt;</CODE
>), Perl automatically copies the line that is read into the <A
CLASS="indexterm"
NAME="ch06-idx-560848-0"
></A
><CODE
CLASS="literal"
>$_</CODE
> variable. </P
><PRE
CLASS="programlisting"
>while (&lt;STDIN&gt;) { # like &quot;while(defined($_ = &lt;STDIN&gt;)) {&quot;
    chomp; # like &quot;chomp($_)&quot;
    # other operations with $_ here
}</PRE
><P
CLASS="para"
>Since the <CODE
CLASS="literal"
>$_</CODE
> variable is the default for many operations, you can save a noticeable amount of typing this way.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_06.htm"
TITLE="5.6 Exercises"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.6 Exercises"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_02.htm"
TITLE="6.2 Input from the Diamond Operator"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.2 Input from the Diamond Operator"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.6 Exercises</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>6.2 Input from the Diamond Operator</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
