<HTML
><HEAD
>
<TITLE>[Chapter 7] 7.5 Substitutions</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:33:46Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch07_01.htm"
TITLE="7. Regular Expressions"><LINK
REL="prev"
HREF="ch07_04.htm"
TITLE="7.4 More on the Matching Operator"><LINK
REL="next"
HREF="ch07_06.htm"
TITLE="7.6 The split and join Functions"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch07_04.htm"
TITLE="7.4 More on the Matching Operator"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.4 More on the Matching Operator"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch07_01.htm"
TITLE="7. Regular Expressions"
>Chapter 7<BR>Regular Expressions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch07_06.htm"
TITLE="7.6 The split and join Functions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.6 The split and join Functions"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch07-27913"
>7.5 Substitutions</A
></H2
><P
CLASS="para"
>We've already talked about the simplest form of the <A
CLASS="indexterm"
NAME="ch07-idx-307769-0"
></A
>substitution operator: <CODE
CLASS="literal"
>s/old-regex/new-string/</CODE
><A
CLASS="indexterm"
NAME="ch07-idx-307770-0"
></A
>. We can now discuss a few variations of this operator.</P
><P
CLASS="para"
>If you want the replacement to operate on <A
CLASS="indexterm"
NAME="ch07-idx-307771-0"
></A
>all possible matches instead of just the first match, append a <A
CLASS="indexterm"
NAME="ch07-idx-307772-0"
></A
><CODE
CLASS="literal"
>g</CODE
> to the substitution, as in:</P
><PRE
CLASS="programlisting"
>$_ = &quot;foot fool buffoon&quot;;
s/foo/bar/g; # $_ is now &quot;bart barl bufbarn&quot;</PRE
><P
CLASS="para"
>The replacement string is <A
CLASS="indexterm"
NAME="ch07-idx-307773-0"
></A
>variable interpolated, allowing you to specify the replacement string at runtime:</P
><PRE
CLASS="programlisting"
>$_ = &quot;hello, world&quot;
$new = &quot;goodbye&quot;;
s/hello/$new/; # replaces hello with goodbye</PRE
><P
CLASS="para"
>Pattern characters in the regular expression allow patterns to be matched, rather than just fixed characters:</P
><PRE
CLASS="programlisting"
>$_ = &quot;this is a test&quot;;
s/(\w+)/&lt;$1&gt;/g; # $_ is now &quot;&lt;this&gt; &lt;is&gt; &lt;a&gt; &lt;test&gt;&quot;</PRE
><P
CLASS="para"
>Recall that <CODE
CLASS="literal"
>$1</CODE
> is set to the data within the first parenthesized pattern match.</P
><P
CLASS="para"
>An <A
CLASS="indexterm"
NAME="ch07-idx-307774-0"
></A
><CODE
CLASS="literal"
>i</CODE
> suffix (either before or after the <CODE
CLASS="literal"
>g</CODE
>, if present) causes the regular expression in the substitute operator to <A
CLASS="indexterm"
NAME="ch07-idx-307775-0"
></A
><A
CLASS="indexterm"
NAME="ch07-idx-307775-1"
></A
>ignore case, just like the same option on the match operator described earlier.</P
><P
CLASS="para"
>As with the match operator, an <A
CLASS="indexterm"
NAME="ch07-idx-307776-0"
></A
>alternate delimiter can be selected if the slash is inconvenient. Just use the same character three times:[<A
CLASS="footnote"
HREF="#ch07-pgfId-307956"
>7</A
>]</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch07-pgfId-307956"
>[7]</A
> Or, use two matching pairs if a left-right pair character is used.</P
></DIV
></BLOCKQUOTE
><PRE
CLASS="programlisting"
>s#fred#barney#; # replace fred with barney, like s/fred/barney/</PRE
><P
CLASS="para"
>Also as with the match operator, you can specify an alternate target with the <A
CLASS="indexterm"
NAME="ch07-idx-307777-0"
></A
>=~ operator. In this case, the selected target must be something you can assign a scalar value to, such as a scalar variable or an element of an array. Here's an example:</P
><PRE
CLASS="programlisting"
>$which = &quot;this is a test&quot;;
$which =~ s/test/quiz/; # $which is now &quot;this is a quiz&quot;
$someplace[$here] =~ s/left/right/; # change an array element
$d{&quot;t&quot;} =~ s/^/x /; # prepend &quot;x &quot; to hash element</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch07_04.htm"
TITLE="7.4 More on the Matching Operator"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.4 More on the Matching Operator"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch07_06.htm"
TITLE="7.6 The split and join Functions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7.6 The split and join Functions"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.4 More on the Matching Operator</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7.6 The split and join Functions</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
