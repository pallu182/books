<HTML
><HEAD
>
<TITLE>[Appendix A] A.15 Chapter 16, System Information</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:37:44Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"><LINK
REL="prev"
HREF="appa_14.htm"
TITLE="A.14 Chapter 15, Other Data Transformation"><LINK
REL="next"
HREF="appa_16.htm"
TITLE="A.16 Chapter 17, Database Manipulation"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_14.htm"
TITLE="A.14 Chapter 15, Other Data Transformation"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.14 Chapter 15, Other Data Transformation"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="appendix"
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"
>Appendix A<BR>Exercise Answers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_16.htm"
TITLE="A.16 Chapter 17, Database Manipulation"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.16 Chapter 17, Database Manipulation"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appa-pgfId-1786"
>A.15 <A
CLASS="xref"
HREF="ch16_01.htm"
TITLE="System Information"
>Chapter 16, System Information</A
></A
></H2
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-1787"
></A
>Here's one way to do it.</P
><PRE
CLASS="programlisting"
>foreach $host (@ARGV) {
  ($name, $aliases, $addrtype, $length, @addrs) = gethostbyname($host);
  print &quot;$host:\n&quot;;
  
  foreach $a (@addrs) {
    print join(&quot;.&quot;, unpack(&quot;C4&quot;, $a)), &quot;\n&quot;;
  }
}</PRE
><P
CLASS="para"
>This code just takes a list of machine names, iterates over them, calling <CODE
CLASS="literal"
>get-hostbyname()</CODE
> for each one. We then enumerate each of the addresses, printing them out in dotted decimal notation.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-2029"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>use <A
CLASS="indexterm"
NAME="appa-idx-181364-0"
></A
><A
CLASS="indexterm"
NAME="appa-idx-181364-1"
></A
>Win32::Registry;
$p = shift || die &quot;usage: $0 path&quot;;
# strip leading backslashes
$p =~ s#^\\##;
$main::HKEY_LOCAL_MACHINE-&gt;Open($p, $key) || 
        die &quot;Open: $!&quot;;
$key-&gt;GetValues(\%vals); # get values -hash ref
foreach $k (keys %vals) {
    $key = $vals{$k};
    print &quot;$$key[0] = $$key[2]\n&quot;;
}</PRE
><P
CLASS="para"
>This code takes a path relative to HKEY_LOCAL_MACHINE (something like <EM
CLASS="emphasis"
>SOFTWARE\ActiveWare\Perl5</EM
>) and strips beginning backslashes, if there are any. It opens the key using the precreated HKEY_LOCAL_MACHINE key. It then calls GetValues (passing it a reference to a hash; see <A
CLASS="xref"
HREF="ch18_01.htm"
TITLE="CGI Programming"
>Chapter 18, <CITE
CLASS="chapter"
>CGI Programming</CITE
></A
>, for more on references). The code then enumerates over the keys of the hash, printing them. Each value consists of a reference to a list with three items, so we assign the list reference to <CODE
CLASS="literal"
>$key</CODE
>. We then have to dereference <CODE
CLASS="literal"
>$key</CODE
> in order to access its values; we do so with the <CODE
CLASS="literal"
>$$key[0]</CODE
> construct. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-2030"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>sub CreateKeyPath {
  my ($subtree, $path) = @_;
  # break it into components
  # strip initial path separator, if there is one
  $path =~ s#^\\##;
  my (@klist) = split(/\\/, $path);
  my $key;
  my $regkey = $subtree;
  foreach $key (@klist) {
    $regkey-&gt;Create($key, $regkey) ||
      die &quot;Can't create key $key: $!&quot;;
  }
  return $regkey;
}</PRE
><P
CLASS="para"
>We first strip the leading backslash out of the path, then break it into a series of keys. We then iterate over each key, creating the key (remember, <CODE
CLASS="literal"
>create</CODE
> opens it if it already exists) and return the deepest key. We're assuming that we have passed in an open key as the first argument.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-2234"
></A
>Here's one way to do it:</P
><PRE
CLASS="programlisting"
>sub print_dword_key {
    my ($dw) = @_;
    printf (&quot;0x%x&quot;, unpack(&quot;l&quot;, $dw));
}</PRE
><P
CLASS="para"
>This subroutine takes a scalar value that's assumed to be a four-byte integer value and unpacks it using the long format <CODE
CLASS="literal"
>l</CODE
> (which unpacks a four-byte integer). The subroutine then uses <CODE
CLASS="literal"
>printf</CODE
> and its hexidecimal specifier (<CODE
CLASS="literal"
>%x</CODE
>) prefixed with <CODE
CLASS="literal"
>0x</CODE
> to print out the value.</P
></LI
></OL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_14.htm"
TITLE="A.14 Chapter 15, Other Data Transformation"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.14 Chapter 15, Other Data Transformation"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_16.htm"
TITLE="A.16 Chapter 17, Database Manipulation"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.16 Chapter 17, Database Manipulation"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>A.14 Chapter 15, Other Data Transformation</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>A.16 Chapter 17, Database Manipulation</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
