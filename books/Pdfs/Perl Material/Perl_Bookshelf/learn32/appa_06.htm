<HTML
><HEAD
>
<TITLE>[Appendix A] A.6 Chapter 7, Regular Expressions</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl on Win32 Systems"><META
NAME="DC.creator"
CONTENT="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:37:32Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-324-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"><LINK
REL="prev"
HREF="appa_05.htm"
TITLE="A.5 Chapter 6, Basic I/O"><LINK
REL="next"
HREF="appa_07.htm"
TITLE="A.7 Chapter 8, Functions"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl on Win32 Systems"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl on Win32 Systems"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/wsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_05.htm"
TITLE="A.5 Chapter 6, Basic I/O"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.5 Chapter 6, Basic I/O"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="appendix"
REL="up"
HREF="appa_01.htm"
TITLE="A. Exercise Answers"
>Appendix A<BR>Exercise Answers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_07.htm"
TITLE="A.7 Chapter 8, Functions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.7 Chapter 8, Functions"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appa-23983"
>A.6 <A
CLASS="xref"
HREF="ch07_01.htm"
TITLE="Regular Expressions"
>Chapter 7, Regular Expressions</A
></A
></H2
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179370"
></A
>Here are some possible answers:</P
><OL
CLASS="orderedlist"
TYPE="a"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-178963"
></A
><CODE
CLASS="literal"
>/a+b*/</CODE
> </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179374"
></A
><CODE
CLASS="literal"
>/\\*\**/</CODE
> (Remember that the backslash cancels the meaning of the special character following.)</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179375"
></A
><CODE
CLASS="literal"
>/($whatever){3}/</CODE
> (You must have the parentheses, or else the multiplier applies only to the last character of <CODE
CLASS="literal"
>$whatever</CODE
>; this solution also fails if <CODE
CLASS="literal"
>$whatever</CODE
> has special characters.)</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179376"
></A
><CODE
CLASS="literal"
>/[\000-\377]{5}/</CODE
> or <CODE
CLASS="literal"
>/(.|\n){5}/</CODE
> (You can't use dot alone here, because dot doesn't match newline.)</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179377"
></A
><CODE
CLASS="literal"
>/(^|\s)(\S+)(\s+\2)+(\s|$)/</CODE
> (<CODE
CLASS="literal"
>\S</CODE
> is non-whitespace, and <CODE
CLASS="literal"
>\2</CODE
> is a reference to whatever the "word" is; the caret or whitespace alternative ensures that the <CODE
CLASS="literal"
>\S+</CODE
> begins at a whitespace boundary.)</P
></LI
></OL
></LI
><LI
CLASS="listitem"
><OL
CLASS="orderedlist"
TYPE="a"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179373"
></A
>One way to do this is:</P
><PRE
CLASS="programlisting"
>     while (&lt;STDIN&gt;) {
       if (/a/i &amp;&amp; /e/i &amp;&amp; /i/i &amp;&amp; /o/i &amp;&amp; /u/i) {
         print;
       }
     }</PRE
><P
CLASS="para"
>Here, we have an expression consisting of five match operators. These operators are all looking at the contents of the <CODE
CLASS="literal"
>$_</CODE
> variable, which is where the control expression of the <CODE
CLASS="literal"
>while</CODE
> loop is putting each line. The match operator expression will be true only when all five vowels are found.</P
><P
CLASS="para"
>Note that as soon as any of the five vowels are not found, the remainder of the expression is skipped, because the <CODE
CLASS="literal"
>&amp;&amp;</CODE
> operator doesn't evaluate its right argument if the left argument is false. For more information on using the <CODE
CLASS="literal"
>&amp;&amp;</CODE
> operator as a control structure, please refer to the section, <A
CLASS="xref"
HREF="ch09_06.htm"
TITLE="&amp;&amp;, ||, and ?: as Control Structures"
>"&amp;&amp;, ||, and ?: as Control Structures"</A
>.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-179378"
></A
>Another way to do this is:</P
><PRE
CLASS="programlisting"
>     while (&lt;STDIN&gt;) {
       if (/a.*e.*i.*o.*u/i) {
         print;
       }
     }</PRE
><P
CLASS="para"
>This answer turns out to be easier than the other part of this exercise. Here we have a simple regular expression, that looks for the five vowels in sequence, separated by any number of characters.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appa-pgfId-1589"
></A
>A third way to do this is:</P
><PRE
CLASS="programlisting"
>     while (&lt;STDIN&gt;) {
       if (/^[eiou]*a[^iou]*e[^aou]*i[^aeu]*o[^aei]*u[^aeio]*$/i) {
         print;
       }
     }</PRE
><P
CLASS="para"
>This solution is ugly, but it works. To construct this solution, just think "What can go between the beginning of the line, and the first a?" Then, think "What can go between the first a and the first e?" Eventually, everything works out, with a little assistance from you.</P
></LI
></OL
></LI
></OL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_05.htm"
TITLE="A.5 Chapter 6, Basic I/O"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.5 Chapter 6, Basic I/O"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl on Win32 Systems"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_07.htm"
TITLE="A.7 Chapter 8, Functions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A.7 Chapter 8, Functions"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>A.5 Chapter 6, Basic I/O</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>A.7 Chapter 8, Functions</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
