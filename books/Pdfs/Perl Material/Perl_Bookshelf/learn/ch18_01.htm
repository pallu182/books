<HTML
><HEAD
>
<TITLE>[Chapter 18] Converting Other Languages to Perl</TITLE>
<META
NAME="DC.title"
CONTENT="Learning Perl"><META
NAME="DC.creator"
CONTENT="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:36:04Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-284-0"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="index.htm"
TITLE="Learning Perl"><LINK
REL="prev"
HREF="ch17_06.htm"
TITLE="17.6 Exercises"><LINK
REL="next"
HREF="ch18_02.htm"
TITLE="18.2 Converting sed Programs to Perl"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Learning Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Learning Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/lsrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_06.htm"
TITLE="17.6 Exercises"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.6 Exercises"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 18</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch18_02.htm"
TITLE="18.2 Converting sed Programs to Perl"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 18.2 Converting sed Programs to Perl"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="ch18-pgfId-847873"
>18. Converting Other Languages to Perl</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#ch18-41309"
TITLE="18.1 Converting awk Programs to Perl"
>Converting awk Programs to Perl</A
><BR><A
CLASS="sect1"
HREF="ch18_02.htm"
TITLE="18.2 Converting sed Programs to Perl"
>Converting sed Programs to Perl</A
><BR><A
CLASS="sect1"
HREF="ch18_03.htm"
TITLE="18.3 Converting Shell Programs to Perl"
>Converting Shell Programs to Perl</A
><BR><A
CLASS="sect1"
HREF="ch18_04.htm"
TITLE="18.4 Exercise"
>Exercise</A
></P
><P
></P
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch18-41309"
>18.1 Converting awk Programs to Perl</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch18-idx-847842-0"
></A
>One of the many cool things about Perl is that it is (at least) a semantic superset of <EM
CLASS="emphasis"
>awk</EM
>. In practical terms, this means if you can do something in <EM
CLASS="emphasis"
>awk</EM
>, you can also do it somehow in Perl. However, Perl isn't <EM
CLASS="emphasis"
>syntactically</EM
> compatible with <EM
CLASS="emphasis"
>awk</EM
>. For example, <EM
CLASS="emphasis"
>awk</EM
>'s NR (input record number) variable is represented as <CODE
CLASS="literal"
>$. </CODE
>in Perl.</P
><P
CLASS="para"
>If you have an existing <EM
CLASS="emphasis"
>awk</EM
> program, and wish it to run with Perl, you can perform a mechanical translation using the <A
CLASS="indexterm"
NAME="ch18-idx-847843-0"
></A
><EM
CLASS="emphasis"
>a2p</EM
> utility provided with the Perl distribution. This utility converts the <EM
CLASS="emphasis"
>awk</EM
> syntax into the Perl syntax, and for the vast majority of <EM
CLASS="emphasis"
>awk</EM
> programs, provides a directly runnable Perl script.</P
><P
CLASS="para"
>To use the <EM
CLASS="emphasis"
>a2p</EM
> utility, put your <EM
CLASS="emphasis"
>awk</EM
> program into a separate file and invoke <EM
CLASS="emphasis"
>a2p</EM
> with the name of the file as its argument, or redirect the standard input of <EM
CLASS="emphasis"
>a2p</EM
> to the file. The resulting standard output will be a valid Perl program. For example:</P
><PRE
CLASS="programlisting"
>$ cat myawkprog
BEGIN { sum = 0 }
/llama/ { sum += $2 }
END { print &quot;The llama count is &quot; sum }<A
CLASS="indexterm"
NAME="ch18-idx-847866-0"
></A
>
$ a2p &lt;myawkprog &gt;myperlprog
$ perl myperlprog somefile
The llama count is 15
$</PRE
><P
CLASS="para"
>You can also feed the standard output of <EM
CLASS="emphasis"
>a2p</EM
> directly into Perl, because the Perl interpreter accepts a program on standard input if so instructed:</P
><PRE
CLASS="programlisting"
>$ a2p &lt;myawkprog | perl - somefile
The llama count is 15
$</PRE
><P
CLASS="para"
>An <EM
CLASS="emphasis"
>awk</EM
> script converted to Perl will generally perform the identical function, often with an increase in speed, and certainly without any of <EM
CLASS="emphasis"
>awk</EM
>'s built-in limits on line lengths or parameter counts or whatever. A few converted Perl programs may actually run slower; the equivalent action in Perl for a given <EM
CLASS="emphasis"
>awk</EM
> operation may not necessarily be the most efficient Perl code if one was programming from scratch.</P
><P
CLASS="para"
>You may choose to hand-optimize the converted Perl code, or add new functionality to the Perl version of the program. This is fairly easy, because the Perl code is rather readable (considering that the translation is automatic, this is quite an accomplishment).</P
><P
CLASS="para"
>A few translations are not mechanical. For example, the less-than <A
CLASS="indexterm"
NAME="ch18-idx-847844-0"
></A
>comparison for both numbers and strings in <EM
CLASS="emphasis"
>awk</EM
> is expressed with the <CODE
CLASS="literal"
>&lt;</CODE
> operator. In Perl, you have <CODE
CLASS="literal"
>lt</CODE
> for strings and <CODE
CLASS="literal"
>&lt;</CODE
> for numbers. <EM
CLASS="emphasis"
>awk</EM
> generally makes a reasonable guess about the number-ness or string-ness of two values being compared, and the <EM
CLASS="emphasis"
>a2p</EM
> utility makes a similar guess. However, it's possible that there isn't enough known about two values to determine whether a number or a string comparison is warranted, so <EM
CLASS="emphasis"
>a2p</EM
> outputs the most likely operator and marks the possibly erroneous line with <CODE
CLASS="literal"
>#??</CODE
> (a Perl comment) and an explanation. Be sure to scan the output for such comments after conversion to verify the proper guesses. For more details about the operation of <EM
CLASS="emphasis"
>a2p</EM
>, consult its manpage. If <EM
CLASS="emphasis"
>a2p</EM
> is not found in the same directory that you get Perl from, complain loudly to your Perl installer.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_06.htm"
TITLE="17.6 Exercises"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.6 Exercises"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Learning Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Learning Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch18_02.htm"
TITLE="18.2 Converting sed Programs to Perl"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 18.2 Converting sed Programs to Perl"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>17.6 Exercises</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>18.2 Converting sed Programs to Perl</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="../prog/index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
