<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.37 fcntl</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:49:18Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_036.htm"
TITLE="3.2.36 exp"><LINK
REL="next"
HREF="ch03_038.htm"
TITLE="3.2.38 fileno"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_036.htm"
TITLE="3.2.36 exp"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.36 exp"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_038.htm"
TITLE="3.2.38 fileno"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.38 fileno"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-FCNTL"
>3.2.37 fcntl</A
></H3
><PRE
CLASS="programlisting"
>fcntl <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>FUNCTION</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>SCALAR</I
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9933"
></A
>This function calls UNIX's <EM
CLASS="emphasis"
>fcntl</EM
>(2) function.
(<EM
CLASS="emphasis"
>fcntl</EM
> stands for &quot;file control&quot;.)
You'll probably have to say:</P
><PRE
CLASS="programlisting"
>use Fcntl;</PRE
><P
CLASS="para"
>first to get the correct function definitions.
<CODE
CLASS="replaceable"
><I
>SCALAR</I
></CODE
> will be read and/or written depending on the
<CODE
CLASS="replaceable"
><I
>FUNCTION</I
></CODE
>&nbsp;- a pointer to the string value of
<CODE
CLASS="replaceable"
><I
>SCALAR</I
></CODE
> will be passed as the third argument of the
actual <EM
CLASS="emphasis"
>fcntl</EM
> call.  (If <CODE
CLASS="replaceable"
><I
>SCALAR</I
></CODE
>
has no string value but does have a numeric value, that value will be passed
directly rather than a pointer to the string value.)</P
><P
CLASS="para"
>The return value of <A
CLASS="xref"
HREF="ch03_037.htm"
TITLE="fcntl"
><B
CLASS="xref.cmd"
>fcntl</B
></A
> (and <A
CLASS="xref"
HREF="ch03_077.htm"
TITLE="ioctl"
><B
CLASS="xref.cmd"
>ioctl</B
></A
>) is as follows:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>System call returns</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Perl returns</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>-1</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>undefined value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>0</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>string &quot;<CODE
CLASS="literal"
>0 but true</CODE
>&quot;</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>anything else</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>that number</TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Thus Perl returns true on success and false on failure, yet you can still
easily determine the actual value returned by the operating system:</P
><PRE
CLASS="programlisting"
>$retval = fcntl(...) or $retval = -1;
printf &quot;System returned %d\n&quot;, $retval;</PRE
><P
CLASS="para"
>Here, even the string &quot;<CODE
CLASS="literal"
>0 but true</CODE
>&quot; prints as 0, thanks to the
<CODE
CLASS="literal"
>%d</CODE
> format.</P
><P
CLASS="para"
>For example, since Perl always sets the close-on-exec flag for file
descriptors above 2, if you wanted to pass file descriptor 3 to a
subprocess, you might want to clear the flag like this:</P
><PRE
CLASS="programlisting"
>use Fcntl;
open TTY,&quot;+&gt;/dev/tty&quot; or die &quot;Can't open /dev/tty: $!\n&quot;;
fileno TTY == 3 or die &quot;Internal error: fd mixup&quot;;
fcntl TTY, &amp;F_SETFL, 0
    or die &quot;Can't clear the close-on-exec flag: $!\n&quot;;</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9972"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9974"
></A
><A
CLASS="xref"
HREF="ch03_037.htm"
TITLE="fcntl"
><B
CLASS="xref.cmd"
>fcntl</B
></A
> will produce a fatal error if used on a machine
that doesn't implement <EM
CLASS="emphasis"
>fcntl</EM
>(2).  On machines that do implement
it, you can do such things as modify the close-on-exec flags, modify
the non-blocking I/O flags, emulate the <EM
CLASS="emphasis"
>lockf</EM
>(3) function, and
arrange to receive the <CODE
CLASS="literal"
>SIGIO</CODE
> signal when I/O is pending.  You
might even have record-locking facilities.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_036.htm"
TITLE="3.2.36 exp"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.36 exp"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_038.htm"
TITLE="3.2.38 fileno"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.38 fileno"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.36 exp</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.38 fileno</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
