<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.41 format</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:49:22Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_040.htm"
TITLE="3.2.40 fork"><LINK
REL="next"
HREF="ch03_042.htm"
TITLE="3.2.42 formline"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_040.htm"
TITLE="3.2.40 fork"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.40 fork"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_042.htm"
TITLE="3.2.42 formline"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.42 formline"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-FORMAT"
>3.2.41 format</A
></H3
><PRE
CLASS="programlisting"
>format <CODE
CLASS="replaceable"
><I
>NAME</I
></CODE
> =
    <CODE
CLASS="replaceable"
><I
>picture line</I
></CODE
>
    <CODE
CLASS="replaceable"
><I
>value list</I
></CODE
>
    ...
.</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-10067"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10070"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10072"
></A
><A
CLASS="indexterm"
NAME="AUTOID-10075"
></A
>Declares a named sequence of picture lines (with associated values) for
use by the <A
CLASS="xref"
HREF="ch03_193.htm"
TITLE="write"
><B
CLASS="xref.cmd"
>write</B
></A
> function.  If <CODE
CLASS="replaceable"
><I
>NAME</I
></CODE
> is omitted, the name
defaults to <CODE
CLASS="literal"
>STDOUT,</CODE
> which happens to be the default format name for the
<CODE
CLASS="literal"
>STDOUT</CODE
> filehandle.  Since, like a <A
CLASS="xref"
HREF="ch03_161.htm"
TITLE="sub"
><B
CLASS="xref.cmd"
>sub</B
></A
> declaration, this is a
global declaration that happens at compile time, any variables used
in the value list need to be visible at the point of the format's
declaration.  That is, lexically scoped variables must be declared
earlier in the file, while dynamically scoped variables merely need to
be set in the routine that calls <A
CLASS="xref"
HREF="ch03_193.htm"
TITLE="write"
><B
CLASS="xref.cmd"
>write</B
></A
>.  Here's an example (which
assumes we've already calculated <CODE
CLASS="literal"
>$cost</CODE
> and <CODE
CLASS="literal"
>$quantity</CODE
>):</P
><PRE
CLASS="programlisting"
>my $str = &quot;widget&quot;;               # A lexically scoped variable.

format Nice_Output =
Test: @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; @||||| @&gt;&gt;&gt;&gt;&gt;
      $str,     $%,    '$' . int($num)
.

$~ = &quot;Nice_Output&quot;;               # Select our format.
local $num = $cost * $quantity;   # Dynamically scoped variable.

write;</PRE
><P
CLASS="para"
>Like filehandles, format names are identifiers that exist in a symbol table
(package) and may be fully qualified by package name.  Within the typeglobs of a
symbol table's entries, formats reside in their own namespace, which is distinct
from filehandles, directory handles, scalars, arrays, hashes, or subroutines.
Like those other six types, however, a format named <CODE
CLASS="literal"
>Whatever</CODE
>
would also be affected by a <A
CLASS="xref"
HREF="ch03_087.htm"
TITLE="local"
><B
CLASS="xref.cmd"
>local</B
></A
> on the
<CODE
CLASS="literal"
>*Whatever</CODE
> typeglob.  In other words, a format is just another
gadget contained in a typeglob, independent of the other gadgets.</P
><P
CLASS="para"
>The &quot;Formats&quot; section in <A
CLASS="xref"
HREF="ch02_01.htm"
TITLE="The Gory Details"
>Chapter 2</A
> contains numerous details
and examples of their use.  The &quot;Per Filehandle Special Variables&quot; and &quot;Global
Special Variables&quot; sections in <A
CLASS="xref"
HREF="ch02_01.htm"
TITLE="The Gory Details"
>Chapter 2</A
> describe the internal
format-specific variables, and the English and FileHandle modules in <A
CLASS="xref"
HREF="ch07_01.htm"
TITLE="The Standard Perl Library"
>Chapter 7</A
> provide easier access to them.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_040.htm"
TITLE="3.2.40 fork"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.40 fork"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_042.htm"
TITLE="3.2.42 formline"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.42 formline"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.40 fork</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.42 formline</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
