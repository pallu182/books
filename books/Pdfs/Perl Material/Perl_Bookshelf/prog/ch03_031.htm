<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.31 eof</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:48:57Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_030.htm"
TITLE="3.2.30 each"><LINK
REL="next"
HREF="ch03_032.htm"
TITLE="3.2.32 eval"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_030.htm"
TITLE="3.2.30 each"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.30 each"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_032.htm"
TITLE="3.2.32 eval"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.32 eval"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-EOF"
>3.2.31 eof</A
></H3
><PRE
CLASS="programlisting"
>eof <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>
eof()
eof</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9730"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9732"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9735"
></A
><A
CLASS="indexterm"
NAME="AUTOID-9738"
></A
>This function returns true if the next read on <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> will return
end of file, or if <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> is not open.
<CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> may be an expression whose value gives the real filehandle
name.
An <A
CLASS="xref"
HREF="ch03_031.htm"
TITLE="eof"
><B
CLASS="xref.cmd"
>eof</B
></A
> without an argument returns the end-of-file
status for the last file read.
Empty parentheses <CODE
CLASS="literal"
>()</CODE
> may be used in connection with the
combined files listed on the command line.  That is, inside a
<CODE
CLASS="literal"
>while (&lt;&gt;)</CODE
> loop <CODE
CLASS="literal"
>eof()</CODE
> will detect the
end of only the last of a group of files.
Use <CODE
CLASS="literal"
>eof(ARGV)</CODE
> or <CODE
CLASS="literal"
>eof</CODE
> (without the parentheses) to test
<EM
CLASS="emphasis"
>each</EM
> file in a <CODE
CLASS="literal"
>while (&lt;&gt;)</CODE
> loop.  For example, the
following code inserts dashes just before the last line of
the <EM
CLASS="emphasis"
>last</EM
>
file:</P
><PRE
CLASS="programlisting"
>while (&lt;&gt;) {
    if (eof()) {
        print &quot;-&quot; x 30, &quot;\n&quot;;
    }
    print;
}</PRE
><P
CLASS="para"
>On the other hand, this script resets line numbering on <EM
CLASS="emphasis"
>each</EM
>
input file:</P
><PRE
CLASS="programlisting"
>while (&lt;&gt;) {
    print &quot;$.\t$_&quot;;
    if (eof) {       # Not eof().
        close ARGV;  # reset $.
    }
}</PRE
><P
CLASS="para"
>Like &quot;<CODE
CLASS="literal"
>$</CODE
>&quot; in a <EM
CLASS="emphasis"
>sed</EM
> program, <A
CLASS="xref"
HREF="ch03_031.htm"
TITLE="eof"
><B
CLASS="xref.cmd"
>eof</B
></A
> tends to show up in
line number ranges.  Here's a script that prints lines from
<CODE
CLASS="literal"
>/pattern/</CODE
> to end of each input file:</P
><PRE
CLASS="programlisting"
>while (&lt;&gt;) {
    print if /pattern/ .. eof;
}</PRE
><P
CLASS="para"
>Here, the flip-flop operator (<CODE
CLASS="literal"
>..</CODE
>) evaluates the regular expression
match for each line.  Until the pattern matches, the operator returns
false.  When it finally matches, the operator starts returning true,
causing the lines to be printed.  When the <A
CLASS="xref"
HREF="ch03_031.htm"
TITLE="eof"
><B
CLASS="xref.cmd"
>eof</B
></A
> operator finally
returns true (at the end of the file being examined), the flip-flop
operator resets, and starts returning false again.</P
><P
CLASS="para"
>Note that the <A
CLASS="xref"
HREF="ch03_031.htm"
TITLE="eof"
><B
CLASS="xref.cmd"
>eof</B
></A
> function actually reads a byte and then
pushes it back on the input stream with
<EM
CLASS="emphasis"
>ungetc</EM
>(3), so it is not very useful in an interactive context.
In fact, experienced Perl programmers rarely use <A
CLASS="xref"
HREF="ch03_031.htm"
TITLE="eof"
><B
CLASS="xref.cmd"
>eof</B
></A
>, since the various
input operators already behave quite nicely in <B
CLASS="emphasis.bold"
>while</B
>-loop conditionals.
See the example in the description of <B
CLASS="emphasis.bold"
>foreach</B
> in <A
CLASS="xref"
HREF="ch02_01.htm"
TITLE="The Gory Details"
>Chapter 2</A
>.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_030.htm"
TITLE="3.2.30 each"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.30 each"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_032.htm"
TITLE="3.2.32 eval"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.32 eval"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.30 each</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.32 eval</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
