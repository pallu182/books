<HTML
><HEAD
>
<TITLE>[Chapter 3] 3.2.134 select (output filehandle)</TITLE>
<META
NAME="DC.title"
CONTENT="Programming Perl"><META
NAME="DC.creator"
CONTENT="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:53:43Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-149-6"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_02.htm"
TITLE="3.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="ch03_133.htm"
TITLE="3.2.133 seekdir"><LINK
REL="next"
HREF="ch03_135.htm"
TITLE="3.2.135 select (ready file descriptors)"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Programming Perl"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Programming Perl"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/psrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_133.htm"
TITLE="3.2.133 seekdir"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.133 seekdir"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Functions"
>Chapter 3<BR>Functions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_135.htm"
TITLE="3.2.135 select (ready file descriptors)"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.135 select (ready file descriptors)"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PERL2-CMD-SELECT-OUT"
>3.2.134 select (output filehandle)</A
></H3
><PRE
CLASS="programlisting"
>select <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>
select</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-12521"
></A
><A
CLASS="indexterm"
NAME="AUTOID-12523"
></A
><A
CLASS="indexterm"
NAME="AUTOID-12526"
></A
>For historical reasons, there are two <B
CLASS="emphasis.bold"
>select</B
>
operators that are totally unrelated to each other.  See the next section for
the other one.  This <B
CLASS="emphasis.bold"
>select</B
> operator returns
the currently selected output filehandle, and if
<CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> is supplied, sets the current default
filehandle for output.  This has two effects: first, a <A
CLASS="xref"
HREF="ch03_193.htm"
TITLE="write"
><B
CLASS="xref.cmd"
>write</B
></A
> or a <A
CLASS="xref"
HREF="ch03_110.htm"
TITLE="print"
><B
CLASS="xref.cmd"
>print</B
></A
>
without a filehandle will default to this <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
>.
Second, special variables related to output will refer to this output
filehandle.  For example, if you have to set the same top-of-form format for
more than one output filehandle, you might do the following:<A
CLASS="indexterm"
NAME="AUTOID-12535"
></A
></P
><PRE
CLASS="programlisting"
>select REPORT1;
$^ = 'MyTop';
select REPORT2;
$^ = 'MyTop';</PRE
><P
CLASS="para"
>But note that this leaves <CODE
CLASS="literal"
>REPORT2</CODE
> as the currently selected
filehandle.  This could be construed as antisocial, since it could really foul
up some other routine's <A
CLASS="xref"
HREF="ch03_110.htm"
TITLE="print"
><B
CLASS="xref.cmd"
>print</B
></A
> or <A
CLASS="xref"
HREF="ch03_193.htm"
TITLE="write"
><B
CLASS="xref.cmd"
>write</B
></A
> statements.  Properly written library
routines leave the currently selected filehandle the same on exit as it was upon
entry. To support this, <CODE
CLASS="replaceable"
><I
>FILEHANDLE</I
></CODE
> may be an
expression whose value gives the name of the actual filehandle.  Thus, you can
save and restore the currently selected filehandle:</P
><PRE
CLASS="programlisting"
>my $oldfh = select STDERR; $| = 1; select $oldfh;</PRE
><P
CLASS="para"
>or (being bizarre and obscure):</P
><PRE
CLASS="programlisting"
>select((select(STDERR), $| = 1)[0])</PRE
><P
CLASS="para"
>This example works by building a list consisting of the returned value from
<CODE
CLASS="literal"
>select(STDERR)</CODE
> (which selects <CODE
CLASS="literal"
>STDERR</CODE
> as a
side effect) and <CODE
CLASS="literal"
>$| = 1</CODE
> (which is always 1), but sets
autoflushing on the now-selected <CODE
CLASS="literal"
>STDERR</CODE
> as a side effect.
The first element of that list (the previously selected filehandle) is now used
as an argument to the outer <B
CLASS="emphasis.bold"
>select</B
>.
Bizarre, right?  That's what you get for knowing just enough Lisp to be
dangerous.</P
><P
CLASS="para"
>However, now that we've explained all that, we should point out that you rarely
need to use this form of <B
CLASS="emphasis.bold"
>select</B
> nowadays,
because most of the special variables you would want to set have object-oriented
wrapper methods to do it for you.  So instead of setting <CODE
CLASS="literal"
>$|</CODE
>
directly, you might say:</P
><PRE
CLASS="programlisting"
>use FileHandle;
STDOUT-&gt;autoflush(1);</PRE
><P
CLASS="para"
>And the earlier format example might be coded as:</P
><PRE
CLASS="programlisting"
>use FileHandle;
REPORT1-&gt;format_top_name(&quot;MyTop&quot;);
REPORT2-&gt;format_top_name(&quot;MyTop&quot;);</PRE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_133.htm"
TITLE="3.2.133 seekdir"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2.133 seekdir"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Programming Perl"
><IMG
SRC="../gifs/txthome.gif"
ALT="Programming Perl"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT2"
HREF="ch03_135.htm"
TITLE="3.2.135 select (ready file descriptors)"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.2.135 select (ready file descriptors)"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2.133 seekdir</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.2.135 select (ready file descriptors)</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
>[ <A
HREF="../index.htm"
TITLE="The Perl CD Bookshelf"
>Library Home</A
> | <A
HREF="../perlnut/index.htm"
TITLE="Perl in a Nutshell"
>Perl in a Nutshell</A
> | <A
HREF="../learn/index.htm"
TITLE="Learning Perl"
>Learning Perl</A
> | <A
HREF="../learn32/index.htm"
TITLE="Learning Perl on Win32 Systems"
>Learning Perl on Win32</A
> | <A
HREF="index.htm"
TITLE="Programming Perl"
>Programming Perl</A
> | <A
HREF="../advprog/index.htm"
TITLE="Advanced Perl Programming"
>Advanced Perl Programming</A
> | <A
HREF="../cookbook/index.htm"
TITLE="Perl Cookbook"
>Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
